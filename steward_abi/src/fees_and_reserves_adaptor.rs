pub use feesandreservesadaptor_mod::*;
#[allow(clippy::too_many_arguments)]
mod feesandreservesadaptor_mod {
    #![allow(clippy::enum_variant_names)]
    #![allow(dead_code)]
    #![allow(clippy::type_complexity)]
    #![allow(unused_imports)]
    use ethers::contract::{
        builders::{ContractCall, Event},
        Contract, Lazy,
    };
    use ethers::core::{
        abi::{Abi, Detokenize, InvalidOutputType, Token, Tokenizable},
        types::*,
    };
    use ethers::providers::Middleware;
    #[doc = "FeesAndReservesAdaptor was auto-generated with ethers-rs Abigen. More information at: https://github.com/gakonst/ethers-rs"]
    use std::sync::Arc;
    pub static FEESANDRESERVESADAPTOR_ABI: ethers::contract::Lazy<ethers::core::abi::Abi> =
        ethers::contract::Lazy::new(|| {
            serde_json :: from_str ("{\n  \"abi\": [\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__ExternalReceiverBlocked\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"asset\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"BaseAdaptor__PricingNotSupported\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__Slippage\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__UserDepositsNotAllowed\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__UserWithdrawsNotAllowed\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addAssetsToReserves\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"assetOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract ERC20\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"adaptorData\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"assetsUsed\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract ERC20[]\",\n          \"name\": \"assets\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint64\",\n          \"name\": \"newFrequency\",\n          \"type\": \"uint64\"\n        }\n      ],\n      \"name\": \"changeUpkeepFrequency\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint64\",\n          \"name\": \"newMaxGas\",\n          \"type\": \"uint64\"\n        }\n      ],\n      \"name\": \"changeUpkeepMaxGas\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"deposit\",\n      \"outputs\": [],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"feesAndReserves\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract FeesAndReserves\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"identifier\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"isDebt\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"prepareFees\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"contract ERC20\",\n          \"name\": \"asset\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"revokeApproval\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"managementFee\",\n          \"type\": \"uint32\"\n        },\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"performanceFee\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"name\": \"setupMetaData\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"slippage\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"managementFee\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"name\": \"updateManagementFee\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"performanceFee\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"name\": \"updatePerformanceFee\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"withdraw\",\n      \"outputs\": [],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"withdrawAssetsFromReserves\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"withdrawableFrom\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    }\n  ],\n  \"bytecode\": {\n    \"object\": \"0x608060405234801561001057600080fd5b50610d64806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063aeffddde116100ad578063e170a9bf11610071578063e170a9bf1461025c578063f2a44d4e1461026a578063f5f30a5e1461027d578063fa50e5d214610290578063fa531255146102a357600080fd5b8063aeffddde146101f0578063c1cc8d7f14610210578063c9111bd714610223578063cabad50a14610236578063d3bfe76a1461024957600080fd5b806369445c31116100f457806369445c311461019157806378415365146101a45780637998a1c4146101c657806389353a09146101ce578063a5a36dd2146101dd57600080fd5b80630b050709146101265780633e032a3b146101595780635303907d14610169578063556d18df1461017e575b600080fd5b73a0cb889707d426a7a386870a03bc70d1b06975985b6040516001600160a01b0390911681526020015b60405180910390f35b6040516123288152602001610150565b61017c6101773660046108be565b6102b6565b005b61017c61018c3660046108ec565b61031f565b61017c61019f3660046109b3565b61035c565b6101b86101b2366004610a20565b50600090565b604051908152602001610150565b6101b8610375565b60405160008152602001610150565b61017c6101eb366004610a73565b6103d3565b6102036101fe366004610a20565b610414565b6040516101509190610a90565b61017c61021e3660046108ec565b610470565b61017c610231366004610af2565b6104ad565b61017c6102443660046108be565b6104c6565b61017c610257366004610b72565b610614565b61013c6101b2366004610a20565b61017c610278366004610a73565b610629565b61017c61028b3660046108be565b61066a565b6101b861029e366004610bab565b6106a2565b61017c6102b1366004610c0f565b6106ab565b604051635303907d60e01b81526004810182905273a0cb889707d426a7a386870a03bc70d1b069759890635303907d906024015b600060405180830381600087803b15801561030457600080fd5b505af1158015610318573d6000803e3d6000fd5b5050505050565b60405163556d18df60e01b815263ffffffff8216600482015273a0cb889707d426a7a386870a03bc70d1b06975989063556d18df906024016102ea565b604051633204ed5b60e21b815260040160405180910390fd5b60006040516020016103b8906020808252601f908201527f4665657320416e642052657365727665732041646170746f72205620312e3000604082015260600190565b60405160208183030381529060405280519060200120905090565b6040516352d1b6e960e11b815267ffffffffffffffff8216600482015273a0cb889707d426a7a386870a03bc70d1b06975989063a5a36dd2906024016102ea565b6040805160018082528183019092526060916020808301908036833701905050905060008160008151811061044b5761044b610c3d565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b60405163c1cc8d7f60e01b815263ffffffff8216600482015273a0cb889707d426a7a386870a03bc70d1b06975989063c1cc8d7f906024016102ea565b604051635f5003c560e11b815260040160405180910390fd5b600073a0cb889707d426a7a386870a03bc70d1b0697598604051630686ddd960e01b81523060048201526001600160a01b039190911690630686ddd99060240161014060405180830381865afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190610c69565b505050505050505050905061055d818361072d565b91506105876001600160a01b03821673a0cb889707d426a7a386870a03bc70d1b0697598846107ae565b60405163655d6a8560e11b81526004810183905273a0cb889707d426a7a386870a03bc70d1b06975989063cabad50a90602401600060405180830381600087803b1580156105d457600080fd5b505af11580156105e8573d6000803e3d6000fd5b505050506106108161060b73a0cb889707d426a7a386870a03bc70d1b069759890565b61082f565b5050565b6106106001600160a01b0383168260006107ae565b60405163795226a760e11b815267ffffffffffffffff8216600482015273a0cb889707d426a7a386870a03bc70d1b06975989063f2a44d4e906024016102ea565b604051637af9852f60e11b81526004810182905273a0cb889707d426a7a386870a03bc70d1b06975989063f5f30a5e906024016102ea565b60005b92915050565b73a0cb889707d426a7a386870a03bc70d1b069759860405163fa53125560e01b815263ffffffff8085166004830152831660248201526001600160a01b03919091169063fa53125590604401600060405180830381600087803b15801561071157600080fd5b505af1158015610725573d6000803e3d6000fd5b505050505050565b600060001982036107a7576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa15801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190610d15565b90506106a5565b50806106a5565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806108295760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190610d15565b1115610610576106106001600160a01b0383168260006107ae565b6000602082840312156108d057600080fd5b5035919050565b63ffffffff811681146108e957600080fd5b50565b6000602082840312156108fe57600080fd5b8135610909816108d7565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261093757600080fd5b813567ffffffffffffffff8082111561095257610952610910565b604051601f8301601f19908116603f0116810190828211818310171561097a5761097a610910565b8160405283815286602085880101111561099357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156109c857600080fd5b83359250602084013567ffffffffffffffff808211156109e757600080fd5b6109f387838801610926565b93506040860135915080821115610a0957600080fd5b50610a1686828701610926565b9150509250925092565b600060208284031215610a3257600080fd5b813567ffffffffffffffff811115610a4957600080fd5b610a5584828501610926565b949350505050565b67ffffffffffffffff811681146108e957600080fd5b600060208284031215610a8557600080fd5b813561090981610a5d565b6020808252825182820181905260009190848201906040850190845b81811015610ad15783516001600160a01b031683529284019291840191600101610aac565b50909695505050505050565b6001600160a01b03811681146108e957600080fd5b60008060008060808587031215610b0857600080fd5b843593506020850135610b1a81610add565b9250604085013567ffffffffffffffff80821115610b3757600080fd5b610b4388838901610926565b93506060870135915080821115610b5957600080fd5b50610b6687828801610926565b91505092959194509250565b60008060408385031215610b8557600080fd5b8235610b9081610add565b91506020830135610ba081610add565b809150509250929050565b60008060408385031215610bbe57600080fd5b823567ffffffffffffffff80821115610bd657600080fd5b610be286838701610926565b93506020850135915080821115610bf857600080fd5b50610c0585828601610926565b9150509250929050565b60008060408385031215610c2257600080fd5b8235610c2d816108d7565b91506020830135610ba0816108d7565b634e487b7160e01b600052603260045260246000fd5b805160ff81168114610c6457600080fd5b919050565b6000806000806000806000806000806101408b8d031215610c8957600080fd5b8a51610c9481610add565b60208c0151909a50610ca5816108d7565b60408c0151909950610cb681610a5d565b8098505060608b0151965060808b0151955060a08b0151945060c08b01519350610ce260e08c01610c53565b9250610cf16101008c01610c53565b91506101208b0151610d02816108d7565b809150509295989b9194979a5092959850565b600060208284031215610d2757600080fd5b505191905056fea26469706673582212200c03454aa1f57ec254742035d0b062563ae63fc86ce51f0a32056d109082bfb564736f6c63430008100033\",\n    \"sourceMap\": \"540:4522:84:-:0;;;;;;;;;;;;;;;;;;;\",\n    \"linkReferences\": {}\n  },\n  \"deployedBytecode\": {\n    \"object\": \"0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063aeffddde116100ad578063e170a9bf11610071578063e170a9bf1461025c578063f2a44d4e1461026a578063f5f30a5e1461027d578063fa50e5d214610290578063fa531255146102a357600080fd5b8063aeffddde146101f0578063c1cc8d7f14610210578063c9111bd714610223578063cabad50a14610236578063d3bfe76a1461024957600080fd5b806369445c31116100f457806369445c311461019157806378415365146101a45780637998a1c4146101c657806389353a09146101ce578063a5a36dd2146101dd57600080fd5b80630b050709146101265780633e032a3b146101595780635303907d14610169578063556d18df1461017e575b600080fd5b73a0cb889707d426a7a386870a03bc70d1b06975985b6040516001600160a01b0390911681526020015b60405180910390f35b6040516123288152602001610150565b61017c6101773660046108be565b6102b6565b005b61017c61018c3660046108ec565b61031f565b61017c61019f3660046109b3565b61035c565b6101b86101b2366004610a20565b50600090565b604051908152602001610150565b6101b8610375565b60405160008152602001610150565b61017c6101eb366004610a73565b6103d3565b6102036101fe366004610a20565b610414565b6040516101509190610a90565b61017c61021e3660046108ec565b610470565b61017c610231366004610af2565b6104ad565b61017c6102443660046108be565b6104c6565b61017c610257366004610b72565b610614565b61013c6101b2366004610a20565b61017c610278366004610a73565b610629565b61017c61028b3660046108be565b61066a565b6101b861029e366004610bab565b6106a2565b61017c6102b1366004610c0f565b6106ab565b604051635303907d60e01b81526004810182905273a0cb889707d426a7a386870a03bc70d1b069759890635303907d906024015b600060405180830381600087803b15801561030457600080fd5b505af1158015610318573d6000803e3d6000fd5b5050505050565b60405163556d18df60e01b815263ffffffff8216600482015273a0cb889707d426a7a386870a03bc70d1b06975989063556d18df906024016102ea565b604051633204ed5b60e21b815260040160405180910390fd5b60006040516020016103b8906020808252601f908201527f4665657320416e642052657365727665732041646170746f72205620312e3000604082015260600190565b60405160208183030381529060405280519060200120905090565b6040516352d1b6e960e11b815267ffffffffffffffff8216600482015273a0cb889707d426a7a386870a03bc70d1b06975989063a5a36dd2906024016102ea565b6040805160018082528183019092526060916020808301908036833701905050905060008160008151811061044b5761044b610c3d565b60200260200101906001600160a01b031690816001600160a01b031681525050919050565b60405163c1cc8d7f60e01b815263ffffffff8216600482015273a0cb889707d426a7a386870a03bc70d1b06975989063c1cc8d7f906024016102ea565b604051635f5003c560e11b815260040160405180910390fd5b600073a0cb889707d426a7a386870a03bc70d1b0697598604051630686ddd960e01b81523060048201526001600160a01b039190911690630686ddd99060240161014060405180830381865afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190610c69565b505050505050505050905061055d818361072d565b91506105876001600160a01b03821673a0cb889707d426a7a386870a03bc70d1b0697598846107ae565b60405163655d6a8560e11b81526004810183905273a0cb889707d426a7a386870a03bc70d1b06975989063cabad50a90602401600060405180830381600087803b1580156105d457600080fd5b505af11580156105e8573d6000803e3d6000fd5b505050506106108161060b73a0cb889707d426a7a386870a03bc70d1b069759890565b61082f565b5050565b6106106001600160a01b0383168260006107ae565b60405163795226a760e11b815267ffffffffffffffff8216600482015273a0cb889707d426a7a386870a03bc70d1b06975989063f2a44d4e906024016102ea565b604051637af9852f60e11b81526004810182905273a0cb889707d426a7a386870a03bc70d1b06975989063f5f30a5e906024016102ea565b60005b92915050565b73a0cb889707d426a7a386870a03bc70d1b069759860405163fa53125560e01b815263ffffffff8085166004830152831660248201526001600160a01b03919091169063fa53125590604401600060405180830381600087803b15801561071157600080fd5b505af1158015610725573d6000803e3d6000fd5b505050505050565b600060001982036107a7576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa15801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190610d15565b90506106a5565b50806106a5565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806108295760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e90604401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190610d15565b1115610610576106106001600160a01b0383168260006107ae565b6000602082840312156108d057600080fd5b5035919050565b63ffffffff811681146108e957600080fd5b50565b6000602082840312156108fe57600080fd5b8135610909816108d7565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261093757600080fd5b813567ffffffffffffffff8082111561095257610952610910565b604051601f8301601f19908116603f0116810190828211818310171561097a5761097a610910565b8160405283815286602085880101111561099357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156109c857600080fd5b83359250602084013567ffffffffffffffff808211156109e757600080fd5b6109f387838801610926565b93506040860135915080821115610a0957600080fd5b50610a1686828701610926565b9150509250925092565b600060208284031215610a3257600080fd5b813567ffffffffffffffff811115610a4957600080fd5b610a5584828501610926565b949350505050565b67ffffffffffffffff811681146108e957600080fd5b600060208284031215610a8557600080fd5b813561090981610a5d565b6020808252825182820181905260009190848201906040850190845b81811015610ad15783516001600160a01b031683529284019291840191600101610aac565b50909695505050505050565b6001600160a01b03811681146108e957600080fd5b60008060008060808587031215610b0857600080fd5b843593506020850135610b1a81610add565b9250604085013567ffffffffffffffff80821115610b3757600080fd5b610b4388838901610926565b93506060870135915080821115610b5957600080fd5b50610b6687828801610926565b91505092959194509250565b60008060408385031215610b8557600080fd5b8235610b9081610add565b91506020830135610ba081610add565b809150509250929050565b60008060408385031215610bbe57600080fd5b823567ffffffffffffffff80821115610bd657600080fd5b610be286838701610926565b93506020850135915080821115610bf857600080fd5b50610c0585828601610926565b9150509250929050565b60008060408385031215610c2257600080fd5b8235610c2d816108d7565b91506020830135610ba0816108d7565b634e487b7160e01b600052603260045260246000fd5b805160ff81168114610c6457600080fd5b919050565b6000806000806000806000806000806101408b8d031215610c8957600080fd5b8a51610c9481610add565b60208c0151909a50610ca5816108d7565b60408c0151909950610cb681610a5d565b8098505060608b0151965060808b0151955060a08b0151945060c08b01519350610ce260e08c01610c53565b9250610cf16101008c01610c53565b91506101208b0151610d02816108d7565b809150509295989b9194979a5092959850565b600060208284031215610d2757600080fd5b505191905056fea26469706673582212200c03454aa1f57ec254742035d0b062563ae63fc86ce51f0a32056d109082bfb564736f6c63430008100033\",\n    \"sourceMap\": \"540:4522:84:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:156;1877:42;1771:156;;;-1:-1:-1;;;;;203:32:98;;;185:51;;173:2;158:18;1771:156:84;;;;;;;;2203:78:78;;;2269:5;391:42:98;;379:2;364:18;2203:78:78;247:192:98;4962:98:84;;;;;;:::i;:::-;;:::i;:::-;;2358:131;;;;;;:::i;:::-;;:::i;510:136:86:-;;;;;;:::i;:::-;;:::i;1150:97::-;;;;;;:::i;:::-;-1:-1:-1;1213:7:86;;1150:97;;;;2943:25:98;;;2931:2;2916:18;1150:97:86;2797:177:98;1561:141:84;;;:::i;1535:83:86:-;;;1583:4;3301:41:98;;3289:2;3274:18;1535:83:86;3161:187:98;3050:129:84;;;;;;:::i;:::-;;:::i;5441:180:78:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2802:127:84:-;;;;;;:::i;:::-;;:::i;715:147:86:-;;;;;;:::i;:::-;;:::i;3942:467:84:-;;;;;;:::i;:::-;;:::i;8378:107:78:-;;;;;;:::i;:::-;;:::i;1340:109:86:-;;;;;;:::i;3303:117:84:-;;;;;;:::i;:::-;;:::i;4671:128::-;;;;;;:::i;:::-;;:::i;947:118:86:-;;;;;;:::i;:::-;;:::i;3526:154:84:-;;;;;;:::i;:::-;;:::i;4962:98::-;5016:37;;-1:-1:-1;;;5016:37:84;;;;;2943:25:98;;;1877:42:84;;5016:29;;2916:18:98;;5016:37:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4962:98;:::o;2358:131::-;2428:54;;-1:-1:-1;;;2428:54:84;;;409:23:98;;2428:54:84;;;391:42:98;1877::84;;2428:38;;364:18:98;;2428:54:84;247:192:98;510:136:86;602:37;;-1:-1:-1;;;602:37:86;;;;;;;;;;;1561:141:84;1613:7;1649:45;;;;;;7065:2:98;7047:21;;;7104:2;7084:18;;;7077:30;7143:33;7138:2;7123:18;;7116:61;7209:2;7194:18;;6863:355;1649:45:84;;;;;;;;;;;;;1639:56;;;;;;1632:63;;1561:141;:::o;3050:129::-;3119:53;;-1:-1:-1;;;3119:53:84;;7397:18:98;7385:31;;3119:53:84;;;7367:50:98;1877:42:84;;3119:39;;7340:18:98;;3119:53:84;7223:200:98;5441:180:78;5558:14;;;5570:1;5558:14;;;;;;;;;5516:21;;5558:14;;;;;;;;;;;-1:-1:-1;;5549:23:78;-1:-1:-1;1213:7:86;5582:6:78;5589:1;5582:9;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;5582:32:78;;;-1:-1:-1;;;;;5582:32:78;;;;;5441:180;;;:::o;2802:127:84:-;2870:52;;-1:-1:-1;;;2870:52:84;;;409:23:98;;2870:52:84;;;391:42:98;1877::84;;2870:37;;364:18:98;;2870:52:84;247:192:98;715:147:86;817:38;;-1:-1:-1;;;817:38:86;;;;;;;;;;;3942:467:84;4005:11;1877:42;4038:49;;-1:-1:-1;;;4038:49:84;;4080:4;4038:49;;;185:51:98;-1:-1:-1;;;;;4038:26:84;;;;;;;158:18:98;;4038:49:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4004:83;;;;;;;;;;;4106:28;4120:5;4127:6;4106:13;:28::i;:::-;4097:37;-1:-1:-1;4144:53:84;-1:-1:-1;;;;;4144:17:84;;1877:42;4097:37;4144:17;:53::i;:::-;4207:45;;-1:-1:-1;;;4207:45:84;;;;;2943:25:98;;;1877:42:84;;4207:37;;2916:18:98;;4207:45:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4344:58;4368:5;4383:17;1877:42;;1771:156;4383:17;4344:23;:58::i;:::-;3994:415;3942:467;:::o;8378:107:78:-;8449:29;-1:-1:-1;;;;;8449:17:78;;8467:7;8476:1;8449:17;:29::i;3303:117:84:-;3366:47;;-1:-1:-1;;;3366:47:84;;7397:18:98;7385:31;;3366:47:84;;;7367:50:98;1877:42:84;;3366:36;;7340:18:98;;3366:47:84;7223:200:98;4671:128:84;4740:52;;-1:-1:-1;;;4740:52:84;;;;;2943:25:98;;;1877:42:84;;4740:44;;2916:18:98;;4740:52:84;2797:177:98;947:118:86;1031:7;947:118;;;;;:::o;3526:154:84:-;1877:42;3611:62;;-1:-1:-1;;;3611:62:84;;;9246:15:98;;;3611:62:84;;;9228:34:98;9298:15;;9278:18;;;9271:43;-1:-1:-1;;;;;3611:31:84;;;;;;;9172:18:98;;3611:62:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3526:154;;:::o;7323:207:78:-;7406:7;-1:-1:-1;;7429:6:78;:27;7425:98;;7465:30;;-1:-1:-1;;;7465:30:78;;7489:4;7465:30;;;185:51:98;-1:-1:-1;;;;;7465:15:78;;;;;158:18:98;;7465:30:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7458:37;;;;7425:98;-1:-1:-1;7517:6:78;7510:13;;4327:1454:48;4438:12;4565:4;4559:11;-1:-1:-1;;;4688:17:48;4681:93;4821:2;4817:1;4798:17;4794:25;4787:37;4901:6;4896:2;4877:17;4873:26;4866:42;5703:2;5700:1;5696:2;5677:17;5674:1;5667:5;5660;5655:51;5224:16;5217:24;5211:2;5193:16;5190:24;5186:1;5182;5176:8;5173:15;5169:46;5166:76;4966:754;4955:765;;;5748:7;5740:34;;;;-1:-1:-1;;;5740:34:48;;9924:2:98;5740:34:48;;;9906:21:98;9963:2;9943:18;;;9936:30;-1:-1:-1;;;9982:18:98;;;9975:44;10036:18;;5740:34:48;;;;;;;;4428:1353;4327:1454;;;:::o;7665:167:78:-;7751:39;;-1:-1:-1;;;7751:39:78;;7775:4;7751:39;;;10277:34:98;-1:-1:-1;;;;;10347:15:98;;;10327:18;;;10320:43;7793:1:78;;7751:15;;;;;;10212:18:98;;7751:39:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;7747:78;;;7796:29;-1:-1:-1;;;;;7796:17:78;;7814:7;7823:1;7796:17;:29::i;444:180:98:-;503:6;556:2;544:9;535:7;531:23;527:32;524:52;;;572:1;569;562:12;524:52;-1:-1:-1;595:23:98;;444:180;-1:-1:-1;444:180:98:o;629:121::-;714:10;707:5;703:22;696:5;693:33;683:61;;740:1;737;730:12;683:61;629:121;:::o;755:245::-;813:6;866:2;854:9;845:7;841:23;837:32;834:52;;;882:1;879;872:12;834:52;921:9;908:23;940:30;964:5;940:30;:::i;:::-;989:5;755:245;-1:-1:-1;;;755:245:98:o;1005:127::-;1066:10;1061:3;1057:20;1054:1;1047:31;1097:4;1094:1;1087:15;1121:4;1118:1;1111:15;1137:718;1179:5;1232:3;1225:4;1217:6;1213:17;1209:27;1199:55;;1250:1;1247;1240:12;1199:55;1286:6;1273:20;1312:18;1349:2;1345;1342:10;1339:36;;;1355:18;;:::i;:::-;1430:2;1424:9;1398:2;1484:13;;-1:-1:-1;;1480:22:98;;;1504:2;1476:31;1472:40;1460:53;;;1528:18;;;1548:22;;;1525:46;1522:72;;;1574:18;;:::i;:::-;1614:10;1610:2;1603:22;1649:2;1641:6;1634:18;1695:3;1688:4;1683:2;1675:6;1671:15;1667:26;1664:35;1661:55;;;1712:1;1709;1702:12;1661:55;1776:2;1769:4;1761:6;1757:17;1750:4;1742:6;1738:17;1725:54;1823:1;1816:4;1811:2;1803:6;1799:15;1795:26;1788:37;1843:6;1834:15;;;;;;1137:718;;;;:::o;1860:607::-;1955:6;1963;1971;2024:2;2012:9;2003:7;1999:23;1995:32;1992:52;;;2040:1;2037;2030:12;1992:52;2076:9;2063:23;2053:33;;2137:2;2126:9;2122:18;2109:32;2160:18;2201:2;2193:6;2190:14;2187:34;;;2217:1;2214;2207:12;2187:34;2240:49;2281:7;2272:6;2261:9;2257:22;2240:49;:::i;:::-;2230:59;;2342:2;2331:9;2327:18;2314:32;2298:48;;2371:2;2361:8;2358:16;2355:36;;;2387:1;2384;2377:12;2355:36;;2410:51;2453:7;2442:8;2431:9;2427:24;2410:51;:::i;:::-;2400:61;;;1860:607;;;;;:::o;2472:320::-;2540:6;2593:2;2581:9;2572:7;2568:23;2564:32;2561:52;;;2609:1;2606;2599:12;2561:52;2649:9;2636:23;2682:18;2674:6;2671:30;2668:50;;;2714:1;2711;2704:12;2668:50;2737:49;2778:7;2769:6;2758:9;2754:22;2737:49;:::i;:::-;2727:59;2472:320;-1:-1:-1;;;;2472:320:98:o;3353:129::-;3438:18;3431:5;3427:30;3420:5;3417:41;3407:69;;3472:1;3469;3462:12;3487:245;3545:6;3598:2;3586:9;3577:7;3573:23;3569:32;3566:52;;;3614:1;3611;3604:12;3566:52;3653:9;3640:23;3672:30;3696:5;3672:30;:::i;3737:673::-;3923:2;3975:21;;;4045:13;;3948:18;;;4067:22;;;3894:4;;3923:2;4146:15;;;;4120:2;4105:18;;;3894:4;4189:195;4203:6;4200:1;4197:13;4189:195;;;4268:13;;-1:-1:-1;;;;;4264:39:98;4252:52;;4359:15;;;;4324:12;;;;4300:1;4218:9;4189:195;;;-1:-1:-1;4401:3:98;;3737:673;-1:-1:-1;;;;;;3737:673:98:o;4415:131::-;-1:-1:-1;;;;;4490:31:98;;4480:42;;4470:70;;4536:1;4533;4526:12;4551:743;4655:6;4663;4671;4679;4732:3;4720:9;4711:7;4707:23;4703:33;4700:53;;;4749:1;4746;4739:12;4700:53;4785:9;4772:23;4762:33;;4845:2;4834:9;4830:18;4817:32;4858:31;4883:5;4858:31;:::i;:::-;4908:5;-1:-1:-1;4964:2:98;4949:18;;4936:32;4987:18;5017:14;;;5014:34;;;5044:1;5041;5034:12;5014:34;5067:49;5108:7;5099:6;5088:9;5084:22;5067:49;:::i;:::-;5057:59;;5169:2;5158:9;5154:18;5141:32;5125:48;;5198:2;5188:8;5185:16;5182:36;;;5214:1;5211;5204:12;5182:36;;5237:51;5280:7;5269:8;5258:9;5254:24;5237:51;:::i;:::-;5227:61;;;4551:743;;;;;;;:::o;5299:403::-;5382:6;5390;5443:2;5431:9;5422:7;5418:23;5414:32;5411:52;;;5459:1;5456;5449:12;5411:52;5498:9;5485:23;5517:31;5542:5;5517:31;:::i;:::-;5567:5;-1:-1:-1;5624:2:98;5609:18;;5596:32;5637:33;5596:32;5637:33;:::i;:::-;5689:7;5679:17;;;5299:403;;;;;:::o;5930:539::-;6016:6;6024;6077:2;6065:9;6056:7;6052:23;6048:32;6045:52;;;6093:1;6090;6083:12;6045:52;6133:9;6120:23;6162:18;6203:2;6195:6;6192:14;6189:34;;;6219:1;6216;6209:12;6189:34;6242:49;6283:7;6274:6;6263:9;6259:22;6242:49;:::i;:::-;6232:59;;6344:2;6333:9;6329:18;6316:32;6300:48;;6373:2;6363:8;6360:16;6357:36;;;6389:1;6386;6379:12;6357:36;;6412:51;6455:7;6444:8;6433:9;6429:24;6412:51;:::i;:::-;6402:61;;;5930:539;;;;;:::o;6474:384::-;6540:6;6548;6601:2;6589:9;6580:7;6576:23;6572:32;6569:52;;;6617:1;6614;6607:12;6569:52;6656:9;6643:23;6675:30;6699:5;6675:30;:::i;:::-;6724:5;-1:-1:-1;6781:2:98;6766:18;;6753:32;6794;6753;6794;:::i;7428:127::-;7489:10;7484:3;7480:20;7477:1;7470:31;7520:4;7517:1;7510:15;7544:4;7541:1;7534:15;7784:160;7861:13;;7914:4;7903:16;;7893:27;;7883:55;;7934:1;7931;7924:12;7883:55;7784:160;;;:::o;7949:1075::-;8108:6;8116;8124;8132;8140;8148;8156;8164;8172;8180;8233:3;8221:9;8212:7;8208:23;8204:33;8201:53;;;8250:1;8247;8240:12;8201:53;8282:9;8276:16;8301:31;8326:5;8301:31;:::i;:::-;8401:2;8386:18;;8380:25;8351:5;;-1:-1:-1;8414:32:98;8380:25;8414:32;:::i;:::-;8517:2;8502:18;;8496:25;8465:7;;-1:-1:-1;8530:32:98;8496:25;8530:32;:::i;:::-;8581:7;8571:17;;;8628:2;8617:9;8613:18;8607:25;8597:35;;8672:3;8661:9;8657:19;8651:26;8641:36;;8717:3;8706:9;8702:19;8696:26;8686:36;;8762:3;8751:9;8747:19;8741:26;8731:36;;8786:48;8829:3;8818:9;8814:19;8786:48;:::i;:::-;8776:58;;8853:48;8896:3;8885:9;8881:19;8853:48;:::i;:::-;8843:58;;8946:3;8935:9;8931:19;8925:26;8960:32;8984:7;8960:32;:::i;:::-;9011:7;9001:17;;;7949:1075;;;;;;;;;;;;;:::o;9533:184::-;9603:6;9656:2;9644:9;9635:7;9631:23;9627:32;9624:52;;;9672:1;9669;9662:12;9624:52;-1:-1:-1;9695:16:98;;9533:184;-1:-1:-1;9533:184:98:o\",\n    \"linkReferences\": {}\n  },\n  \"methodIdentifiers\": {\n    \"addAssetsToReserves(uint256)\": \"cabad50a\",\n    \"assetOf(bytes)\": \"e170a9bf\",\n    \"assetsUsed(bytes)\": \"aeffddde\",\n    \"balanceOf(bytes)\": \"78415365\",\n    \"changeUpkeepFrequency(uint64)\": \"a5a36dd2\",\n    \"changeUpkeepMaxGas(uint64)\": \"f2a44d4e\",\n    \"deposit(uint256,bytes,bytes)\": \"69445c31\",\n    \"feesAndReserves()\": \"0b050709\",\n    \"identifier()\": \"7998a1c4\",\n    \"isDebt()\": \"89353a09\",\n    \"prepareFees(uint256)\": \"5303907d\",\n    \"revokeApproval(address,address)\": \"d3bfe76a\",\n    \"setupMetaData(uint32,uint32)\": \"fa531255\",\n    \"slippage()\": \"3e032a3b\",\n    \"updateManagementFee(uint32)\": \"c1cc8d7f\",\n    \"updatePerformanceFee(uint32)\": \"556d18df\",\n    \"withdraw(uint256,address,bytes,bytes)\": \"c9111bd7\",\n    \"withdrawAssetsFromReserves(uint256)\": \"f5f30a5e\",\n    \"withdrawableFrom(bytes,bytes)\": \"fa50e5d2\"\n  },\n  \"rawMetadata\": \"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.16+commit.07a7930e\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__ExternalReceiverBlocked\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"asset\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"BaseAdaptor__PricingNotSupported\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__Slippage\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__UserDepositsNotAllowed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__UserWithdrawsNotAllowed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"addAssetsToReserves\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"assetOf\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract ERC20\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"adaptorData\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"assetsUsed\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract ERC20[]\\\",\\\"name\\\":\\\"assets\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"balanceOf\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint64\\\",\\\"name\\\":\\\"newFrequency\\\",\\\"type\\\":\\\"uint64\\\"}],\\\"name\\\":\\\"changeUpkeepFrequency\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint64\\\",\\\"name\\\":\\\"newMaxGas\\\",\\\"type\\\":\\\"uint64\\\"}],\\\"name\\\":\\\"changeUpkeepMaxGas\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"deposit\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"feesAndReserves\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract FeesAndReserves\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"identifier\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"isDebt\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"prepareFees\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"contract ERC20\\\",\\\"name\\\":\\\"asset\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"spender\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"revokeApproval\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint32\\\",\\\"name\\\":\\\"managementFee\\\",\\\"type\\\":\\\"uint32\\\"},{\\\"internalType\\\":\\\"uint32\\\",\\\"name\\\":\\\"performanceFee\\\",\\\"type\\\":\\\"uint32\\\"}],\\\"name\\\":\\\"setupMetaData\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"slippage\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint32\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint32\\\",\\\"name\\\":\\\"managementFee\\\",\\\"type\\\":\\\"uint32\\\"}],\\\"name\\\":\\\"updateManagementFee\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint32\\\",\\\"name\\\":\\\"performanceFee\\\",\\\"type\\\":\\\"uint32\\\"}],\\\"name\\\":\\\"updatePerformanceFee\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"withdraw\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"withdrawAssetsFromReserves\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"withdrawableFrom\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"author\\\":\\\"crispymangoes\\\",\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{\\\"identifier()\\\":{\\\"details\\\":\\\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\\\"},\\\"revokeApproval(address,address)\\\":{\\\"params\\\":{\\\"asset\\\":\\\"the ERC20 asset to revoke `spender`s approval for\\\",\\\"spender\\\":\\\"the address to revoke approval for\\\"}}},\\\"title\\\":\\\"Fees And Reserves Adaptor\\\",\\\"version\\\":1},\\\"userdoc\\\":{\\\"errors\\\":{\\\"BaseAdaptor__ExternalReceiverBlocked()\\\":[{\\\"notice\\\":\\\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\\\"}],\\\"BaseAdaptor__PricingNotSupported(address)\\\":[{\\\"notice\\\":\\\"Attempted swap used unsupported output asset.\\\"}],\\\"BaseAdaptor__Slippage()\\\":[{\\\"notice\\\":\\\"Attempted swap has bad slippage.\\\"}],\\\"BaseAdaptor__UserDepositsNotAllowed()\\\":[{\\\"notice\\\":\\\"Attempted to deposit to a position where user deposits were not allowed.\\\"}],\\\"BaseAdaptor__UserWithdrawsNotAllowed()\\\":[{\\\"notice\\\":\\\"Attempted to withdraw from a position where user withdraws were not allowed.\\\"}]},\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{\\\"addAssetsToReserves(uint256)\\\":{\\\"notice\\\":\\\"Strategists are free to add/remove assets to reserves because it allows them to         inject yield into the cellar during time of under performance, and reserve yield         during times of over performance.\\\"},\\\"assetOf(bytes)\\\":{\\\"notice\\\":\\\"There is no underlying position so return zero address.\\\"},\\\"assetsUsed(bytes)\\\":{\\\"notice\\\":\\\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\\\"},\\\"balanceOf(bytes)\\\":{\\\"notice\\\":\\\"There is no underlying position so return zero.\\\"},\\\"changeUpkeepFrequency(uint64)\\\":{\\\"notice\\\":\\\"Allows strategist to change how frequently they want their cellars fees calculated.\\\"},\\\"changeUpkeepMaxGas(uint64)\\\":{\\\"notice\\\":\\\"Allows strategist to change the max gas they are willing to pay for fee calculations..\\\"},\\\"deposit(uint256,bytes,bytes)\\\":{\\\"notice\\\":\\\"User deposits are NOT allowed.\\\"},\\\"feesAndReserves()\\\":{\\\"notice\\\":\\\"FeesAndReserves on ETH Mainnet.\\\"},\\\"isDebt()\\\":{\\\"notice\\\":\\\"There is no underlying position so return false.\\\"},\\\"prepareFees(uint256)\\\":{\\\"notice\\\":\\\"Allows strategists to take pending fees owed, and set them up to be distributed using `sendFees` in FeesAndReserves contract.\\\"},\\\"revokeApproval(address,address)\\\":{\\\"notice\\\":\\\"Allows strategists to zero out an approval for a given `asset`.\\\"},\\\"setupMetaData(uint32,uint32)\\\":{\\\"notice\\\":\\\"Setup function strategist must call in order to use FeesAndReserves.\\\"},\\\"slippage()\\\":{\\\"notice\\\":\\\"Max possible slippage when making a swap router swap.\\\"},\\\"updateManagementFee(uint32)\\\":{\\\"notice\\\":\\\"Strategists are free to update their cellar's management fee as they see fit.         Ultimately the competition between strategists will keep this in check, since         a strategist could out perform another strategist simply because they take a smaller fee.\\\"},\\\"updatePerformanceFee(uint32)\\\":{\\\"notice\\\":\\\"Strategists are free to update their cellar's performance fee as they see fit.         Ultimately the competition between strategists will keep this in check, since         a strategist could out perform another strategist simply because they take a smaller fee.\\\"},\\\"withdraw(uint256,address,bytes,bytes)\\\":{\\\"notice\\\":\\\"User withdraws are NOT allowed.\\\"},\\\"withdrawAssetsFromReserves(uint256)\\\":{\\\"notice\\\":\\\"Strategists are free to add/remove assets to reserves because it allows them to         inject yield into the cellar during time of under performance, and reserve yield         during times of over performance.\\\"},\\\"withdrawableFrom(bytes,bytes)\\\":{\\\"notice\\\":\\\"There is no underlying position so return zero.\\\"}},\\\"notice\\\":\\\"Allows Cellars to interact with Sommelier FeesAndReserves contract         in order to store/withdraw reserves and take fees.\\\",\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"src/modules/adaptors/FeesAndReserves/FeesAndReservesAdaptor.sol\\\":\\\"FeesAndReservesAdaptor\\\"},\\\"evmVersion\\\":\\\"london\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":true,\\\"runs\\\":200},\\\"remappings\\\":[\\\":@chainlink/=lib/chainlink/\\\",\\\":@ds-test/=lib/forge-std/lib/ds-test/src/\\\",\\\":@forge-std/=lib/forge-std/src/\\\",\\\":@openzeppelin/=lib/openzeppelin-contracts/\\\",\\\":@solmate/=lib/solmate/src/\\\",\\\":@uniswap/v3-core/=lib/v3-core/\\\",\\\":@uniswap/v3-periphery/=lib/v3-periphery/\\\",\\\":@uniswapV3C/=lib/v3-core.git/contracts/\\\",\\\":@uniswapV3P/=lib/v3-periphery.git/contracts/\\\",\\\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\\\",\\\":ds-test/=lib/forge-std/lib/ds-test/src/\\\",\\\":forge-std/=lib/forge-std/src/\\\",\\\":openzeppelin-contracts/=lib/openzeppelin-contracts/\\\",\\\":solmate/=lib/solmate/src/\\\",\\\":v3-core.git/=lib/v3-core.git/contracts/\\\",\\\":v3-periphery.git/=lib/v3-periphery.git/contracts/\\\"]},\\\"sources\\\":{\\\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\\\":{\\\"keccak256\\\":\\\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\\\",\\\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\\\"]},\\\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\\\":{\\\"keccak256\\\":\\\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\\\",\\\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\\\"]},\\\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\":{\\\"keccak256\\\":\\\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\\\",\\\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\\\"]},\\\"lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\\\":{\\\"keccak256\\\":\\\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\\\",\\\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\\\"]},\\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\":{\\\"keccak256\\\":\\\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\\\",\\\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\\\"]},\\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\":{\\\"keccak256\\\":\\\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\\\",\\\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\\\"]},\\\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\\\":{\\\"keccak256\\\":\\\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\\\",\\\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\\\"]},\\\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\\\":{\\\"keccak256\\\":\\\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\\\",\\\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\\\"]},\\\"lib/openzeppelin-contracts/contracts/utils/Address.sol\\\":{\\\"keccak256\\\":\\\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\\\",\\\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\\\"]},\\\"lib/openzeppelin-contracts/contracts/utils/Context.sol\\\":{\\\"keccak256\\\":\\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\\\",\\\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\\\"]},\\\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\\\":{\\\"keccak256\\\":\\\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\\\",\\\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\\\"]},\\\"lib/solmate/src/auth/Owned.sol\\\":{\\\"keccak256\\\":\\\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\\\",\\\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\\\"]},\\\"lib/solmate/src/utils/ReentrancyGuard.sol\\\":{\\\"keccak256\\\":\\\"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\\\",\\\"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\\\"]},\\\"src/Registry.sol\\\":{\\\"keccak256\\\":\\\"0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108\\\",\\\"dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp\\\"]},\\\"src/base/Cellar.sol\\\":{\\\"keccak256\\\":\\\"0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b\\\",\\\"dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA\\\"]},\\\"src/base/ERC20.sol\\\":{\\\"keccak256\\\":\\\"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\\\",\\\"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\\\"]},\\\"src/base/ERC4626.sol\\\":{\\\"keccak256\\\":\\\"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\\\",\\\"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\\\"]},\\\"src/base/Multicall.sol\\\":{\\\"keccak256\\\":\\\"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\\\",\\\"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\\\"]},\\\"src/base/SafeTransferLib.sol\\\":{\\\"keccak256\\\":\\\"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\\\",\\\"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\\\"]},\\\"src/interfaces/IMulticall.sol\\\":{\\\"keccak256\\\":\\\"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\\\",\\\"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\\\"]},\\\"src/interfaces/external/IAaveToken.sol\\\":{\\\"keccak256\\\":\\\"0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58\\\",\\\"dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3\\\"]},\\\"src/interfaces/external/IChainlinkAggregator.sol\\\":{\\\"keccak256\\\":\\\"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\\\",\\\"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\\\"]},\\\"src/interfaces/external/ICurvePool.sol\\\":{\\\"keccak256\\\":\\\"0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2\\\",\\\"dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6\\\"]},\\\"src/interfaces/external/IGravity.sol\\\":{\\\"keccak256\\\":\\\"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\\\",\\\"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\\\"]},\\\"src/interfaces/external/IUniswapV2Router02.sol\\\":{\\\"keccak256\\\":\\\"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\\\",\\\"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\\\"]},\\\"src/interfaces/external/IUniswapV3Router.sol\\\":{\\\"keccak256\\\":\\\"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\\\",\\\"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\\\"]},\\\"src/modules/FeesAndReserves.sol\\\":{\\\"keccak256\\\":\\\"0x7b5fb1a3c2a46dc27653521fd2048a6189edd6e24f0a28630c0abea884b6498e\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://9db767723210052f20faf483bb7fe46f0f77ade338c1ac0683adc5d36b6ea8cf\\\",\\\"dweb:/ipfs/QmdyJwJ4ocKvF4rrLGXHDXKkZFKdi3fppHKrcFuUmaz5vy\\\"]},\\\"src/modules/adaptors/BaseAdaptor.sol\\\":{\\\"keccak256\\\":\\\"0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27\\\",\\\"dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j\\\"]},\\\"src/modules/adaptors/FeesAndReserves/FeesAndReservesAdaptor.sol\\\":{\\\"keccak256\\\":\\\"0xa12e98e5d2c32f8723b05a0acaf460f44f7b2493173f778a614e5b44b24da43a\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://2ca442626aefdf36486f689329d8e4365f6affed16a1dfdda8e93a4c1af92499\\\",\\\"dweb:/ipfs/QmSDQCtihFqfW2nd1KS66k7GKFX3UGtrDZg1t1SuQaZSnU\\\"]},\\\"src/modules/adaptors/PositionlessAdaptor.sol\\\":{\\\"keccak256\\\":\\\"0x18c88c51bcdc7aeeba72f42ad6e761831f8246c1f58852406279b163d0a68c67\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://734b5e5d9514a5e1b531346f339cb2f628168586ece79092756ad227da02383d\\\",\\\"dweb:/ipfs/QmU6vGcQ67EDFSHJVKvfeosp9p1QjCnZwUFvFCsMG3cNQi\\\"]},\\\"src/modules/price-router/PriceRouter.sol\\\":{\\\"keccak256\\\":\\\"0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af\\\",\\\"dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC\\\"]},\\\"src/modules/swap-router/SwapRouter.sol\\\":{\\\"keccak256\\\":\\\"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\\\",\\\"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\\\"]},\\\"src/utils/Math.sol\\\":{\\\"keccak256\\\":\\\"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\\\",\\\"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\\\"]},\\\"src/utils/Uint32Array.sol\\\":{\\\"keccak256\\\":\\\"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\\\",\\\"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\\\"]}},\\\"version\\\":1}\",\n  \"metadata\": {\n    \"compiler\": {\n      \"version\": \"0.8.16+commit.07a7930e\"\n    },\n    \"language\": \"Solidity\",\n    \"output\": {\n      \"abi\": [\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__ExternalReceiverBlocked\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"asset\",\n              \"type\": \"address\"\n            }\n          ],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__PricingNotSupported\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__Slippage\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__UserDepositsNotAllowed\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__UserWithdrawsNotAllowed\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"amount\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"addAssetsToReserves\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"assetOf\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract ERC20\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"adaptorData\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"assetsUsed\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract ERC20[]\",\n              \"name\": \"assets\",\n              \"type\": \"address[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"balanceOf\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"newFrequency\",\n              \"type\": \"uint64\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"changeUpkeepFrequency\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"newMaxGas\",\n              \"type\": \"uint64\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"changeUpkeepMaxGas\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"deposit\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"feesAndReserves\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract FeesAndReserves\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"identifier\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"\",\n              \"type\": \"bytes32\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"isDebt\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"amount\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"prepareFees\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"contract ERC20\",\n              \"name\": \"asset\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"spender\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"revokeApproval\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint32\",\n              \"name\": \"managementFee\",\n              \"type\": \"uint32\"\n            },\n            {\n              \"internalType\": \"uint32\",\n              \"name\": \"performanceFee\",\n              \"type\": \"uint32\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"setupMetaData\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"slippage\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint32\",\n              \"name\": \"\",\n              \"type\": \"uint32\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint32\",\n              \"name\": \"managementFee\",\n              \"type\": \"uint32\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"updateManagementFee\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint32\",\n              \"name\": \"performanceFee\",\n              \"type\": \"uint32\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"updatePerformanceFee\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"withdraw\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"amount\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"withdrawAssetsFromReserves\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"withdrawableFrom\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        }\n      ],\n      \"devdoc\": {\n        \"kind\": \"dev\",\n        \"methods\": {\n          \"identifier()\": {\n            \"details\": \"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"\n          },\n          \"revokeApproval(address,address)\": {\n            \"params\": {\n              \"asset\": \"the ERC20 asset to revoke `spender`s approval for\",\n              \"spender\": \"the address to revoke approval for\"\n            }\n          }\n        },\n        \"version\": 1\n      },\n      \"userdoc\": {\n        \"kind\": \"user\",\n        \"methods\": {\n          \"addAssetsToReserves(uint256)\": {\n            \"notice\": \"Strategists are free to add/remove assets to reserves because it allows them to         inject yield into the cellar during time of under performance, and reserve yield         during times of over performance.\"\n          },\n          \"assetOf(bytes)\": {\n            \"notice\": \"There is no underlying position so return zero address.\"\n          },\n          \"assetsUsed(bytes)\": {\n            \"notice\": \"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"\n          },\n          \"balanceOf(bytes)\": {\n            \"notice\": \"There is no underlying position so return zero.\"\n          },\n          \"changeUpkeepFrequency(uint64)\": {\n            \"notice\": \"Allows strategist to change how frequently they want their cellars fees calculated.\"\n          },\n          \"changeUpkeepMaxGas(uint64)\": {\n            \"notice\": \"Allows strategist to change the max gas they are willing to pay for fee calculations..\"\n          },\n          \"deposit(uint256,bytes,bytes)\": {\n            \"notice\": \"User deposits are NOT allowed.\"\n          },\n          \"feesAndReserves()\": {\n            \"notice\": \"FeesAndReserves on ETH Mainnet.\"\n          },\n          \"isDebt()\": {\n            \"notice\": \"There is no underlying position so return false.\"\n          },\n          \"prepareFees(uint256)\": {\n            \"notice\": \"Allows strategists to take pending fees owed, and set them up to be distributed using `sendFees` in FeesAndReserves contract.\"\n          },\n          \"revokeApproval(address,address)\": {\n            \"notice\": \"Allows strategists to zero out an approval for a given `asset`.\"\n          },\n          \"setupMetaData(uint32,uint32)\": {\n            \"notice\": \"Setup function strategist must call in order to use FeesAndReserves.\"\n          },\n          \"slippage()\": {\n            \"notice\": \"Max possible slippage when making a swap router swap.\"\n          },\n          \"updateManagementFee(uint32)\": {\n            \"notice\": \"Strategists are free to update their cellar's management fee as they see fit.         Ultimately the competition between strategists will keep this in check, since         a strategist could out perform another strategist simply because they take a smaller fee.\"\n          },\n          \"updatePerformanceFee(uint32)\": {\n            \"notice\": \"Strategists are free to update their cellar's performance fee as they see fit.         Ultimately the competition between strategists will keep this in check, since         a strategist could out perform another strategist simply because they take a smaller fee.\"\n          },\n          \"withdraw(uint256,address,bytes,bytes)\": {\n            \"notice\": \"User withdraws are NOT allowed.\"\n          },\n          \"withdrawAssetsFromReserves(uint256)\": {\n            \"notice\": \"Strategists are free to add/remove assets to reserves because it allows them to         inject yield into the cellar during time of under performance, and reserve yield         during times of over performance.\"\n          },\n          \"withdrawableFrom(bytes,bytes)\": {\n            \"notice\": \"There is no underlying position so return zero.\"\n          }\n        },\n        \"version\": 1\n      }\n    },\n    \"settings\": {\n      \"remappings\": [\n        \":@chainlink/=lib/chainlink/\",\n        \":@ds-test/=lib/forge-std/lib/ds-test/src/\",\n        \":@forge-std/=lib/forge-std/src/\",\n        \":@openzeppelin/=lib/openzeppelin-contracts/\",\n        \":@solmate/=lib/solmate/src/\",\n        \":@uniswap/v3-core/=lib/v3-core/\",\n        \":@uniswap/v3-periphery/=lib/v3-periphery/\",\n        \":@uniswapV3C/=lib/v3-core.git/contracts/\",\n        \":@uniswapV3P/=lib/v3-periphery.git/contracts/\",\n        \":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\n        \":ds-test/=lib/forge-std/lib/ds-test/src/\",\n        \":forge-std/=lib/forge-std/src/\",\n        \":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\n        \":solmate/=lib/solmate/src/\",\n        \":v3-core.git/=lib/v3-core.git/contracts/\",\n        \":v3-periphery.git/=lib/v3-periphery.git/contracts/\"\n      ],\n      \"optimizer\": {\n        \"enabled\": true,\n        \"runs\": 200\n      },\n      \"metadata\": {\n        \"bytecodeHash\": \"ipfs\"\n      },\n      \"compilationTarget\": {\n        \"src/modules/adaptors/FeesAndReserves/FeesAndReservesAdaptor.sol\": \"FeesAndReservesAdaptor\"\n      },\n      \"libraries\": {}\n    },\n    \"sources\": {\n      \"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\": {\n        \"keccak256\": \"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\n        \"urls\": [\n          \"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\n          \"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\": {\n        \"keccak256\": \"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\n        \"urls\": [\n          \"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\n          \"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\": {\n        \"keccak256\": \"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\n        \"urls\": [\n          \"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\n          \"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\": {\n        \"keccak256\": \"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\n        \"urls\": [\n          \"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\n          \"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\": {\n        \"keccak256\": \"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\n        \"urls\": [\n          \"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\n          \"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\": {\n        \"keccak256\": \"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\n        \"urls\": [\n          \"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\n          \"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\": {\n        \"keccak256\": \"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\n        \"urls\": [\n          \"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\n          \"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\": {\n        \"keccak256\": \"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\n        \"urls\": [\n          \"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\n          \"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/Address.sol\": {\n        \"keccak256\": \"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\n        \"urls\": [\n          \"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\n          \"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/Context.sol\": {\n        \"keccak256\": \"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\n        \"urls\": [\n          \"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\n          \"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\": {\n        \"keccak256\": \"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\n        \"urls\": [\n          \"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\n          \"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/solmate/src/auth/Owned.sol\": {\n        \"keccak256\": \"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\n        \"urls\": [\n          \"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\n          \"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"lib/solmate/src/utils/ReentrancyGuard.sol\": {\n        \"keccak256\": \"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\",\n        \"urls\": [\n          \"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\",\n          \"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"src/Registry.sol\": {\n        \"keccak256\": \"0x72690631323f459be3da7dd7c4644a7678a509ff6fd9a76fc6f77124ba96bcb3\",\n        \"urls\": [\n          \"bzz-raw://237231d6746fbf8d95ec0fc07ee1ddc0978ae77ef12fe00f445e9f22232d1108\",\n          \"dweb:/ipfs/QmbSKScTxX8nxNnjogci32r3fRexDfFG4sH4myE85AewQp\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/base/Cellar.sol\": {\n        \"keccak256\": \"0x851d6f03d13fcd1e4e55d40ab04908677ef1ec92dbcaf3c02ee492602c368d67\",\n        \"urls\": [\n          \"bzz-raw://0eff90da37039eb4fb743024373d46ce6ccc198b5cb5c61c628f7a160d94fd0b\",\n          \"dweb:/ipfs/QmUoLuGxVU5UqKNUB75BxMvYnpTxxcq8ZiUskrTTx8WbJA\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/base/ERC20.sol\": {\n        \"keccak256\": \"0x6aeb5d5df72734774379b54cf7fdce21206275047f4fcaa536448fefb1bd7b02\",\n        \"urls\": [\n          \"bzz-raw://e9d380b96bb23fe5e04a4a1f97e047c43dab65c9bbb69c9e0bf0def04fa042e4\",\n          \"dweb:/ipfs/QmdNwDQXnNxbvxaAhiNDjvEdLC8qtom43H2d68NMAyrtyf\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"src/base/ERC4626.sol\": {\n        \"keccak256\": \"0x13989d2c6e0dcda91407ffb7c28a52ab627db289a4d75dd5f3e4deb219dca9e7\",\n        \"urls\": [\n          \"bzz-raw://d493aa7fdcb779cd22f6b89089964ece46ea6d4fa0f99858cf181efb4cbee469\",\n          \"dweb:/ipfs/QmZ2zHAHNmGi3iGcynGcPSppW97xYPh3yHDnxW7Ev7RasE\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"src/base/Multicall.sol\": {\n        \"keccak256\": \"0xcbb4381e9a730f94f98b2712167a6b369c27088d56dc1c1c45dff3b9f67626b9\",\n        \"urls\": [\n          \"bzz-raw://b44d36d06c372cd871596a1147f69cc4a5fee42a0619517797db1c4426cc7b8c\",\n          \"dweb:/ipfs/QmYeevkoTG2RmUPNzjikoJwp4SQkdSs9iPj7hjQh2Y9e5K\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"src/base/SafeTransferLib.sol\": {\n        \"keccak256\": \"0xb57fc6788a996b929a66b113fc47e5819778ce05e9f29beb9dd9ab2e26b22324\",\n        \"urls\": [\n          \"bzz-raw://5dbce65cf972cbb4ea1173b4590ccbbdd134c24ad144484d2b9eb3006fdb860a\",\n          \"dweb:/ipfs/QmeRkh21aTiZ9kiFr8grzFDzJvbydWeowZEBkG5kxtfQN3\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"src/interfaces/IMulticall.sol\": {\n        \"keccak256\": \"0xd10f58af0778cfc7f3758154066fc0ebbd3e360b1a6959c283ccf7c2a9e9634e\",\n        \"urls\": [\n          \"bzz-raw://b218fd6c1571e3a16e8dc75f0237f797905b9a449d523e48d9dcb99473ed6ba0\",\n          \"dweb:/ipfs/Qmet1GzEJ3Fq1FbKhr3MNFb8LpUkx37ynFCvoFKjkmBCU5\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"src/interfaces/external/IAaveToken.sol\": {\n        \"keccak256\": \"0x77cd64637e4c0fd379b2d4d826bcd9f64fc706a291ce77d023f693d1eb8e45d8\",\n        \"urls\": [\n          \"bzz-raw://e87630603401ff3374cb610b765e46a3a235ef294fab212cf3116a35db7c4d58\",\n          \"dweb:/ipfs/Qma8awSuYptmpBsWUMz9NZBogVRtVQwXF5cvfsVWpNKhc3\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/external/IChainlinkAggregator.sol\": {\n        \"keccak256\": \"0x5fc642cff679c1cc6e93b5eadd2089b6adb85a1a8c46106388c836a1447e228d\",\n        \"urls\": [\n          \"bzz-raw://9f6a5dc12a8d3c06463eb6ed638349fd0502d7fedb75da873f888416755ea3b2\",\n          \"dweb:/ipfs/QmdDnsLaaGvKKxuvdGTiroKrXMP3eW75GjSW3HK7GySfVs\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/interfaces/external/ICurvePool.sol\": {\n        \"keccak256\": \"0x9ae71865252aeca89fd6c74013eded1d8029eccc46e3604291be16e97b89a5da\",\n        \"urls\": [\n          \"bzz-raw://f504248ab846844bcd771226f7b2984455ddcc746357924fce50a41b65eec9e2\",\n          \"dweb:/ipfs/QmQVe1VZUgxUab9ocsbrX42Ust3hs83BU3bpA1j6Cx1xo6\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/interfaces/external/IGravity.sol\": {\n        \"keccak256\": \"0xb862f0644274b9c268f508e9dc880770962b9095f340695a97a1cb2eb9789a11\",\n        \"urls\": [\n          \"bzz-raw://533a9626cafd2260be6aa9cd9fbe305eb60e4208e43119c17ac0d33d41d07c51\",\n          \"dweb:/ipfs/QmdmsXd9oozXdmCP4Fyt59VtKqm1spMgtU21LeuS85nG4c\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/interfaces/external/IUniswapV2Router02.sol\": {\n        \"keccak256\": \"0xee672165cfe63278b41b7e9c0ae34ad18d75f432c6c5583e9940c207a1a2464f\",\n        \"urls\": [\n          \"bzz-raw://10443d195fd79197bb27b110345d5cef5b49fc1acff5e82164abd8cd04cbf47a\",\n          \"dweb:/ipfs/QmNnVhv7YNuMWUS7S1kDpZLAcoKdmSm9ADwGoxL5wgzTGo\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/interfaces/external/IUniswapV3Router.sol\": {\n        \"keccak256\": \"0x2c8578bd46f2de289ca1eb8c7a5c4412f3abdc6d61acbb07ec565ff1e5e80355\",\n        \"urls\": [\n          \"bzz-raw://f2b82a6d1fc71e09611d80dce96286f0546d1629bdee4e3686d6d528473187fd\",\n          \"dweb:/ipfs/QmciPSKvHDjnFHRtjDwmdoiihwtDCFRZu1wfjnxuhYivMK\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"src/modules/FeesAndReserves.sol\": {\n        \"keccak256\": \"0x7b5fb1a3c2a46dc27653521fd2048a6189edd6e24f0a28630c0abea884b6498e\",\n        \"urls\": [\n          \"bzz-raw://9db767723210052f20faf483bb7fe46f0f77ade338c1ac0683adc5d36b6ea8cf\",\n          \"dweb:/ipfs/QmdyJwJ4ocKvF4rrLGXHDXKkZFKdi3fppHKrcFuUmaz5vy\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/adaptors/BaseAdaptor.sol\": {\n        \"keccak256\": \"0xb45700da63110e41cbb1879c3d261763644bc851effa798721cf7eca3e039f9a\",\n        \"urls\": [\n          \"bzz-raw://7810084abb53310d5d50f5ca55557e9dcdc8fef6c987e55d82a7748aad467e27\",\n          \"dweb:/ipfs/QmaieqMfgwWJvFy8q3jVrx8Fifo6M9UZM8cBjpmyNFPc5j\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/adaptors/FeesAndReserves/FeesAndReservesAdaptor.sol\": {\n        \"keccak256\": \"0xa12e98e5d2c32f8723b05a0acaf460f44f7b2493173f778a614e5b44b24da43a\",\n        \"urls\": [\n          \"bzz-raw://2ca442626aefdf36486f689329d8e4365f6affed16a1dfdda8e93a4c1af92499\",\n          \"dweb:/ipfs/QmSDQCtihFqfW2nd1KS66k7GKFX3UGtrDZg1t1SuQaZSnU\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/adaptors/PositionlessAdaptor.sol\": {\n        \"keccak256\": \"0x18c88c51bcdc7aeeba72f42ad6e761831f8246c1f58852406279b163d0a68c67\",\n        \"urls\": [\n          \"bzz-raw://734b5e5d9514a5e1b531346f339cb2f628168586ece79092756ad227da02383d\",\n          \"dweb:/ipfs/QmU6vGcQ67EDFSHJVKvfeosp9p1QjCnZwUFvFCsMG3cNQi\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/price-router/PriceRouter.sol\": {\n        \"keccak256\": \"0x3d0fb1c107cfbd5b72660b548a9749dfd0d07d9a0b5abdf554d593ee00569550\",\n        \"urls\": [\n          \"bzz-raw://f90a60a3097007a1dcd2871db79b0df74cf2a18de5126fc2bd2896f2715e93af\",\n          \"dweb:/ipfs/QmTDqnNN9Rv29MYHCAzZsKzsDbTBMYYQi17VEwhmbE6KYC\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/swap-router/SwapRouter.sol\": {\n        \"keccak256\": \"0x2cc9c40333f0cb43d937124d8db088334e48280c8af2b9ebef7675daf167eb80\",\n        \"urls\": [\n          \"bzz-raw://87efec51915ae91561e3ee7ea97f3a0daff4826c0f5974ba404f4fa25aa46818\",\n          \"dweb:/ipfs/QmSig68SbFz12nvm3MkLVvtyKQMFX8W1tMNqn6RCNhAVGr\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/utils/Math.sol\": {\n        \"keccak256\": \"0xdec791a31325162117ed7856d7042f3f58885d29044a5ab7fa266a68551c485f\",\n        \"urls\": [\n          \"bzz-raw://87be5c0da99226925af33c0121802fc009ddee39becdcce2e60db01813bc8312\",\n          \"dweb:/ipfs/QmXxgS5tfWBQF5pYHoX5HMbcRMW27iTALZGKyyVuAi7A8r\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/utils/Uint32Array.sol\": {\n        \"keccak256\": \"0x418cd655203ebf671b76cbae3a1594c44356b5ca91c9f9e7eb5de07013e300d9\",\n        \"urls\": [\n          \"bzz-raw://b31b9db2d85bd7c41949307ef37903ff347f57b21f4b8d81a637dbfc1deed944\",\n          \"dweb:/ipfs/QmScY9Jm2rsihu7QToNYuxLWADjmRjwxbScEGRwvXK29p3\"\n        ],\n        \"license\": \"Apache-2.0\"\n      }\n    },\n    \"version\": 1\n  },\n  \"ast\": {\n    \"absolutePath\": \"src/modules/adaptors/FeesAndReserves/FeesAndReservesAdaptor.sol\",\n    \"id\": 46195,\n    \"exportedSymbols\": {\n      \"Cellar\": [\n        33437\n      ],\n      \"ERC20\": [\n        34556\n      ],\n      \"FeesAndReserves\": [\n        41560\n      ],\n      \"FeesAndReservesAdaptor\": [\n        46194\n      ],\n      \"Math\": [\n        54508\n      ],\n      \"PositionlessAdaptor\": [\n        46478\n      ],\n      \"Registry\": [\n        30033\n      ],\n      \"SafeTransferLib\": [\n        35307\n      ],\n      \"SwapRouter\": [\n        53227\n      ]\n    },\n    \"nodeType\": \"SourceUnit\",\n    \"src\": \"39:5024:84\",\n    \"nodes\": [\n      {\n        \"id\": 45997,\n        \"nodeType\": \"PragmaDirective\",\n        \"src\": \"39:23:84\",\n        \"nodes\": [],\n        \"literals\": [\n          \"solidity\",\n          \"0.8\",\n          \".16\"\n        ]\n      },\n      {\n        \"id\": 46004,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"64:114:84\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/modules/adaptors/BaseAdaptor.sol\",\n        \"file\": \"src/modules/adaptors/BaseAdaptor.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 46195,\n        \"sourceUnit\": 43963,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 45998,\n              \"name\": \"ERC20\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 34556,\n              \"src\": \"73:5:84\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 45999,\n              \"name\": \"SafeTransferLib\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 35307,\n              \"src\": \"80:15:84\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 46000,\n              \"name\": \"Cellar\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 33437,\n              \"src\": \"97:6:84\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 46001,\n              \"name\": \"SwapRouter\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 53227,\n              \"src\": \"105:10:84\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 46002,\n              \"name\": \"Registry\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 30033,\n              \"src\": \"117:8:84\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 46003,\n              \"name\": \"Math\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 54508,\n              \"src\": \"127:4:84\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 46006,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"179:66:84\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/modules/FeesAndReserves.sol\",\n        \"file\": \"src/modules/FeesAndReserves.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 46195,\n        \"sourceUnit\": 41561,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 46005,\n              \"name\": \"FeesAndReserves\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 41560,\n              \"src\": \"188:15:84\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 46008,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"246:83:84\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/modules/adaptors/PositionlessAdaptor.sol\",\n        \"file\": \"src/modules/adaptors/PositionlessAdaptor.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 46195,\n        \"sourceUnit\": 46479,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 46007,\n              \"name\": \"PositionlessAdaptor\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 46478,\n              \"src\": \"255:19:84\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 46194,\n        \"nodeType\": \"ContractDefinition\",\n        \"src\": \"540:4522:84\",\n        \"nodes\": [\n          {\n            \"id\": 46015,\n            \"nodeType\": \"UsingForDirective\",\n            \"src\": \"601:32:84\",\n            \"nodes\": [],\n            \"global\": false,\n            \"libraryName\": {\n              \"id\": 46012,\n              \"name\": \"SafeTransferLib\",\n              \"nameLocations\": [\n                \"607:15:84\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 35307,\n              \"src\": \"607:15:84\"\n            },\n            \"typeName\": {\n              \"id\": 46014,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 46013,\n                \"name\": \"ERC20\",\n                \"nameLocations\": [\n                  \"627:5:84\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 34556,\n                \"src\": \"627:5:84\"\n              },\n              \"referencedDeclaration\": 34556,\n              \"src\": \"627:5:84\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_ERC20_$34556\",\n                \"typeString\": \"contract ERC20\"\n              }\n            }\n          },\n          {\n            \"id\": 46018,\n            \"nodeType\": \"UsingForDirective\",\n            \"src\": \"638:23:84\",\n            \"nodes\": [],\n            \"global\": false,\n            \"libraryName\": {\n              \"id\": 46016,\n              \"name\": \"Math\",\n              \"nameLocations\": [\n                \"644:4:84\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 54508,\n              \"src\": \"644:4:84\"\n            },\n            \"typeName\": {\n              \"id\": 46017,\n              \"name\": \"uint256\",\n              \"nodeType\": \"ElementaryTypeName\",\n              \"src\": \"653:7:84\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_uint256\",\n                \"typeString\": \"uint256\"\n              }\n            }\n          },\n          {\n            \"id\": 46033,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"1561:141:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46032,\n              \"nodeType\": \"Block\",\n              \"src\": \"1622:80:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"hexValue\": \"4665657320416e642052657365727665732041646170746f72205620312e30\",\n                            \"id\": 46028,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"kind\": \"string\",\n                            \"lValueRequested\": false,\n                            \"nodeType\": \"Literal\",\n                            \"src\": \"1660:33:84\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_stringliteral_63a8c17b248e83a31cfc8d6e222e23aa7e75dd007a37ad2296216636abcbe490\",\n                              \"typeString\": \"literal_string \\\"Fees And Reserves Adaptor V 1.0\\\"\"\n                            },\n                            \"value\": \"Fees And Reserves Adaptor V 1.0\"\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_stringliteral_63a8c17b248e83a31cfc8d6e222e23aa7e75dd007a37ad2296216636abcbe490\",\n                              \"typeString\": \"literal_string \\\"Fees And Reserves Adaptor V 1.0\\\"\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"id\": 46026,\n                            \"name\": \"abi\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -1,\n                            \"src\": \"1649:3:84\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_magic_abi\",\n                              \"typeString\": \"abi\"\n                            }\n                          },\n                          \"id\": 46027,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"1653:6:84\",\n                          \"memberName\": \"encode\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"src\": \"1649:10:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$\",\n                            \"typeString\": \"function () pure returns (bytes memory)\"\n                          }\n                        },\n                        \"id\": 46029,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": true,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"1649:45:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      ],\n                      \"id\": 46025,\n                      \"name\": \"keccak256\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": -8,\n                      \"src\": \"1639:9:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                        \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                      }\n                    },\n                    \"id\": 46030,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": true,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"1639:56:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes32\",\n                      \"typeString\": \"bytes32\"\n                    }\n                  },\n                  \"functionReturnParameters\": 46024,\n                  \"id\": 46031,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"1632:63:84\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              43752\n            ],\n            \"documentation\": {\n              \"id\": 46019,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1260:296:84\",\n              \"text\": \" @dev Identifier unique to this adaptor for a shared registry.\\n Normally the identifier would just be the address of this contract, but this\\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\\n of the adaptor is more difficult.\"\n            },\n            \"functionSelector\": \"7998a1c4\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"identifier\",\n            \"nameLocation\": \"1570:10:84\",\n            \"overrides\": {\n              \"id\": 46021,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"1595:8:84\"\n            },\n            \"parameters\": {\n              \"id\": 46020,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"1580:2:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46024,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46023,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46033,\n                  \"src\": \"1613:7:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes32\",\n                    \"typeString\": \"bytes32\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46022,\n                    \"name\": \"bytes32\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1613:7:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes32\",\n                      \"typeString\": \"bytes32\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1612:9:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"pure\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46045,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"1771:156:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46044,\n              \"nodeType\": \"Block\",\n              \"src\": \"1844:83:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"hexValue\": \"307861304362383839373037643432364137413338363837304130336263373064316230363937353938\",\n                        \"id\": 46041,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": true,\n                        \"kind\": \"number\",\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"Literal\",\n                        \"src\": \"1877:42:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        \"value\": \"0xa0Cb889707d426A7A386870A03bc70d1b0697598\"\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"id\": 46040,\n                      \"name\": \"FeesAndReserves\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 41560,\n                      \"src\": \"1861:15:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_type$_t_contract$_FeesAndReserves_$41560_$\",\n                        \"typeString\": \"type(contract FeesAndReserves)\"\n                      }\n                    },\n                    \"id\": 46042,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": true,\n                    \"kind\": \"typeConversion\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"1861:59:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                      \"typeString\": \"contract FeesAndReserves\"\n                    }\n                  },\n                  \"functionReturnParameters\": 46039,\n                  \"id\": 46043,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"1854:66:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46034,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1708:58:84\",\n              \"text\": \" @notice FeesAndReserves on ETH Mainnet.\"\n            },\n            \"functionSelector\": \"0b050709\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"feesAndReserves\",\n            \"nameLocation\": \"1780:15:84\",\n            \"parameters\": {\n              \"id\": 46035,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"1795:2:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46039,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46038,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46045,\n                  \"src\": \"1827:15:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                    \"typeString\": \"contract FeesAndReserves\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46037,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 46036,\n                      \"name\": \"FeesAndReserves\",\n                      \"nameLocations\": [\n                        \"1827:15:84\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 41560,\n                      \"src\": \"1827:15:84\"\n                    },\n                    \"referencedDeclaration\": 41560,\n                    \"src\": \"1827:15:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                      \"typeString\": \"contract FeesAndReserves\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1826:17:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"pure\",\n            \"virtual\": true,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46058,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2358:131:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46057,\n              \"nodeType\": \"Block\",\n              \"src\": \"2418:71:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46054,\n                        \"name\": \"performanceFee\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46048,\n                        \"src\": \"2467:14:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46051,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"2428:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46052,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2428:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46053,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2446:20:84\",\n                      \"memberName\": \"updatePerformanceFee\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40636,\n                      \"src\": \"2428:38:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint32_$returns$__$\",\n                        \"typeString\": \"function (uint32) external\"\n                      }\n                    },\n                    \"id\": 46055,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2428:54:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46056,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2428:54:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46046,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2050:303:84\",\n              \"text\": \" @notice Strategists are free to update their cellar's performance fee as they see fit.\\n         Ultimately the competition between strategists will keep this in check, since\\n         a strategist could out perform another strategist simply because they take a smaller fee.\"\n            },\n            \"functionSelector\": \"556d18df\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"updatePerformanceFee\",\n            \"nameLocation\": \"2367:20:84\",\n            \"parameters\": {\n              \"id\": 46049,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46048,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"performanceFee\",\n                  \"nameLocation\": \"2395:14:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46058,\n                  \"src\": \"2388:21:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint32\",\n                    \"typeString\": \"uint32\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46047,\n                    \"name\": \"uint32\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2388:6:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint32\",\n                      \"typeString\": \"uint32\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"2387:23:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46050,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2418:0:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46071,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2802:127:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46070,\n              \"nodeType\": \"Block\",\n              \"src\": \"2860:69:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46067,\n                        \"name\": \"managementFee\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46061,\n                        \"src\": \"2908:13:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46064,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"2870:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46065,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2870:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46066,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"2888:19:84\",\n                      \"memberName\": \"updateManagementFee\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40683,\n                      \"src\": \"2870:37:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint32_$returns$__$\",\n                        \"typeString\": \"function (uint32) external\"\n                      }\n                    },\n                    \"id\": 46068,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2870:52:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46069,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2870:52:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46059,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2495:302:84\",\n              \"text\": \" @notice Strategists are free to update their cellar's management fee as they see fit.\\n         Ultimately the competition between strategists will keep this in check, since\\n         a strategist could out perform another strategist simply because they take a smaller fee.\"\n            },\n            \"functionSelector\": \"c1cc8d7f\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"updateManagementFee\",\n            \"nameLocation\": \"2811:19:84\",\n            \"parameters\": {\n              \"id\": 46062,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46061,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"managementFee\",\n                  \"nameLocation\": \"2838:13:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46071,\n                  \"src\": \"2831:20:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint32\",\n                    \"typeString\": \"uint32\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46060,\n                    \"name\": \"uint32\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2831:6:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint32\",\n                      \"typeString\": \"uint32\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"2830:22:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46063,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2860:0:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46084,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3050:129:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46083,\n              \"nodeType\": \"Block\",\n              \"src\": \"3109:70:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46080,\n                        \"name\": \"newFrequency\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46074,\n                        \"src\": \"3159:12:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint64\",\n                          \"typeString\": \"uint64\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint64\",\n                          \"typeString\": \"uint64\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46077,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"3119:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46078,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"3119:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46079,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3137:21:84\",\n                      \"memberName\": \"changeUpkeepFrequency\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40565,\n                      \"src\": \"3119:39:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint64_$returns$__$\",\n                        \"typeString\": \"function (uint64) external\"\n                      }\n                    },\n                    \"id\": 46081,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3119:53:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46082,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3119:53:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46072,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2935:110:84\",\n              \"text\": \" @notice Allows strategist to change how frequently they want their cellars fees calculated.\"\n            },\n            \"functionSelector\": \"a5a36dd2\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"changeUpkeepFrequency\",\n            \"nameLocation\": \"3059:21:84\",\n            \"parameters\": {\n              \"id\": 46075,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46074,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"newFrequency\",\n                  \"nameLocation\": \"3088:12:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46084,\n                  \"src\": \"3081:19:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint64\",\n                    \"typeString\": \"uint64\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46073,\n                    \"name\": \"uint64\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3081:6:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint64\",\n                      \"typeString\": \"uint64\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3080:21:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46076,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"3109:0:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46097,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3303:117:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46096,\n              \"nodeType\": \"Block\",\n              \"src\": \"3356:64:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46093,\n                        \"name\": \"newMaxGas\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46087,\n                        \"src\": \"3403:9:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint64\",\n                          \"typeString\": \"uint64\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint64\",\n                          \"typeString\": \"uint64\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46090,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"3366:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46091,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"3366:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46092,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3384:18:84\",\n                      \"memberName\": \"changeUpkeepMaxGas\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40589,\n                      \"src\": \"3366:36:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint64_$returns$__$\",\n                        \"typeString\": \"function (uint64) external\"\n                      }\n                    },\n                    \"id\": 46094,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3366:47:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46095,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3366:47:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46085,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"3185:113:84\",\n              \"text\": \" @notice Allows strategist to change the max gas they are willing to pay for fee calculations..\"\n            },\n            \"functionSelector\": \"f2a44d4e\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"changeUpkeepMaxGas\",\n            \"nameLocation\": \"3312:18:84\",\n            \"parameters\": {\n              \"id\": 46088,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46087,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"newMaxGas\",\n                  \"nameLocation\": \"3338:9:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46097,\n                  \"src\": \"3331:16:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint64\",\n                    \"typeString\": \"uint64\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46086,\n                    \"name\": \"uint64\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3331:6:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint64\",\n                      \"typeString\": \"uint64\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3330:18:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46089,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"3356:0:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46113,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3526:154:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46112,\n              \"nodeType\": \"Block\",\n              \"src\": \"3601:79:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46108,\n                        \"name\": \"managementFee\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46100,\n                        \"src\": \"3643:13:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        }\n                      },\n                      {\n                        \"id\": 46109,\n                        \"name\": \"performanceFee\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46102,\n                        \"src\": \"3658:14:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46105,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"3611:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46106,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"3611:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46107,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3629:13:84\",\n                      \"memberName\": \"setupMetaData\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40529,\n                      \"src\": \"3611:31:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint32_$_t_uint32_$returns$__$\",\n                        \"typeString\": \"function (uint32,uint32) external\"\n                      }\n                    },\n                    \"id\": 46110,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3611:62:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46111,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3611:62:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46098,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"3426:95:84\",\n              \"text\": \" @notice Setup function strategist must call in order to use FeesAndReserves.\"\n            },\n            \"functionSelector\": \"fa531255\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"setupMetaData\",\n            \"nameLocation\": \"3535:13:84\",\n            \"parameters\": {\n              \"id\": 46103,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46100,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"managementFee\",\n                  \"nameLocation\": \"3556:13:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46113,\n                  \"src\": \"3549:20:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint32\",\n                    \"typeString\": \"uint32\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46099,\n                    \"name\": \"uint32\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3549:6:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint32\",\n                      \"typeString\": \"uint32\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 46102,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"performanceFee\",\n                  \"nameLocation\": \"3578:14:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46113,\n                  \"src\": \"3571:21:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint32\",\n                    \"typeString\": \"uint32\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46101,\n                    \"name\": \"uint32\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3571:6:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint32\",\n                      \"typeString\": \"uint32\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3548:45:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46104,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"3601:0:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46167,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3942:467:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46166,\n              \"nodeType\": \"Block\",\n              \"src\": \"3994:415:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"assignments\": [\n                    46121,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 46121,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"asset\",\n                      \"nameLocation\": \"4011:5:84\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 46166,\n                      \"src\": \"4005:11:84\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_ERC20_$34556\",\n                        \"typeString\": \"contract ERC20\"\n                      },\n                      \"typeName\": {\n                        \"id\": 46120,\n                        \"nodeType\": \"UserDefinedTypeName\",\n                        \"pathNode\": {\n                          \"id\": 46119,\n                          \"name\": \"ERC20\",\n                          \"nameLocations\": [\n                            \"4005:5:84\"\n                          ],\n                          \"nodeType\": \"IdentifierPath\",\n                          \"referencedDeclaration\": 34556,\n                          \"src\": \"4005:5:84\"\n                        },\n                        \"referencedDeclaration\": 34556,\n                        \"src\": \"4005:5:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$34556\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    },\n                    null,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null,\n                    null\n                  ],\n                  \"id\": 46132,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [\n                              {\n                                \"id\": 46128,\n                                \"name\": \"this\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": -28,\n                                \"src\": \"4080:4:84\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_contract$_FeesAndReservesAdaptor_$46194\",\n                                  \"typeString\": \"contract FeesAndReservesAdaptor\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_contract$_FeesAndReservesAdaptor_$46194\",\n                                  \"typeString\": \"contract FeesAndReservesAdaptor\"\n                                }\n                              ],\n                              \"id\": 46127,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": true,\n                              \"lValueRequested\": false,\n                              \"nodeType\": \"ElementaryTypeNameExpression\",\n                              \"src\": \"4072:7:84\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_type$_t_address_$\",\n                                \"typeString\": \"type(address)\"\n                              },\n                              \"typeName\": {\n                                \"id\": 46126,\n                                \"name\": \"address\",\n                                \"nodeType\": \"ElementaryTypeName\",\n                                \"src\": \"4072:7:84\",\n                                \"typeDescriptions\": {}\n                              }\n                            },\n                            \"id\": 46129,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"typeConversion\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"4072:13:84\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_address\",\n                              \"typeString\": \"address\"\n                            }\n                          ],\n                          \"id\": 46125,\n                          \"name\": \"Cellar\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 33437,\n                          \"src\": \"4065:6:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_contract$_Cellar_$33437_$\",\n                            \"typeString\": \"type(contract Cellar)\"\n                          }\n                        },\n                        \"id\": 46130,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4065:21:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Cellar_$33437\",\n                          \"typeString\": \"contract Cellar\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_Cellar_$33437\",\n                          \"typeString\": \"contract Cellar\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46122,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"4038:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46123,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4038:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46124,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"4056:8:84\",\n                      \"memberName\": \"metaData\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40116,\n                      \"src\": \"4038:26:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_view$_t_contract$_Cellar_$33437_$returns$_t_contract$_ERC20_$34556_$_t_uint32_$_t_uint64_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$_t_uint32_$\",\n                        \"typeString\": \"function (contract Cellar) view external returns (contract ERC20,uint32,uint64,uint256,uint256,uint256,uint256,uint8,uint8,uint32)\"\n                      }\n                    },\n                    \"id\": 46131,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4038:49:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$_t_contract$_ERC20_$34556_$_t_uint32_$_t_uint64_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$_t_uint32_$\",\n                      \"typeString\": \"tuple(contract ERC20,uint32,uint64,uint256,uint256,uint256,uint256,uint8,uint8,uint32)\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"4004:83:84\"\n                },\n                {\n                  \"expression\": {\n                    \"id\": 46138,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 46133,\n                      \"name\": \"amount\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 46116,\n                      \"src\": \"4097:6:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"arguments\": [\n                        {\n                          \"id\": 46135,\n                          \"name\": \"asset\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46121,\n                          \"src\": \"4120:5:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_ERC20_$34556\",\n                            \"typeString\": \"contract ERC20\"\n                          }\n                        },\n                        {\n                          \"id\": 46136,\n                          \"name\": \"amount\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46116,\n                          \"src\": \"4127:6:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        }\n                      ],\n                      \"expression\": {\n                        \"argumentTypes\": [\n                          {\n                            \"typeIdentifier\": \"t_contract$_ERC20_$34556\",\n                            \"typeString\": \"contract ERC20\"\n                          },\n                          {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        ],\n                        \"id\": 46134,\n                        \"name\": \"_maxAvailable\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 43890,\n                        \"src\": \"4106:13:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_internal_view$_t_contract$_ERC20_$34556_$_t_uint256_$returns$_t_uint256_$\",\n                          \"typeString\": \"function (contract ERC20,uint256) view returns (uint256)\"\n                        }\n                      },\n                      \"id\": 46137,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"4106:28:84\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"src\": \"4097:37:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"id\": 46139,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"4097:37:84\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [],\n                            \"expression\": {\n                              \"argumentTypes\": [],\n                              \"id\": 46145,\n                              \"name\": \"feesAndReserves\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 46045,\n                              \"src\": \"4170:15:84\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                                \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                              }\n                            },\n                            \"id\": 46146,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"4170:17:84\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                              \"typeString\": \"contract FeesAndReserves\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                              \"typeString\": \"contract FeesAndReserves\"\n                            }\n                          ],\n                          \"id\": 46144,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"4162:7:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_address_$\",\n                            \"typeString\": \"type(address)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 46143,\n                            \"name\": \"address\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"4162:7:84\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 46147,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4162:26:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      {\n                        \"id\": 46148,\n                        \"name\": \"amount\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46116,\n                        \"src\": \"4190:6:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 46140,\n                        \"name\": \"asset\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46121,\n                        \"src\": \"4144:5:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$34556\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      \"id\": 46142,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"4150:11:84\",\n                      \"memberName\": \"safeApprove\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 35306,\n                      \"src\": \"4144:17:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$34556_$\",\n                        \"typeString\": \"function (contract ERC20,address,uint256)\"\n                      }\n                    },\n                    \"id\": 46149,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4144:53:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46150,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"4144:53:84\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46154,\n                        \"name\": \"amount\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46116,\n                        \"src\": \"4245:6:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46151,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"4207:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46152,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4207:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46153,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"4225:19:84\",\n                      \"memberName\": \"addAssetsToReserves\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40739,\n                      \"src\": \"4207:37:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256) external\"\n                      }\n                    },\n                    \"id\": 46155,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4207:45:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46156,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"4207:45:84\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46158,\n                        \"name\": \"asset\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46121,\n                        \"src\": \"4368:5:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$34556\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [],\n                            \"expression\": {\n                              \"argumentTypes\": [],\n                              \"id\": 46161,\n                              \"name\": \"feesAndReserves\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 46045,\n                              \"src\": \"4383:15:84\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                                \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                              }\n                            },\n                            \"id\": 46162,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"4383:17:84\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                              \"typeString\": \"contract FeesAndReserves\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                              \"typeString\": \"contract FeesAndReserves\"\n                            }\n                          ],\n                          \"id\": 46160,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"4375:7:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_address_$\",\n                            \"typeString\": \"type(address)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 46159,\n                            \"name\": \"address\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"4375:7:84\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 46163,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4375:26:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$34556\",\n                          \"typeString\": \"contract ERC20\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"id\": 46157,\n                      \"name\": \"_revokeExternalApproval\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 43918,\n                      \"src\": \"4344:23:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_ERC20_$34556_$_t_address_$returns$__$\",\n                        \"typeString\": \"function (contract ERC20,address)\"\n                      }\n                    },\n                    \"id\": 46164,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4344:58:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46165,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"4344:58:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46114,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"3686:251:84\",\n              \"text\": \" @notice Strategists are free to add/remove assets to reserves because it allows them to\\n         inject yield into the cellar during time of under performance, and reserve yield\\n         during times of over performance.\"\n            },\n            \"functionSelector\": \"cabad50a\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"addAssetsToReserves\",\n            \"nameLocation\": \"3951:19:84\",\n            \"parameters\": {\n              \"id\": 46117,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46116,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"amount\",\n                  \"nameLocation\": \"3979:6:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46167,\n                  \"src\": \"3971:14:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46115,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3971:7:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3970:16:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46118,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"3994:0:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46180,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"4671:128:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46179,\n              \"nodeType\": \"Block\",\n              \"src\": \"4730:69:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46176,\n                        \"name\": \"amount\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46170,\n                        \"src\": \"4785:6:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46173,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"4740:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46174,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"4740:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46175,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"4758:26:84\",\n                      \"memberName\": \"withdrawAssetsFromReserves\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40810,\n                      \"src\": \"4740:44:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256) external\"\n                      }\n                    },\n                    \"id\": 46177,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4740:52:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46178,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"4740:52:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46168,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"4415:251:84\",\n              \"text\": \" @notice Strategists are free to add/remove assets to reserves because it allows them to\\n         inject yield into the cellar during time of under performance, and reserve yield\\n         during times of over performance.\"\n            },\n            \"functionSelector\": \"f5f30a5e\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"withdrawAssetsFromReserves\",\n            \"nameLocation\": \"4680:26:84\",\n            \"parameters\": {\n              \"id\": 46171,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46170,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"amount\",\n                  \"nameLocation\": \"4715:6:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46180,\n                  \"src\": \"4707:14:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46169,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4707:7:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4706:16:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46172,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"4730:0:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 46193,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"4962:98:84\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 46192,\n              \"nodeType\": \"Block\",\n              \"src\": \"5006:54:84\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 46189,\n                        \"name\": \"amount\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 46183,\n                        \"src\": \"5046:6:84\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"id\": 46186,\n                          \"name\": \"feesAndReserves\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 46045,\n                          \"src\": \"5016:15:84\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_contract$_FeesAndReserves_$41560_$\",\n                            \"typeString\": \"function () pure returns (contract FeesAndReserves)\"\n                          }\n                        },\n                        \"id\": 46187,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"5016:17:84\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_FeesAndReserves_$41560\",\n                          \"typeString\": \"contract FeesAndReserves\"\n                        }\n                      },\n                      \"id\": 46188,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"5034:11:84\",\n                      \"memberName\": \"prepareFees\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 40898,\n                      \"src\": \"5016:29:84\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256) external\"\n                      }\n                    },\n                    \"id\": 46190,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5016:37:84\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 46191,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"5016:37:84\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 46181,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"4805:152:84\",\n              \"text\": \" @notice Allows strategists to take pending fees owed, and set them up to be distributed using `sendFees` in FeesAndReserves contract.\"\n            },\n            \"functionSelector\": \"5303907d\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"prepareFees\",\n            \"nameLocation\": \"4971:11:84\",\n            \"parameters\": {\n              \"id\": 46184,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 46183,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"amount\",\n                  \"nameLocation\": \"4991:6:84\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 46193,\n                  \"src\": \"4983:14:84\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 46182,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4983:7:84\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4982:16:84\"\n            },\n            \"returnParameters\": {\n              \"id\": 46185,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"5006:0:84\"\n            },\n            \"scope\": 46194,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          }\n        ],\n        \"abstract\": false,\n        \"baseContracts\": [\n          {\n            \"baseName\": {\n              \"id\": 46010,\n              \"name\": \"PositionlessAdaptor\",\n              \"nameLocations\": [\n                \"575:19:84\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 46478,\n              \"src\": \"575:19:84\"\n            },\n            \"id\": 46011,\n            \"nodeType\": \"InheritanceSpecifier\",\n            \"src\": \"575:19:84\"\n          }\n        ],\n        \"canonicalName\": \"FeesAndReservesAdaptor\",\n        \"contractDependencies\": [],\n        \"contractKind\": \"contract\",\n        \"documentation\": {\n          \"id\": 46009,\n          \"nodeType\": \"StructuredDocumentation\",\n          \"src\": \"331:208:84\",\n          \"text\": \" @title Fees And Reserves Adaptor\\n @notice Allows Cellars to interact with Sommelier FeesAndReserves contract\\n         in order to store/withdraw reserves and take fees.\\n @author crispymangoes\"\n        },\n        \"fullyImplemented\": true,\n        \"linearizedBaseContracts\": [\n          46194,\n          46478,\n          43962\n        ],\n        \"name\": \"FeesAndReservesAdaptor\",\n        \"nameLocation\": \"549:22:84\",\n        \"scope\": 46195,\n        \"usedErrors\": [\n          43724,\n          43727,\n          43730,\n          43733,\n          43738\n        ]\n      }\n    ],\n    \"license\": \"Apache-2.0\"\n  },\n  \"id\": 84\n}") . expect ("invalid abi")
        });
    #[derive(Clone)]
    pub struct FeesAndReservesAdaptor<M>(ethers::contract::Contract<M>);
    impl<M> std::ops::Deref for FeesAndReservesAdaptor<M> {
        type Target = ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M: ethers::providers::Middleware> std::fmt::Debug for FeesAndReservesAdaptor<M> {
        fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
            f.debug_tuple(stringify!(FeesAndReservesAdaptor))
                .field(&self.address())
                .finish()
        }
    }
    impl<'a, M: ethers::providers::Middleware> FeesAndReservesAdaptor<M> {
        #[doc = r" Creates a new contract instance with the specified `ethers`"]
        #[doc = r" client at the given `Address`. The contract derefs to a `ethers::Contract`"]
        #[doc = r" object"]
        pub fn new<T: Into<ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            let contract = ethers::contract::Contract::new(
                address.into(),
                FEESANDRESERVESADAPTOR_ABI.clone(),
                client,
            );
            Self(contract)
        }
        #[doc = "Calls the contract's `addAssetsToReserves` (0xcabad50a) function"]
        pub fn add_assets_to_reserves(
            &self,
            amount: ethers::core::types::U256,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([202, 186, 213, 10], amount)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `assetOf` (0xe170a9bf) function"]
        pub fn asset_of(
            &self,
            p0: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::Address> {
            self.0
                .method_hash([225, 112, 169, 191], p0)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `assetsUsed` (0xaeffddde) function"]
        pub fn assets_used(
            &self,
            adaptor_data: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<
            M,
            ::std::vec::Vec<ethers::core::types::Address>,
        > {
            self.0
                .method_hash([174, 255, 221, 222], adaptor_data)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `balanceOf` (0x78415365) function"]
        pub fn balance_of(
            &self,
            p0: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::U256> {
            self.0
                .method_hash([120, 65, 83, 101], p0)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `changeUpkeepFrequency` (0xa5a36dd2) function"]
        pub fn change_upkeep_frequency(
            &self,
            new_frequency: u64,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([165, 163, 109, 210], new_frequency)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `changeUpkeepMaxGas` (0xf2a44d4e) function"]
        pub fn change_upkeep_max_gas(
            &self,
            new_max_gas: u64,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([242, 164, 77, 78], new_max_gas)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `deposit` (0x69445c31) function"]
        pub fn deposit(
            &self,
            p0: ethers::core::types::U256,
            p1: ethers::core::types::Bytes,
            p2: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([105, 68, 92, 49], (p0, p1, p2))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `feesAndReserves` (0x0b050709) function"]
        pub fn fees_and_reserves(
            &self,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::Address> {
            self.0
                .method_hash([11, 5, 7, 9], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `identifier` (0x7998a1c4) function"]
        pub fn identifier(&self) -> ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([121, 152, 161, 196], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `isDebt` (0x89353a09) function"]
        pub fn is_debt(&self) -> ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([137, 53, 58, 9], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `prepareFees` (0x5303907d) function"]
        pub fn prepare_fees(
            &self,
            amount: ethers::core::types::U256,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([83, 3, 144, 125], amount)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `revokeApproval` (0xd3bfe76a) function"]
        pub fn revoke_approval(
            &self,
            asset: ethers::core::types::Address,
            spender: ethers::core::types::Address,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([211, 191, 231, 106], (asset, spender))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `setupMetaData` (0xfa531255) function"]
        pub fn setup_meta_data(
            &self,
            management_fee: u32,
            performance_fee: u32,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([250, 83, 18, 85], (management_fee, performance_fee))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `slippage` (0x3e032a3b) function"]
        pub fn slippage(&self) -> ethers::contract::builders::ContractCall<M, u32> {
            self.0
                .method_hash([62, 3, 42, 59], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `updateManagementFee` (0xc1cc8d7f) function"]
        pub fn update_management_fee(
            &self,
            management_fee: u32,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([193, 204, 141, 127], management_fee)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `updatePerformanceFee` (0x556d18df) function"]
        pub fn update_performance_fee(
            &self,
            performance_fee: u32,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([85, 109, 24, 223], performance_fee)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `withdraw` (0xc9111bd7) function"]
        pub fn withdraw(
            &self,
            p0: ethers::core::types::U256,
            p1: ethers::core::types::Address,
            p2: ethers::core::types::Bytes,
            p3: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([201, 17, 27, 215], (p0, p1, p2, p3))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `withdrawAssetsFromReserves` (0xf5f30a5e) function"]
        pub fn withdraw_assets_from_reserves(
            &self,
            amount: ethers::core::types::U256,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([245, 243, 10, 94], amount)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `withdrawableFrom` (0xfa50e5d2) function"]
        pub fn withdrawable_from(
            &self,
            p0: ethers::core::types::Bytes,
            p1: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::U256> {
            self.0
                .method_hash([250, 80, 229, 210], (p0, p1))
                .expect("method not found (this should never happen)")
        }
    }
    #[doc = "Container type for all input parameters for the `addAssetsToReserves`function with signature `addAssetsToReserves(uint256)` and selector `[202, 186, 213, 10]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "addAssetsToReserves", abi = "addAssetsToReserves(uint256)")]
    pub struct AddAssetsToReservesCall {
        pub amount: ethers::core::types::U256,
    }
    #[doc = "Container type for all input parameters for the `assetOf`function with signature `assetOf(bytes)` and selector `[225, 112, 169, 191]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "assetOf", abi = "assetOf(bytes)")]
    pub struct AssetOfCall(pub ethers::core::types::Bytes);
    #[doc = "Container type for all input parameters for the `assetsUsed`function with signature `assetsUsed(bytes)` and selector `[174, 255, 221, 222]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "assetsUsed", abi = "assetsUsed(bytes)")]
    pub struct AssetsUsedCall {
        pub adaptor_data: ethers::core::types::Bytes,
    }
    #[doc = "Container type for all input parameters for the `balanceOf`function with signature `balanceOf(bytes)` and selector `[120, 65, 83, 101]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "balanceOf", abi = "balanceOf(bytes)")]
    pub struct BalanceOfCall(pub ethers::core::types::Bytes);
    #[doc = "Container type for all input parameters for the `changeUpkeepFrequency`function with signature `changeUpkeepFrequency(uint64)` and selector `[165, 163, 109, 210]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "changeUpkeepFrequency", abi = "changeUpkeepFrequency(uint64)")]
    pub struct ChangeUpkeepFrequencyCall {
        pub new_frequency: u64,
    }
    #[doc = "Container type for all input parameters for the `changeUpkeepMaxGas`function with signature `changeUpkeepMaxGas(uint64)` and selector `[242, 164, 77, 78]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "changeUpkeepMaxGas", abi = "changeUpkeepMaxGas(uint64)")]
    pub struct ChangeUpkeepMaxGasCall {
        pub new_max_gas: u64,
    }
    #[doc = "Container type for all input parameters for the `deposit`function with signature `deposit(uint256,bytes,bytes)` and selector `[105, 68, 92, 49]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "deposit", abi = "deposit(uint256,bytes,bytes)")]
    pub struct DepositCall(
        pub ethers::core::types::U256,
        pub ethers::core::types::Bytes,
        pub ethers::core::types::Bytes,
    );
    #[doc = "Container type for all input parameters for the `feesAndReserves`function with signature `feesAndReserves()` and selector `[11, 5, 7, 9]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "feesAndReserves", abi = "feesAndReserves()")]
    pub struct FeesAndReservesCall;
    #[doc = "Container type for all input parameters for the `identifier`function with signature `identifier()` and selector `[121, 152, 161, 196]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "identifier", abi = "identifier()")]
    pub struct IdentifierCall;
    #[doc = "Container type for all input parameters for the `isDebt`function with signature `isDebt()` and selector `[137, 53, 58, 9]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "isDebt", abi = "isDebt()")]
    pub struct IsDebtCall;
    #[doc = "Container type for all input parameters for the `prepareFees`function with signature `prepareFees(uint256)` and selector `[83, 3, 144, 125]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "prepareFees", abi = "prepareFees(uint256)")]
    pub struct PrepareFeesCall {
        pub amount: ethers::core::types::U256,
    }
    #[doc = "Container type for all input parameters for the `revokeApproval`function with signature `revokeApproval(address,address)` and selector `[211, 191, 231, 106]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "revokeApproval", abi = "revokeApproval(address,address)")]
    pub struct RevokeApprovalCall {
        pub asset: ethers::core::types::Address,
        pub spender: ethers::core::types::Address,
    }
    #[doc = "Container type for all input parameters for the `setupMetaData`function with signature `setupMetaData(uint32,uint32)` and selector `[250, 83, 18, 85]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "setupMetaData", abi = "setupMetaData(uint32,uint32)")]
    pub struct SetupMetaDataCall {
        pub management_fee: u32,
        pub performance_fee: u32,
    }
    #[doc = "Container type for all input parameters for the `slippage`function with signature `slippage()` and selector `[62, 3, 42, 59]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "slippage", abi = "slippage()")]
    pub struct SlippageCall;
    #[doc = "Container type for all input parameters for the `updateManagementFee`function with signature `updateManagementFee(uint32)` and selector `[193, 204, 141, 127]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "updateManagementFee", abi = "updateManagementFee(uint32)")]
    pub struct UpdateManagementFeeCall {
        pub management_fee: u32,
    }
    #[doc = "Container type for all input parameters for the `updatePerformanceFee`function with signature `updatePerformanceFee(uint32)` and selector `[85, 109, 24, 223]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "updatePerformanceFee", abi = "updatePerformanceFee(uint32)")]
    pub struct UpdatePerformanceFeeCall {
        pub performance_fee: u32,
    }
    #[doc = "Container type for all input parameters for the `withdraw`function with signature `withdraw(uint256,address,bytes,bytes)` and selector `[201, 17, 27, 215]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "withdraw", abi = "withdraw(uint256,address,bytes,bytes)")]
    pub struct WithdrawCall(
        pub ethers::core::types::U256,
        pub ethers::core::types::Address,
        pub ethers::core::types::Bytes,
        pub ethers::core::types::Bytes,
    );
    #[doc = "Container type for all input parameters for the `withdrawAssetsFromReserves`function with signature `withdrawAssetsFromReserves(uint256)` and selector `[245, 243, 10, 94]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(
        name = "withdrawAssetsFromReserves",
        abi = "withdrawAssetsFromReserves(uint256)"
    )]
    pub struct WithdrawAssetsFromReservesCall {
        pub amount: ethers::core::types::U256,
    }
    #[doc = "Container type for all input parameters for the `withdrawableFrom`function with signature `withdrawableFrom(bytes,bytes)` and selector `[250, 80, 229, 210]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "withdrawableFrom", abi = "withdrawableFrom(bytes,bytes)")]
    pub struct WithdrawableFromCall(
        pub ethers::core::types::Bytes,
        pub ethers::core::types::Bytes,
    );
    #[derive(Debug, Clone, PartialEq, Eq, ethers :: contract :: EthAbiType)]
    pub enum FeesAndReservesAdaptorCalls {
        AddAssetsToReserves(AddAssetsToReservesCall),
        AssetOf(AssetOfCall),
        AssetsUsed(AssetsUsedCall),
        BalanceOf(BalanceOfCall),
        ChangeUpkeepFrequency(ChangeUpkeepFrequencyCall),
        ChangeUpkeepMaxGas(ChangeUpkeepMaxGasCall),
        Deposit(DepositCall),
        FeesAndReserves(FeesAndReservesCall),
        Identifier(IdentifierCall),
        IsDebt(IsDebtCall),
        PrepareFees(PrepareFeesCall),
        RevokeApproval(RevokeApprovalCall),
        SetupMetaData(SetupMetaDataCall),
        Slippage(SlippageCall),
        UpdateManagementFee(UpdateManagementFeeCall),
        UpdatePerformanceFee(UpdatePerformanceFeeCall),
        Withdraw(WithdrawCall),
        WithdrawAssetsFromReserves(WithdrawAssetsFromReservesCall),
        WithdrawableFrom(WithdrawableFromCall),
    }
    impl ethers::core::abi::AbiDecode for FeesAndReservesAdaptorCalls {
        fn decode(data: impl AsRef<[u8]>) -> Result<Self, ethers::core::abi::AbiError> {
            if let Ok(decoded) =
                <AddAssetsToReservesCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::AddAssetsToReserves(decoded));
            }
            if let Ok(decoded) =
                <AssetOfCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::AssetOf(decoded));
            }
            if let Ok(decoded) =
                <AssetsUsedCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::AssetsUsed(decoded));
            }
            if let Ok(decoded) =
                <BalanceOfCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::BalanceOf(decoded));
            }
            if let Ok(decoded) =
                <ChangeUpkeepFrequencyCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::ChangeUpkeepFrequency(decoded));
            }
            if let Ok(decoded) =
                <ChangeUpkeepMaxGasCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::ChangeUpkeepMaxGas(decoded));
            }
            if let Ok(decoded) =
                <DepositCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::Deposit(decoded));
            }
            if let Ok(decoded) =
                <FeesAndReservesCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::FeesAndReserves(decoded));
            }
            if let Ok(decoded) =
                <IdentifierCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::Identifier(decoded));
            }
            if let Ok(decoded) = <IsDebtCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::IsDebt(decoded));
            }
            if let Ok(decoded) =
                <PrepareFeesCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::PrepareFees(decoded));
            }
            if let Ok(decoded) =
                <RevokeApprovalCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::RevokeApproval(decoded));
            }
            if let Ok(decoded) =
                <SetupMetaDataCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::SetupMetaData(decoded));
            }
            if let Ok(decoded) =
                <SlippageCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::Slippage(decoded));
            }
            if let Ok(decoded) =
                <UpdateManagementFeeCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::UpdateManagementFee(decoded));
            }
            if let Ok(decoded) =
                <UpdatePerformanceFeeCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::UpdatePerformanceFee(decoded));
            }
            if let Ok(decoded) =
                <WithdrawCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::Withdraw(decoded));
            }
            if let Ok(decoded) =
                <WithdrawAssetsFromReservesCall as ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                )
            {
                return Ok(FeesAndReservesAdaptorCalls::WithdrawAssetsFromReserves(
                    decoded,
                ));
            }
            if let Ok(decoded) =
                <WithdrawableFromCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(FeesAndReservesAdaptorCalls::WithdrawableFrom(decoded));
            }
            Err(ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ethers::core::abi::AbiEncode for FeesAndReservesAdaptorCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                FeesAndReservesAdaptorCalls::AddAssetsToReserves(element) => element.encode(),
                FeesAndReservesAdaptorCalls::AssetOf(element) => element.encode(),
                FeesAndReservesAdaptorCalls::AssetsUsed(element) => element.encode(),
                FeesAndReservesAdaptorCalls::BalanceOf(element) => element.encode(),
                FeesAndReservesAdaptorCalls::ChangeUpkeepFrequency(element) => element.encode(),
                FeesAndReservesAdaptorCalls::ChangeUpkeepMaxGas(element) => element.encode(),
                FeesAndReservesAdaptorCalls::Deposit(element) => element.encode(),
                FeesAndReservesAdaptorCalls::FeesAndReserves(element) => element.encode(),
                FeesAndReservesAdaptorCalls::Identifier(element) => element.encode(),
                FeesAndReservesAdaptorCalls::IsDebt(element) => element.encode(),
                FeesAndReservesAdaptorCalls::PrepareFees(element) => element.encode(),
                FeesAndReservesAdaptorCalls::RevokeApproval(element) => element.encode(),
                FeesAndReservesAdaptorCalls::SetupMetaData(element) => element.encode(),
                FeesAndReservesAdaptorCalls::Slippage(element) => element.encode(),
                FeesAndReservesAdaptorCalls::UpdateManagementFee(element) => element.encode(),
                FeesAndReservesAdaptorCalls::UpdatePerformanceFee(element) => element.encode(),
                FeesAndReservesAdaptorCalls::Withdraw(element) => element.encode(),
                FeesAndReservesAdaptorCalls::WithdrawAssetsFromReserves(element) => {
                    element.encode()
                }
                FeesAndReservesAdaptorCalls::WithdrawableFrom(element) => element.encode(),
            }
        }
    }
    impl ::std::fmt::Display for FeesAndReservesAdaptorCalls {
        fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
            match self {
                FeesAndReservesAdaptorCalls::AddAssetsToReserves(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::AssetOf(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::AssetsUsed(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::BalanceOf(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::ChangeUpkeepFrequency(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::ChangeUpkeepMaxGas(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::Deposit(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::FeesAndReserves(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::Identifier(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::IsDebt(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::PrepareFees(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::RevokeApproval(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::SetupMetaData(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::Slippage(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::UpdateManagementFee(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::UpdatePerformanceFee(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::Withdraw(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::WithdrawAssetsFromReserves(element) => element.fmt(f),
                FeesAndReservesAdaptorCalls::WithdrawableFrom(element) => element.fmt(f),
            }
        }
    }
    impl ::std::convert::From<AddAssetsToReservesCall> for FeesAndReservesAdaptorCalls {
        fn from(var: AddAssetsToReservesCall) -> Self {
            FeesAndReservesAdaptorCalls::AddAssetsToReserves(var)
        }
    }
    impl ::std::convert::From<AssetOfCall> for FeesAndReservesAdaptorCalls {
        fn from(var: AssetOfCall) -> Self {
            FeesAndReservesAdaptorCalls::AssetOf(var)
        }
    }
    impl ::std::convert::From<AssetsUsedCall> for FeesAndReservesAdaptorCalls {
        fn from(var: AssetsUsedCall) -> Self {
            FeesAndReservesAdaptorCalls::AssetsUsed(var)
        }
    }
    impl ::std::convert::From<BalanceOfCall> for FeesAndReservesAdaptorCalls {
        fn from(var: BalanceOfCall) -> Self {
            FeesAndReservesAdaptorCalls::BalanceOf(var)
        }
    }
    impl ::std::convert::From<ChangeUpkeepFrequencyCall> for FeesAndReservesAdaptorCalls {
        fn from(var: ChangeUpkeepFrequencyCall) -> Self {
            FeesAndReservesAdaptorCalls::ChangeUpkeepFrequency(var)
        }
    }
    impl ::std::convert::From<ChangeUpkeepMaxGasCall> for FeesAndReservesAdaptorCalls {
        fn from(var: ChangeUpkeepMaxGasCall) -> Self {
            FeesAndReservesAdaptorCalls::ChangeUpkeepMaxGas(var)
        }
    }
    impl ::std::convert::From<DepositCall> for FeesAndReservesAdaptorCalls {
        fn from(var: DepositCall) -> Self {
            FeesAndReservesAdaptorCalls::Deposit(var)
        }
    }
    impl ::std::convert::From<FeesAndReservesCall> for FeesAndReservesAdaptorCalls {
        fn from(var: FeesAndReservesCall) -> Self {
            FeesAndReservesAdaptorCalls::FeesAndReserves(var)
        }
    }
    impl ::std::convert::From<IdentifierCall> for FeesAndReservesAdaptorCalls {
        fn from(var: IdentifierCall) -> Self {
            FeesAndReservesAdaptorCalls::Identifier(var)
        }
    }
    impl ::std::convert::From<IsDebtCall> for FeesAndReservesAdaptorCalls {
        fn from(var: IsDebtCall) -> Self {
            FeesAndReservesAdaptorCalls::IsDebt(var)
        }
    }
    impl ::std::convert::From<PrepareFeesCall> for FeesAndReservesAdaptorCalls {
        fn from(var: PrepareFeesCall) -> Self {
            FeesAndReservesAdaptorCalls::PrepareFees(var)
        }
    }
    impl ::std::convert::From<RevokeApprovalCall> for FeesAndReservesAdaptorCalls {
        fn from(var: RevokeApprovalCall) -> Self {
            FeesAndReservesAdaptorCalls::RevokeApproval(var)
        }
    }
    impl ::std::convert::From<SetupMetaDataCall> for FeesAndReservesAdaptorCalls {
        fn from(var: SetupMetaDataCall) -> Self {
            FeesAndReservesAdaptorCalls::SetupMetaData(var)
        }
    }
    impl ::std::convert::From<SlippageCall> for FeesAndReservesAdaptorCalls {
        fn from(var: SlippageCall) -> Self {
            FeesAndReservesAdaptorCalls::Slippage(var)
        }
    }
    impl ::std::convert::From<UpdateManagementFeeCall> for FeesAndReservesAdaptorCalls {
        fn from(var: UpdateManagementFeeCall) -> Self {
            FeesAndReservesAdaptorCalls::UpdateManagementFee(var)
        }
    }
    impl ::std::convert::From<UpdatePerformanceFeeCall> for FeesAndReservesAdaptorCalls {
        fn from(var: UpdatePerformanceFeeCall) -> Self {
            FeesAndReservesAdaptorCalls::UpdatePerformanceFee(var)
        }
    }
    impl ::std::convert::From<WithdrawCall> for FeesAndReservesAdaptorCalls {
        fn from(var: WithdrawCall) -> Self {
            FeesAndReservesAdaptorCalls::Withdraw(var)
        }
    }
    impl ::std::convert::From<WithdrawAssetsFromReservesCall> for FeesAndReservesAdaptorCalls {
        fn from(var: WithdrawAssetsFromReservesCall) -> Self {
            FeesAndReservesAdaptorCalls::WithdrawAssetsFromReserves(var)
        }
    }
    impl ::std::convert::From<WithdrawableFromCall> for FeesAndReservesAdaptorCalls {
        fn from(var: WithdrawableFromCall) -> Self {
            FeesAndReservesAdaptorCalls::WithdrawableFrom(var)
        }
    }
}

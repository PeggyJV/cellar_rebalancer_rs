pub use collateralftokenadaptorv1_mod::*;
#[allow(clippy::too_many_arguments)]
mod collateralftokenadaptorv1_mod {
    #![allow(clippy::enum_variant_names)]
    #![allow(dead_code)]
    #![allow(clippy::type_complexity)]
    #![allow(unused_imports)]
    use ethers::contract::{
        builders::{ContractCall, Event},
        Contract, Lazy,
    };
    use ethers::core::{
        abi::{Abi, Detokenize, InvalidOutputType, Token, Tokenizable},
        types::*,
    };
    use ethers::providers::Middleware;
    #[doc = "CollateralFTokenAdaptorV1 was auto-generated with ethers-rs Abigen. More information at: https://github.com/gakonst/ethers-rs"]
    use std::sync::Arc;
    pub static COLLATERALFTOKENADAPTORV1_ABI: ethers::contract::Lazy<ethers::core::abi::Abi> =
        ethers::contract::Lazy::new(|| {
            serde_json :: from_str ("{\n  \"abi\": [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_frax\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_healthFactor\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__ConstructorHealthFactorTooLow\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__ExternalReceiverBlocked\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"asset\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"BaseAdaptor__PricingNotSupported\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__Slippage\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__UserDepositsNotAllowed\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"BaseAdaptor__UserWithdrawsNotAllowed\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"fraxlendPair\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"CollateralFTokenAdaptor__FraxlendPairPositionsMustBeTracked\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"fraxlendPair\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"CollateralFTokenAdaptor__HealthFactorTooLow\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"FRAX\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract ERC20\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"contract IFToken\",\n          \"name\": \"_fraxlendPair\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_collateralToDeposit\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addCollateral\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_adaptorData\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"assetOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract ERC20\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"adaptorData\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"assetsUsed\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract ERC20[]\",\n          \"name\": \"assets\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"adaptorData\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"assets\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"adaptorData\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"deposit\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"identifier\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"isDebt\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"minimumHealthFactor\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_collateralAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"contract IFToken\",\n          \"name\": \"_fraxlendPair\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"removeCollateral\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"contract ERC20\",\n          \"name\": \"asset\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"revokeApproval\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"slippage\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"withdraw\",\n      \"outputs\": [],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"withdrawableFrom\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    }\n  ],\n  \"bytecode\": {\n    \"object\": \"\",\n    \"sourceMap\": \"527:10498:191:-:0;;;2007:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2067:52;2105:13;2067:37;:52::i;:::-;-1:-1:-1;;;;;2129:19:191;;;;;2158:35;;527:10498;;8769:233:187;2786:7;8873:19;:57;8869:126;;;8951:44;;-1:-1:-1;;;8951:44:187;;;;;;;;;;;8869:126;8769:233;:::o;14:351:266:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:266;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:266:o;:::-;527:10498:191;;;;;;;;;;;;;;;;;;;;;;;\",\n    \"linkReferences\": {}\n  },\n  \"deployedBytecode\": {\n    \"object\": \"\",\n    \"sourceMap\": \"527:10498:191:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:44;;;;;;;;160:25:266;;;148:2;133:18;1956:44:191;;;;;;;;2441:78:187;;;2507:5;340:42:266;;328:2;313:18;2441:78:187;196:192:266;3183:564:191;;;;;;:::i;:::-;;:::i;:::-;;5675:583;;;;;;:::i;:::-;;:::i;4606:223::-;;;;;;:::i;:::-;;:::i;2619:160::-;;;:::i;5185:83::-;;;5233:4;2998:41:266;;2986:2;2971:18;5185:83:191;2858:187:266;5960:180:187;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1734:27:191:-;;;;;;;;-1:-1:-1;;;;;3907:32:266;;;3889:51;;3877:2;3862:18;1734:27:191;3728:218:266;3916:147:191;;;;;;:::i;:::-;;:::i;9230:107:187:-;;;;;;:::i;:::-;;:::i;6535:586:191:-;;;;;;:::i;:::-;;:::i;4891:210::-;;;;;;:::i;:::-;;:::i;4318:118::-;;;;;;:::i;:::-;;:::i;3183:564::-;3282:20;3316:11;3305:34;;;;;;;;;;;;:::i;:::-;3282:57;;3349:21;3373:37;3397:12;3373:23;:37::i;:::-;3349:61;;3421:29;3437:12;3421:15;:29::i;:::-;3498:12;3521:56;-1:-1:-1;;;;;3521:27:191;;3498:12;3570:6;3521:27;:56::i;:::-;3588:36;3603:12;3617:6;3588:14;:36::i;:::-;3679:61;3703:15;3720:19;3679:23;:61::i;:::-;3272:475;;;3183:564;;;:::o;5675:583::-;5768:30;5784:13;5768:15;:30::i;:::-;5808:22;5833:38;5857:13;5833:23;:38::i;:::-;5808:63;;5882:23;5908:53;5922:16;5940:20;5908:13;:53::i;:::-;5882:79;-1:-1:-1;6002:13:191;6026:59;-1:-1:-1;;;;;6026:28:191;;6002:13;5882:79;6026:28;:59::i;:::-;6095:46;6110:13;6125:15;6095:14;:46::i;:::-;6196:55;6220:16;6238:12;6196:23;:55::i;:::-;5758:500;;;5675:583;;:::o;4606:223::-;4681:7;4700:20;4734:11;4723:34;;;;;;;;;;;;:::i;:::-;4700:57;;4774:48;4797:12;4811:10;4774:22;:48::i;:::-;4767:55;4606:223;-1:-1:-1;;;4606:223:191:o;2619:160::-;2679:7;2715:56;;;;;;6508:2:266;6490:21;;;6547:2;6527:18;;;6520:30;6586:34;6581:2;6566:18;;6559:62;-1:-1:-1;;;6652:2:266;6637:18;;6630:40;6702:3;6687:19;;6306:406;2715:56:191;;;;;;;;;;;;;2705:67;;;;;;2698:74;;2619:160;:::o;5960:180:187:-;6077:14;;;6089:1;6077:14;;;;;;;;;6035:21;;6077:14;;;;;;;;;;;-1:-1:-1;6077:14:187;6068:23;;6113:20;6121:11;6113:7;:20::i;:::-;6101:6;6108:1;6101:9;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;6101:32:187;;;-1:-1:-1;;;;;6101:32:187;;;;;5960:180;;;:::o;3916:147:191:-;4018:38;;-1:-1:-1;;;4018:38:191;;;;;;;;;;;9230:107:187;9301:29;-1:-1:-1;;;;;9301:17:187;;9319:7;9328:1;9301:17;:29::i;:::-;9230:107;;:::o;6535:586:191:-;6628:30;6644:13;6628:15;:30::i;:::-;6697:51;6715:17;6734:13;6697:17;:51::i;:::-;6758:21;6782:35;6803:13;6782:20;:35::i;:::-;6758:59;;6967:46;6984:13;6999;6967:16;:46::i;:::-;6944:19;:70;6940:175;;;7037:67;;-1:-1:-1;;;7037:67:191;;-1:-1:-1;;;;;3907:32:266;;7037:67:191;;;3889:51:266;3862:18;;7037:67:191;;;;;;;;6940:175;6618:503;6535:586;;:::o;4891:210::-;4965:5;4982:20;5016:12;5005:35;;;;;;;;;;;;:::i;:::-;4982:58;;5057:37;5081:12;5057:23;:37::i;4318:118::-;4402:7;4318:118;;;;;:::o;10002:178::-;10089:24;10138:13;-1:-1:-1;;;;;10138:32:191;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7417:459::-;7497:20;7541:12;:10;:12::i;:::-;7562:34;;;-1:-1:-1;;;;;3907:32:266;;7562:34:191;;;3889:51:266;7555:5:191;;3862:18:266;7562:34:191;;;-1:-1:-1;;7562:34:191;;;;;;;;;;7530:67;;;;7562:34;7530:67;;:::i;:::-;;;;;;;;;;;;;7520:78;;;;;;7497:101;;7608:17;7643:4;-1:-1:-1;;;;;7628:30:191;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7628:60:191;;7689:12;7628:74;;;;;;;;;;;;;160:25:266;;148:2;133:18;;14:177;7628:74:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7717:48;;-1:-1:-1;;;7717:48:191;;370:10:266;358:23;;7717:48:191;;;340:42:266;7608:94:191;;-1:-1:-1;7732:4:191;;7717:36;;313:18:266;;7717:48:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7712:157;;7786:83;;-1:-1:-1;;;7786:83:191;;-1:-1:-1;;;;;3907:32:266;;7786:83:191;;;3889:51:266;3862:18;;7786:83:191;3728:218:266;4455:1497:65;4566:12;4736:4;4730:11;-1:-1:-1;;;4859:17:65;4852:93;4992:2;4988:1;4969:17;4965:25;4958:37;5072:6;5067:2;5048:17;5044:26;5037:42;5874:2;5871:1;5867:2;5848:17;5845:1;5838:5;5831;5826:51;5395:16;5388:24;5382:2;5364:16;5361:24;5357:1;5353;5347:8;5344:15;5340:46;5337:76;5137:754;5126:765;;;5919:7;5911:34;;;;-1:-1:-1;;;5911:34:65;;9376:2:266;5911:34:65;;;9358:21:266;9415:2;9395:18;;;9388:30;-1:-1:-1;;;9434:18:266;;;9427:44;9488:18;;5911:34:65;9174:338:266;5911:34:65;4556:1396;4455:1497;;;:::o;9640:157:191:-;9731:59;;-1:-1:-1;;;9731:59:191;;;;;9691:25:266;;;9784:4:191;9732:18:266;;;9725:60;-1:-1:-1;;;;;9731:27:191;;;;;9664:18:266;;9731:59:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8184:167:187;8270:39;;-1:-1:-1;;;8270:39:187;;8294:4;8270:39;;;10008:34:266;-1:-1:-1;;;;;10078:15:266;;;10058:18;;;10051:43;8312:1:187;;8270:15;;;;;;9943:18:266;;8270:39:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;8266:78;;;8315:29;-1:-1:-1;;;;;8315:17:187;;8333:7;8342:1;8315:17;:29::i;7842:207::-;7925:7;-1:-1:-1;;7948:6:187;:27;7944:98;;7984:30;;-1:-1:-1;;;7984:30:187;;8008:4;7984:30;;;3889:51:266;-1:-1:-1;;;;;7984:15:187;;;;;3862:18:266;;7984:30:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7977:37;;;;7944:98;-1:-1:-1;8036:6:187;8029:13;;3894:216:197;4061:42;;-1:-1:-1;;;4061:42:197;;-1:-1:-1;;;;;3907:32:266;;;4061:42:197;;;3889:51:266;4017:25:197;;4061:35;;;;;;3862:18:266;;4061:42:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10435:175:191:-;10539:64;;-1:-1:-1;;;10539:64:191;;;;;9691:25:266;;;10597:4:191;9732:18:266;;;9725:60;-1:-1:-1;;;;;10539:30:191;;;;;9664:18:266;;10539:64:191;9517:274:266;10841:182:191;10920:20;10967:13;-1:-1:-1;;;;;10967:30:191;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;10841:182;-1:-1:-1;;10841:182:191:o;1173:1164:197:-;1276:7;1333:22;1358:47;1376:13;1399:4;1358:17;:47::i;:::-;1333:72;;1415:23;1441:58;1457:13;1472:14;1488:4;1494;1441:15;:58::i;:::-;1415:84;;1638:15;1657:1;1638:20;1634:40;;1667:7;1660:14;;;;;;1634:40;1684:25;1712:52;1735:13;1758:4;1712:22;:52::i;:::-;1684:80;;1778:17;1799:1;1778:22;1774:36;;1809:1;1802:8;;;;;;;1774:36;1822:21;1845:26;1875:28;1889:13;1875;:28::i;:::-;1821:82;;-1:-1:-1;1821:82:197;-1:-1:-1;1913:26:197;2031:17;1821:82;;1945:31;1963:13;1945:15;:31;:::i;:::-;1944:54;;;;:::i;:::-;1943:72;;;;:::i;:::-;1942:106;;;;:::i;:::-;1913:135;;2099:26;2128:22;2136:13;2128:7;:22::i;:::-;2099:51;-1:-1:-1;2191:17:197;2211:55;2099:51;2241:4;2247:18;2211:29;:55::i;:::-;2191:75;1173:1164;-1:-1:-1;;;;;;;;;;;1173:1164:197:o;3388:257::-;3552:37;;-1:-1:-1;;;3552:37:197;;-1:-1:-1;;;;;3907:32:266;;;3552:37:197;;;3889:51:266;3506:27:197;;3552:30;;;;;;3862:18:266;;3552:37:197;3728:218:266;2906:270:197;3104:65;;-1:-1:-1;;;3104:65:197;;;;;11886:25:266;;;11954:14;;11947:22;11927:18;;;11920:50;12013:14;;12006:22;11986:18;;;11979:50;3078:7:197;;-1:-1:-1;;;;;3104:28:197;;;;;11859:18:266;;3104:65:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3097:72;2906:270;-1:-1:-1;;;;;2906:270:197:o;4116:237::-;4207:21;4230:26;4318:13;-1:-1:-1;;;;;4318:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4268:78:197;;;;-1:-1:-1;4116:237:197;;-1:-1:-1;;;;;;;4116:237:197:o;4359:135::-;4430:14;4465:13;-1:-1:-1;;;;;4465:20:197;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1331:505:225:-;1507:9;;;1638:19;;1631:27;1663:9;;1677;;;1674:16;;1660:31;1627:65;1617:121;;1722:1;1719;1712:12;1617:121;1801:19;;1331:505;-1:-1:-1;;1331:505:225:o;393:127:266:-;454:10;449:3;445:20;442:1;435:31;485:4;482:1;475:15;509:4;506:1;499:15;525:718;567:5;620:3;613:4;605:6;601:17;597:27;587:55;;638:1;635;628:12;587:55;674:6;661:20;700:18;737:2;733;730:10;727:36;;;743:18;;:::i;:::-;818:2;812:9;786:2;872:13;;-1:-1:-1;;868:22:266;;;892:2;864:31;860:40;848:53;;;916:18;;;936:22;;;913:46;910:72;;;962:18;;:::i;:::-;1002:10;998:2;991:22;1037:2;1029:6;1022:18;1083:3;1076:4;1071:2;1063:6;1059:15;1055:26;1052:35;1049:55;;;1100:1;1097;1090:12;1049:55;1164:2;1157:4;1149:6;1145:17;1138:4;1130:6;1126:17;1113:54;1211:1;1204:4;1199:2;1191:6;1187:15;1183:26;1176:37;1231:6;1222:15;;;;;;525:718;;;;:::o;1248:607::-;1343:6;1351;1359;1412:2;1400:9;1391:7;1387:23;1383:32;1380:52;;;1428:1;1425;1418:12;1380:52;1464:9;1451:23;1441:33;;1525:2;1514:9;1510:18;1497:32;1548:18;1589:2;1581:6;1578:14;1575:34;;;1605:1;1602;1595:12;1575:34;1628:49;1669:7;1660:6;1649:9;1645:22;1628:49;:::i;:::-;1618:59;;1730:2;1719:9;1715:18;1702:32;1686:48;;1759:2;1749:8;1746:16;1743:36;;;1775:1;1772;1765:12;1743:36;;1798:51;1841:7;1830:8;1819:9;1815:24;1798:51;:::i;:::-;1788:61;;;1248:607;;;;;:::o;1860:140::-;-1:-1:-1;;;;;1944:31:266;;1934:42;;1924:70;;1990:1;1987;1980:12;1924:70;1860:140;:::o;2005:341::-;2090:6;2098;2151:2;2139:9;2130:7;2126:23;2122:32;2119:52;;;2167:1;2164;2157:12;2119:52;2206:9;2193:23;2225:40;2259:5;2225:40;:::i;:::-;2284:5;2336:2;2321:18;;;;2308:32;;-1:-1:-1;;;2005:341:266:o;2351:320::-;2419:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:52;;;2488:1;2485;2478:12;2440:52;2528:9;2515:23;2561:18;2553:6;2550:30;2547:50;;;2593:1;2590;2583:12;2547:50;2616:49;2657:7;2648:6;2637:9;2633:22;2616:49;:::i;:::-;2606:59;2351:320;-1:-1:-1;;;;2351:320:266:o;3050:673::-;3236:2;3288:21;;;3358:13;;3261:18;;;3380:22;;;3207:4;;3236:2;3459:15;;;;3433:2;3418:18;;;3207:4;3502:195;3516:6;3513:1;3510:13;3502:195;;;3581:13;;-1:-1:-1;;;;;3577:39:266;3565:52;;3672:15;;;;3637:12;;;;3613:1;3531:9;3502:195;;;-1:-1:-1;3714:3:266;;3050:673;-1:-1:-1;;;;;;3050:673:266:o;3951:752::-;4055:6;4063;4071;4079;4132:3;4120:9;4111:7;4107:23;4103:33;4100:53;;;4149:1;4146;4139:12;4100:53;4185:9;4172:23;4162:33;;4245:2;4234:9;4230:18;4217:32;4258:40;4292:5;4258:40;:::i;:::-;4317:5;-1:-1:-1;4373:2:266;4358:18;;4345:32;4396:18;4426:14;;;4423:34;;;4453:1;4450;4443:12;4423:34;4476:49;4517:7;4508:6;4497:9;4493:22;4476:49;:::i;:::-;4466:59;;4578:2;4567:9;4563:18;4550:32;4534:48;;4607:2;4597:8;4594:16;4591:36;;;4623:1;4620;4613:12;4591:36;;4646:51;4689:7;4678:8;4667:9;4663:24;4646:51;:::i;:::-;4636:61;;;3951:752;;;;;;;:::o;4708:421::-;4791:6;4799;4852:2;4840:9;4831:7;4827:23;4823:32;4820:52;;;4868:1;4865;4858:12;4820:52;4907:9;4894:23;4926:40;4960:5;4926:40;:::i;:::-;4985:5;-1:-1:-1;5042:2:266;5027:18;;5014:32;5055:42;5014:32;5055:42;:::i;:::-;5116:7;5106:17;;;4708:421;;;;;:::o;5134:341::-;5219:6;5227;5280:2;5268:9;5259:7;5255:23;5251:32;5248:52;;;5296:1;5293;5286:12;5248:52;5332:9;5319:23;5309:33;;5392:2;5381:9;5377:18;5364:32;5405:40;5439:5;5405:40;:::i;5480:539::-;5566:6;5574;5627:2;5615:9;5606:7;5602:23;5598:32;5595:52;;;5643:1;5640;5633:12;5595:52;5683:9;5670:23;5712:18;5753:2;5745:6;5742:14;5739:34;;;5769:1;5766;5759:12;5739:34;5792:49;5833:7;5824:6;5813:9;5809:22;5792:49;:::i;:::-;5782:59;;5894:2;5883:9;5879:18;5866:32;5850:48;;5923:2;5913:8;5910:16;5907:36;;;5939:1;5936;5929:12;5907:36;;5962:51;6005:7;5994:8;5983:9;5979:24;5962:51;:::i;:::-;5952:61;;;5480:539;;;;;:::o;6024:277::-;6111:6;6164:2;6152:9;6143:7;6139:23;6135:32;6132:52;;;6180:1;6177;6170:12;6132:52;6212:9;6206:16;6231:40;6265:5;6231:40;:::i;6717:127::-;6778:10;6773:3;6769:20;6766:1;6759:31;6809:4;6806:1;6799:15;6833:4;6830:1;6823:15;7322:701;7519:6;7508:9;7501:25;7482:4;7545:2;7597:6;7590:14;7583:22;7578:2;7567:9;7563:18;7556:50;7642:2;7637;7626:9;7622:18;7615:30;7674:6;7668:13;7717:6;7712:2;7701:9;7697:18;7690:34;7742:1;7752:141;7766:6;7763:1;7760:13;7752:141;;;7862:14;;;7858:23;;7852:30;7827:17;;;7846:3;7823:27;7816:67;7781:10;;7752:141;;;7756:3;7943:1;7937:3;7928:6;7917:9;7913:22;7909:32;7902:43;8013:3;8006:2;8002:7;7997:2;7989:6;7985:15;7981:29;7970:9;7966:45;7962:55;7954:63;;;;7322:701;;;;;;:::o;8311:167::-;8389:13;;8442:10;8431:22;;8421:33;;8411:61;;8468:1;8465;8458:12;8411:61;8311:167;;;:::o;8483:206::-;8552:6;8605:2;8593:9;8584:7;8580:23;8576:32;8573:52;;;8621:1;8618;8611:12;8573:52;8644:39;8673:9;8644:39;:::i;8892:277::-;8959:6;9012:2;9000:9;8991:7;8987:23;8983:32;8980:52;;;9028:1;9025;9018:12;8980:52;9060:9;9054:16;9113:5;9106:13;9099:21;9092:5;9089:32;9079:60;;9135:1;9132;9125:12;10105:184;10175:6;10228:2;10216:9;10207:7;10203:23;10199:32;10196:52;;;10244:1;10241;10234:12;10196:52;-1:-1:-1;10267:16:266;;10105:184;-1:-1:-1;10105:184:266:o;10294:905::-;10399:6;10452:3;10440:9;10431:7;10427:23;10423:33;10420:53;;;10469:1;10466;10459:12;10420:53;10502:2;10496:9;10544:3;10536:6;10532:16;10614:6;10602:10;10599:22;10578:18;10566:10;10563:34;10560:62;10557:88;;;10625:18;;:::i;:::-;10661:2;10654:22;10698:16;;10723:40;10698:16;10723:40;:::i;:::-;10772:21;;10826:48;10870:2;10855:18;;10826:48;:::i;:::-;10821:2;10809:15;;10802:73;10920:2;10905:18;;10899:25;-1:-1:-1;;;;;10955:33:266;;10943:46;;10933:74;;11003:1;11000;10993:12;10933:74;11035:2;11023:15;;11016:32;11102:2;11087:18;;;11081:25;11064:15;;;11057:50;11162:3;11147:19;;;11141:26;11123:16;;;11116:52;;;;-1:-1:-1;11027:6:266;10294:905;-1:-1:-1;10294:905:266:o;11204:265::-;11277:9;;;11308;;11325:15;;;11319:22;;11305:37;11295:168;;11385:10;11380:3;11376:20;11373:1;11366:31;11420:4;11417:1;11410:15;11448:4;11445:1;11438:15;11474:217;11514:1;11540;11530:132;;11584:10;11579:3;11575:20;11572:1;11565:31;11619:4;11616:1;11609:15;11647:4;11644:1;11637:15;11530:132;-1:-1:-1;11676:9:266;;11474:217::o;12040:616::-;12173:6;12181;12189;12197;12205;12213;12221;12229;12282:3;12270:9;12261:7;12257:23;12253:33;12250:53;;;12299:1;12296;12289:12;12250:53;-1:-1:-1;;12322:16:266;;12378:2;12363:18;;12357:25;12422:2;12407:18;;12401:25;12466:2;12451:18;;12445:25;12510:3;12495:19;;12489:26;12555:3;12540:19;;12534:26;12600:3;12585:19;;12579:26;12645:3;12630:19;;;12624:26;12322:16;;12357:25;;-1:-1:-1;12401:25:266;;12445;;-1:-1:-1;12489:26:266;-1:-1:-1;12534:26:266;;-1:-1:-1;12579:26:266;-1:-1:-1;12624:26:266;;-1:-1:-1;12040:616:266;-1:-1:-1;12040:616:266:o\",\n    \"linkReferences\": {},\n    \"immutableReferences\": {\n      \"78404\": [\n        {\n          \"start\": 432,\n          \"length\": 32\n        }\n      ],\n      \"78407\": [\n        {\n          \"start\": 244,\n          \"length\": 32\n        },\n        {\n          \"start\": 1112,\n          \"length\": 32\n        }\n      ]\n    }\n  },\n  \"methodIdentifiers\": {\n    \"FRAX()\": \"b0e4556f\",\n    \"addCollateral(address,uint256)\": \"6d75b9ee\",\n    \"assetOf(bytes)\": \"e170a9bf\",\n    \"assetsUsed(bytes)\": \"aeffddde\",\n    \"balanceOf(bytes)\": \"78415365\",\n    \"deposit(uint256,bytes,bytes)\": \"69445c31\",\n    \"identifier()\": \"7998a1c4\",\n    \"isDebt()\": \"89353a09\",\n    \"minimumHealthFactor()\": \"1caff8b1\",\n    \"removeCollateral(uint256,address)\": \"d41ddc96\",\n    \"revokeApproval(address,address)\": \"d3bfe76a\",\n    \"slippage()\": \"3e032a3b\",\n    \"withdraw(uint256,address,bytes,bytes)\": \"c9111bd7\",\n    \"withdrawableFrom(bytes,bytes)\": \"fa50e5d2\"\n  },\n  \"rawMetadata\": \"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.21+commit.d9974bed\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"_frax\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_healthFactor\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__ConstructorHealthFactorTooLow\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__ExternalReceiverBlocked\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"asset\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"BaseAdaptor__PricingNotSupported\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__Slippage\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__UserDepositsNotAllowed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"BaseAdaptor__UserWithdrawsNotAllowed\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"fraxlendPair\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"CollateralFTokenAdaptor__FraxlendPairPositionsMustBeTracked\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"fraxlendPair\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"CollateralFTokenAdaptor__HealthFactorTooLow\\\",\\\"type\\\":\\\"error\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"FRAX\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract ERC20\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"contract IFToken\\\",\\\"name\\\":\\\"_fraxlendPair\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_collateralToDeposit\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"addCollateral\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"_adaptorData\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"assetOf\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract ERC20\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"adaptorData\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"assetsUsed\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"contract ERC20[]\\\",\\\"name\\\":\\\"assets\\\",\\\"type\\\":\\\"address[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"adaptorData\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"balanceOf\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"assets\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"adaptorData\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"deposit\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"identifier\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"isDebt\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"minimumHealthFactor\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_collateralAmount\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"contract IFToken\\\",\\\"name\\\":\\\"_fraxlendPair\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"removeCollateral\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"contract ERC20\\\",\\\"name\\\":\\\"asset\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"spender\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"revokeApproval\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"slippage\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint32\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint32\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"withdraw\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"withdrawableFrom\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"pure\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"author\\\":\\\"crispymangoes, 0xEinCodes\\\",\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{\\\"addCollateral(address,uint256)\\\":{\\\"params\\\":{\\\"_collateralToDeposit\\\":\\\"The amount of collateral to add to Fraxlend Pair position\\\",\\\"_fraxlendPair\\\":\\\"The specified Fraxlend Pair\\\"}},\\\"balanceOf(bytes)\\\":{\\\"params\\\":{\\\"adaptorData\\\":\\\"the collateral asset deposited into Fraxlend\\\"}},\\\"deposit(uint256,bytes,bytes)\\\":{\\\"details\\\":\\\"configurationData is NOT used\\\",\\\"params\\\":{\\\"adaptorData\\\":\\\"adaptor data containing the abi encoded fraxlendPair\\\",\\\"assets\\\":\\\"the amount of assets to provide as collateral on FraxLend\\\"}},\\\"identifier()\\\":{\\\"details\\\":\\\"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\\\"},\\\"removeCollateral(uint256,address)\\\":{\\\"params\\\":{\\\"_collateralAmount\\\":\\\"The amount of collateral to remove from fraxlend pair position\\\",\\\"_fraxlendPair\\\":\\\"The specified Fraxlend Pair\\\"}},\\\"revokeApproval(address,address)\\\":{\\\"params\\\":{\\\"asset\\\":\\\"the ERC20 asset to revoke `spender`s approval for\\\",\\\"spender\\\":\\\"the address to revoke approval for\\\"}}},\\\"title\\\":\\\"FraxLend Collateral Adaptor\\\",\\\"version\\\":1},\\\"userdoc\\\":{\\\"errors\\\":{\\\"BaseAdaptor__ConstructorHealthFactorTooLow()\\\":[{\\\"notice\\\":\\\"Attempted to set a constructor minimum health factor to a value         below `MINIMUM_CONSTRUCTOR_HEALTH_FACTOR()`.\\\"}],\\\"BaseAdaptor__ExternalReceiverBlocked()\\\":[{\\\"notice\\\":\\\"Attempted to specify an external receiver during a Cellar `callOnAdaptor` call.\\\"}],\\\"BaseAdaptor__PricingNotSupported(address)\\\":[{\\\"notice\\\":\\\"Attempted swap used unsupported output asset.\\\"}],\\\"BaseAdaptor__Slippage()\\\":[{\\\"notice\\\":\\\"Attempted swap has bad slippage.\\\"}],\\\"BaseAdaptor__UserDepositsNotAllowed()\\\":[{\\\"notice\\\":\\\"Attempted to deposit to a position where user deposits were not allowed.\\\"}],\\\"BaseAdaptor__UserWithdrawsNotAllowed()\\\":[{\\\"notice\\\":\\\"Attempted to withdraw from a position where user withdraws were not allowed.\\\"}],\\\"CollateralFTokenAdaptor__FraxlendPairPositionsMustBeTracked(address)\\\":[{\\\"notice\\\":\\\"Attempted to interact with an fraxlendPair the Cellar is not using.\\\"}],\\\"CollateralFTokenAdaptor__HealthFactorTooLow(address)\\\":[{\\\"notice\\\":\\\"Removal of collateral causes Cellar Health Factor below what is required\\\"}]},\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{\\\"FRAX()\\\":{\\\"notice\\\":\\\"The FRAX contract on current network.For mainnet use 0x853d955aCEf822Db058eb8505911ED77F175b99e.\\\"},\\\"addCollateral(address,uint256)\\\":{\\\"notice\\\":\\\"Allows strategists to add collateral to the respective cellar position on FraxLend, enabling borrowing.\\\"},\\\"assetOf(bytes)\\\":{\\\"notice\\\":\\\"Returns collateral asset\\\"},\\\"assetsUsed(bytes)\\\":{\\\"notice\\\":\\\"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\\\"},\\\"balanceOf(bytes)\\\":{\\\"notice\\\":\\\"Returns the cellar's balance of the collateralAsset position.\\\"},\\\"deposit(uint256,bytes,bytes)\\\":{\\\"notice\\\":\\\"User deposits collateralToken to Fraxlend pair\\\"},\\\"isDebt()\\\":{\\\"notice\\\":\\\"This adaptor returns collateral, and not debt.\\\"},\\\"minimumHealthFactor()\\\":{\\\"notice\\\":\\\"Minimum Health Factor enforced after every removeCollateral() strategist function call.Overwrites strategist set minimums if they are lower.\\\"},\\\"removeCollateral(uint256,address)\\\":{\\\"notice\\\":\\\"Allows strategists to remove collateral from the respective cellar position on FraxLend.\\\"},\\\"revokeApproval(address,address)\\\":{\\\"notice\\\":\\\"Allows strategists to zero out an approval for a given `asset`.\\\"},\\\"slippage()\\\":{\\\"notice\\\":\\\"Max possible slippage when making a swap router swap.\\\"},\\\"withdraw(uint256,address,bytes,bytes)\\\":{\\\"notice\\\":\\\"User withdraws are NOT allowed from this position. NOTE: collateral withdrawal calls directly from users disallowed for now.\\\"},\\\"withdrawableFrom(bytes,bytes)\\\":{\\\"notice\\\":\\\"This position is a debt position, and user withdraws are not allowed so         this position must return 0 for withdrawableFrom. NOTE: collateral withdrawal calls directly from users disallowed for now.\\\"}},\\\"notice\\\":\\\"Allows addition and removal of collateralAssets to Fraxlend pairs for a Cellar.\\\",\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"src/modules/adaptors/Frax/CollateralFTokenAdaptor.sol\\\":\\\"CollateralFTokenAdaptor\\\"},\\\"evmVersion\\\":\\\"paris\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":true,\\\"runs\\\":200},\\\"remappings\\\":[\\\":@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/\\\",\\\":@balancer/=lib/balancer-v2-monorepo/pkg/\\\",\\\":@chainlink/=lib/chainlink/\\\",\\\":@ds-test/=lib/forge-std/lib/ds-test/src/\\\",\\\":@forge-std/=lib/forge-std/src/\\\",\\\":@openzeppelin/=lib/openzeppelin-contracts/\\\",\\\":@solmate/=lib/solmate/src/\\\",\\\":@uniswap/v3-core/=lib/v3-core/\\\",\\\":@uniswap/v3-periphery/=lib/v3-periphery/\\\",\\\":@uniswapV3C/=lib/v3-core/contracts/\\\",\\\":@uniswapV3P/=lib/v3-periphery/contracts/\\\",\\\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\\\",\\\":balancer-v2-monorepo/=lib/balancer-v2-monorepo/\\\",\\\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\\\",\\\":ds-test/=lib/forge-std/lib/ds-test/src/\\\",\\\":forge-std/=lib/forge-std/src/\\\",\\\":openzeppelin-contracts/=lib/openzeppelin-contracts/\\\",\\\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\\\",\\\":solmate/=lib/solmate/src/\\\",\\\":v3-core/=lib/v3-core/contracts/\\\",\\\":v3-periphery/=lib/v3-periphery/contracts/\\\"]},\\\"sources\\\":{\\\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\\\":{\\\"keccak256\\\":\\\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\\\",\\\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\\\"]},\\\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\\\":{\\\"keccak256\\\":\\\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\\\",\\\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\\\"]},\\\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\":{\\\"keccak256\\\":\\\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\\\",\\\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\\\"]},\\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\":{\\\"keccak256\\\":\\\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\\\",\\\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\\\"]},\\\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\\\":{\\\"keccak256\\\":\\\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\\\",\\\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\\\"]},\\\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\\\":{\\\"keccak256\\\":\\\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\\\",\\\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\\\"]},\\\"lib/openzeppelin-contracts/contracts/utils/Address.sol\\\":{\\\"keccak256\\\":\\\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\\\",\\\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\\\"]},\\\"lib/openzeppelin-contracts/contracts/utils/Context.sol\\\":{\\\"keccak256\\\":\\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\\\",\\\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\\\"]},\\\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\\\":{\\\"keccak256\\\":\\\"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\\\",\\\"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\\\"]},\\\"lib/solmate/src/auth/Owned.sol\\\":{\\\"keccak256\\\":\\\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\\\",\\\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\\\"]},\\\"lib/solmate/src/mixins/ERC4626.sol\\\":{\\\"keccak256\\\":\\\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\\\",\\\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\\\"]},\\\"lib/solmate/src/tokens/ERC20.sol\\\":{\\\"keccak256\\\":\\\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\\\",\\\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\\\"]},\\\"lib/solmate/src/utils/FixedPointMathLib.sol\\\":{\\\"keccak256\\\":\\\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\\\",\\\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\\\"]},\\\"lib/solmate/src/utils/SafeTransferLib.sol\\\":{\\\"keccak256\\\":\\\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\\\",\\\"license\\\":\\\"AGPL-3.0-only\\\",\\\"urls\\\":[\\\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\\\",\\\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\\\"]},\\\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\\\":{\\\"keccak256\\\":\\\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\\\",\\\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\\\"]},\\\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\\\":{\\\"keccak256\\\":\\\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\\\",\\\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\\\"]},\\\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\\\":{\\\"keccak256\\\":\\\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\\\",\\\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\\\"]},\\\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\\\":{\\\"keccak256\\\":\\\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\\\",\\\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\\\"]},\\\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\\\":{\\\"keccak256\\\":\\\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\\\",\\\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\\\"]},\\\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\\\":{\\\"keccak256\\\":\\\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\\\",\\\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\\\"]},\\\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\\\":{\\\"keccak256\\\":\\\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\\\",\\\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\\\"]},\\\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\\\":{\\\"keccak256\\\":\\\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\\\",\\\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\\\"]},\\\"lib/v3-core/contracts/libraries/FullMath.sol\\\":{\\\"keccak256\\\":\\\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\\\",\\\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\\\"]},\\\"lib/v3-core/contracts/libraries/TickMath.sol\\\":{\\\"keccak256\\\":\\\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\\\",\\\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\\\"]},\\\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\\\":{\\\"keccak256\\\":\\\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\\\",\\\"license\\\":\\\"GPL-2.0-or-later\\\",\\\"urls\\\":[\\\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\\\",\\\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\\\"]},\\\"src/Registry.sol\\\":{\\\"keccak256\\\":\\\"0x2f5f6d61ffc1c9336c628a2cff52b424377feb20c3390f37418fbef1c8995edd\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://1eabb4a5f6bc4ea2c407f3a70efefae52ebe43a5c200cbf828d0e0a3ed676af2\\\",\\\"dweb:/ipfs/QmT6nEdMQx6WzTj8x8ZLayH6hpK5NyXSb97vu2juQ4kS4h\\\"]},\\\"src/base/Cellar.sol\\\":{\\\"keccak256\\\":\\\"0xc5c29f881503e070d2ccc098a7a46d9b03dd47144ae213cc086add626fda9d1a\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://5cf3ddc46f4ac3fe22ad9b1a54e2da8f7c7080d17d9bab1f0483eb0e425c4744\\\",\\\"dweb:/ipfs/QmNRfJvUqSkzSUX5KjiFygjr8sKHkVvERTy7W9LZ9DNc6q\\\"]},\\\"src/interfaces/external/Frax/IFToken.sol\\\":{\\\"keccak256\\\":\\\"0xb71f1b560b5de3a0f5c4ea6cf248073fc641bfcdf84101fd2b69371d469b95fd\\\",\\\"license\\\":\\\"MIT\\\",\\\"urls\\\":[\\\"bzz-raw://c365f9fb9c915e6bb1a85729faf707c17b78c40d2ca46bbe7e2175837b6138f1\\\",\\\"dweb:/ipfs/QmTQqbhSvrgyK2GwweMn86GFTvqPmoeJzuA971j1BxgxPK\\\"]},\\\"src/interfaces/external/IChainlinkAggregator.sol\\\":{\\\"keccak256\\\":\\\"0x6cabe293cd867cfd1b4e5c378f08aac66951cbdfacbd37627c2fe5c02661808f\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://87b4e658a11189c690571f456a47fc644ff15926bdf634c66d05a1f711bea3ac\\\",\\\"dweb:/ipfs/QmUDdZ8YxHEt3dTk1vWmNVDQFRp3kEqhwUUZEnRS8Sqb3u\\\"]},\\\"src/interfaces/external/UniswapV3Pool.sol\\\":{\\\"keccak256\\\":\\\"0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb\\\",\\\"urls\\\":[\\\"bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9\\\",\\\"dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh\\\"]},\\\"src/modules/adaptors/BaseAdaptor.sol\\\":{\\\"keccak256\\\":\\\"0x1b4922623253dd0e1fba8dab5122e6f42929f3816beee83ff5f1d89a1db122dc\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://8cd0c28afe2fc51c8b5fec2f3a97e80bda5fd0417b3edf3a23abcfac558a6840\\\",\\\"dweb:/ipfs/QmbgKgVGjJTakWsDa8JBsUuvTAFPVzZnG1ivUfkpLv9N2Q\\\"]},\\\"src/modules/adaptors/Frax/CollateralFTokenAdaptor.sol\\\":{\\\"keccak256\\\":\\\"0x905c1d4ea20df91489d635b74186279700ccb0b4ba61b1ad21fc40fe9c2e2669\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://a9a12dd657a90c1072d0257e93fdd9bf7a7f8850c807aeb522e16af813b5e667\\\",\\\"dweb:/ipfs/QmSdSiCcgBVxPRNXZzXZ2kwtc9iPwKXjvdUtPGwWfqLppf\\\"]},\\\"src/modules/adaptors/Frax/FraxlendHealthFactorLogic.sol\\\":{\\\"keccak256\\\":\\\"0xa8b01b483c5f25380926e14f748aaae0f45e6c3b406a34572c3c372e331295d0\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://88961c581b4bfd0196e705bce9477f7485d5903cda5864f9e89a89204b6dc80c\\\",\\\"dweb:/ipfs/QmfRe24DvEGV2Y5ehasiWDpFqsnN1LYN4d7eMSN5eePAxe\\\"]},\\\"src/modules/price-router/Extensions/Extension.sol\\\":{\\\"keccak256\\\":\\\"0x974e612d503d25b2a0c2e424dd9743ba605a3b3660bd69cafbeb143dabdb3101\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://bf97ce81e995cd034dd814ae1a04832a4864b22d0372c07ecc31779643d9e3ad\\\",\\\"dweb:/ipfs/Qmauuf11TpCS2rZ7SU4iexnkuSBPJWmyF6nisSXseTqPF4\\\"]},\\\"src/modules/price-router/PriceRouter.sol\\\":{\\\"keccak256\\\":\\\"0x6e2e31227c601a10289dbbe7ae7a96adebcf3a62065b9b9d9edbcb4f57cc79dd\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://25b1132fee46f95204107215d5d82eb1ffc0ceebfd360ac9495d43451861510e\\\",\\\"dweb:/ipfs/QmWsY9usC61zsdAzafPEvmrv44vUMyCtzAtEESr3ioDTN1\\\"]},\\\"src/utils/Math.sol\\\":{\\\"keccak256\\\":\\\"0x8cc188510f9657ad17e7903cfeded703dd36901ef39069dd6019ffb7e9cfb8bc\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://d1a66351eb53f333f62652f62c754f4c23ad76c98093e39265d06b84aef165c1\\\",\\\"dweb:/ipfs/QmZNqeAaVwAvZosvKdwUFvnjHsYUcJDwDfDupEZ8uKx949\\\"]},\\\"src/utils/Uint32Array.sol\\\":{\\\"keccak256\\\":\\\"0xd887a816c5b1b66163cab06aa453e0a44e734e2d90484018d0b602ed2f42adb7\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"urls\\\":[\\\"bzz-raw://99cfce0b643a810adfa861893a485e786f76be344a3c6c9348a0791f9f225218\\\",\\\"dweb:/ipfs/QmPWf4GbBe6xqUuZJFLYp5Gwv9KTVc3h5phYEb4BMh7fxf\\\"]}},\\\"version\\\":1}\",\n  \"metadata\": {\n    \"compiler\": {\n      \"version\": \"0.8.21+commit.d9974bed\"\n    },\n    \"language\": \"Solidity\",\n    \"output\": {\n      \"abi\": [\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_frax\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_healthFactor\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"constructor\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__ConstructorHealthFactorTooLow\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__ExternalReceiverBlocked\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"asset\",\n              \"type\": \"address\"\n            }\n          ],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__PricingNotSupported\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__Slippage\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__UserDepositsNotAllowed\"\n        },\n        {\n          \"inputs\": [],\n          \"type\": \"error\",\n          \"name\": \"BaseAdaptor__UserWithdrawsNotAllowed\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"fraxlendPair\",\n              \"type\": \"address\"\n            }\n          ],\n          \"type\": \"error\",\n          \"name\": \"CollateralFTokenAdaptor__FraxlendPairPositionsMustBeTracked\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"fraxlendPair\",\n              \"type\": \"address\"\n            }\n          ],\n          \"type\": \"error\",\n          \"name\": \"CollateralFTokenAdaptor__HealthFactorTooLow\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"FRAX\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract ERC20\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"contract IFToken\",\n              \"name\": \"_fraxlendPair\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_collateralToDeposit\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"addCollateral\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"_adaptorData\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"assetOf\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract ERC20\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"adaptorData\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"assetsUsed\",\n          \"outputs\": [\n            {\n              \"internalType\": \"contract ERC20[]\",\n              \"name\": \"assets\",\n              \"type\": \"address[]\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"adaptorData\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"balanceOf\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"assets\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"adaptorData\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"deposit\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"identifier\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"\",\n              \"type\": \"bytes32\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"isDebt\",\n          \"outputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"\",\n              \"type\": \"bool\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"name\": \"minimumHealthFactor\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_collateralAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"contract IFToken\",\n              \"name\": \"_fraxlendPair\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"removeCollateral\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"contract ERC20\",\n              \"name\": \"asset\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"spender\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\",\n          \"name\": \"revokeApproval\"\n        },\n        {\n          \"inputs\": [],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"slippage\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint32\",\n              \"name\": \"\",\n              \"type\": \"uint32\"\n            }\n          ]\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"withdraw\"\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"stateMutability\": \"pure\",\n          \"type\": \"function\",\n          \"name\": \"withdrawableFrom\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ]\n        }\n      ],\n      \"devdoc\": {\n        \"kind\": \"dev\",\n        \"methods\": {\n          \"addCollateral(address,uint256)\": {\n            \"params\": {\n              \"_collateralToDeposit\": \"The amount of collateral to add to Fraxlend Pair position\",\n              \"_fraxlendPair\": \"The specified Fraxlend Pair\"\n            }\n          },\n          \"balanceOf(bytes)\": {\n            \"params\": {\n              \"adaptorData\": \"the collateral asset deposited into Fraxlend\"\n            }\n          },\n          \"deposit(uint256,bytes,bytes)\": {\n            \"details\": \"configurationData is NOT used\",\n            \"params\": {\n              \"adaptorData\": \"adaptor data containing the abi encoded fraxlendPair\",\n              \"assets\": \"the amount of assets to provide as collateral on FraxLend\"\n            }\n          },\n          \"identifier()\": {\n            \"details\": \"Identifier unique to this adaptor for a shared registry. Normally the identifier would just be the address of this contract, but this Identifier is needed during Cellar Delegate Call Operations, so getting the address of the adaptor is more difficult.\"\n          },\n          \"removeCollateral(uint256,address)\": {\n            \"params\": {\n              \"_collateralAmount\": \"The amount of collateral to remove from fraxlend pair position\",\n              \"_fraxlendPair\": \"The specified Fraxlend Pair\"\n            }\n          },\n          \"revokeApproval(address,address)\": {\n            \"params\": {\n              \"asset\": \"the ERC20 asset to revoke `spender`s approval for\",\n              \"spender\": \"the address to revoke approval for\"\n            }\n          }\n        },\n        \"version\": 1\n      },\n      \"userdoc\": {\n        \"kind\": \"user\",\n        \"methods\": {\n          \"FRAX()\": {\n            \"notice\": \"The FRAX contract on current network.For mainnet use 0x853d955aCEf822Db058eb8505911ED77F175b99e.\"\n          },\n          \"addCollateral(address,uint256)\": {\n            \"notice\": \"Allows strategists to add collateral to the respective cellar position on FraxLend, enabling borrowing.\"\n          },\n          \"assetOf(bytes)\": {\n            \"notice\": \"Returns collateral asset\"\n          },\n          \"assetsUsed(bytes)\": {\n            \"notice\": \"When positions are added to the Registry, this function can be used in order to figure out         what assets this adaptor needs to price, and confirm pricing is properly setup.\"\n          },\n          \"balanceOf(bytes)\": {\n            \"notice\": \"Returns the cellar's balance of the collateralAsset position.\"\n          },\n          \"deposit(uint256,bytes,bytes)\": {\n            \"notice\": \"User deposits collateralToken to Fraxlend pair\"\n          },\n          \"isDebt()\": {\n            \"notice\": \"This adaptor returns collateral, and not debt.\"\n          },\n          \"minimumHealthFactor()\": {\n            \"notice\": \"Minimum Health Factor enforced after every removeCollateral() strategist function call.Overwrites strategist set minimums if they are lower.\"\n          },\n          \"removeCollateral(uint256,address)\": {\n            \"notice\": \"Allows strategists to remove collateral from the respective cellar position on FraxLend.\"\n          },\n          \"revokeApproval(address,address)\": {\n            \"notice\": \"Allows strategists to zero out an approval for a given `asset`.\"\n          },\n          \"slippage()\": {\n            \"notice\": \"Max possible slippage when making a swap router swap.\"\n          },\n          \"withdraw(uint256,address,bytes,bytes)\": {\n            \"notice\": \"User withdraws are NOT allowed from this position. NOTE: collateral withdrawal calls directly from users disallowed for now.\"\n          },\n          \"withdrawableFrom(bytes,bytes)\": {\n            \"notice\": \"This position is a debt position, and user withdraws are not allowed so         this position must return 0 for withdrawableFrom. NOTE: collateral withdrawal calls directly from users disallowed for now.\"\n          }\n        },\n        \"version\": 1\n      }\n    },\n    \"settings\": {\n      \"remappings\": [\n        \"@balancer-labs/=lib/balancer-v2-monorepo/../../node_modules/@balancer-labs/\",\n        \"@balancer/=lib/balancer-v2-monorepo/pkg/\",\n        \"@chainlink/=lib/chainlink/\",\n        \"@ds-test/=lib/forge-std/lib/ds-test/src/\",\n        \"@forge-std/=lib/forge-std/src/\",\n        \"@openzeppelin/=lib/openzeppelin-contracts/\",\n        \"@solmate/=lib/solmate/src/\",\n        \"@uniswap/v3-core/=lib/v3-core/\",\n        \"@uniswap/v3-periphery/=lib/v3-periphery/\",\n        \"@uniswapV3C/=lib/v3-core/contracts/\",\n        \"@uniswapV3P/=lib/v3-periphery/contracts/\",\n        \"axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\n        \"balancer-v2-monorepo/=lib/balancer-v2-monorepo/\",\n        \"chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\n        \"ds-test/=lib/forge-std/lib/ds-test/src/\",\n        \"forge-std/=lib/forge-std/src/\",\n        \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\n        \"pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\n        \"solmate/=lib/solmate/src/\",\n        \"v3-core/=lib/v3-core/contracts/\",\n        \"v3-periphery/=lib/v3-periphery/contracts/\"\n      ],\n      \"optimizer\": {\n        \"enabled\": true,\n        \"runs\": 200\n      },\n      \"metadata\": {\n        \"bytecodeHash\": \"ipfs\"\n      },\n      \"compilationTarget\": {\n        \"src/modules/adaptors/Frax/CollateralFTokenAdaptor.sol\": \"CollateralFTokenAdaptor\"\n      },\n      \"libraries\": {}\n    },\n    \"sources\": {\n      \"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\": {\n        \"keccak256\": \"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\n        \"urls\": [\n          \"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\n          \"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\": {\n        \"keccak256\": \"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\n        \"urls\": [\n          \"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\n          \"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\": {\n        \"keccak256\": \"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\n        \"urls\": [\n          \"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\n          \"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\": {\n        \"keccak256\": \"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\n        \"urls\": [\n          \"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\n          \"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\": {\n        \"keccak256\": \"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\n        \"urls\": [\n          \"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\n          \"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\": {\n        \"keccak256\": \"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\n        \"urls\": [\n          \"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\n          \"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/Address.sol\": {\n        \"keccak256\": \"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\n        \"urls\": [\n          \"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\n          \"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/Context.sol\": {\n        \"keccak256\": \"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\n        \"urls\": [\n          \"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\n          \"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\": {\n        \"keccak256\": \"0x182ad835742e188a50bc98b938287d28bf74ad87d01e2bbc1d207c2ba36e1adb\",\n        \"urls\": [\n          \"bzz-raw://c2ba26b6252bb52b39ffb18b2de027544619e3f71b78e5476eba52becfaae929\",\n          \"dweb:/ipfs/Qmb7NqEzs7aWkrzpskxXCRb799XmPenZMDtpzRvNUph1Bg\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/solmate/src/auth/Owned.sol\": {\n        \"keccak256\": \"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\n        \"urls\": [\n          \"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\n          \"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"lib/solmate/src/mixins/ERC4626.sol\": {\n        \"keccak256\": \"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\n        \"urls\": [\n          \"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\n          \"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"lib/solmate/src/tokens/ERC20.sol\": {\n        \"keccak256\": \"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\n        \"urls\": [\n          \"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\n          \"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"lib/solmate/src/utils/FixedPointMathLib.sol\": {\n        \"keccak256\": \"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\n        \"urls\": [\n          \"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\n          \"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"lib/solmate/src/utils/SafeTransferLib.sol\": {\n        \"keccak256\": \"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\n        \"urls\": [\n          \"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\n          \"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"\n        ],\n        \"license\": \"AGPL-3.0-only\"\n      },\n      \"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\": {\n        \"keccak256\": \"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\n        \"urls\": [\n          \"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\n          \"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\": {\n        \"keccak256\": \"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\n        \"urls\": [\n          \"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\n          \"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\": {\n        \"keccak256\": \"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\n        \"urls\": [\n          \"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\n          \"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\": {\n        \"keccak256\": \"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\n        \"urls\": [\n          \"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\n          \"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\": {\n        \"keccak256\": \"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\n        \"urls\": [\n          \"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\n          \"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\": {\n        \"keccak256\": \"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\n        \"urls\": [\n          \"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\n          \"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\": {\n        \"keccak256\": \"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\n        \"urls\": [\n          \"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\n          \"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\": {\n        \"keccak256\": \"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\n        \"urls\": [\n          \"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\n          \"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-core/contracts/libraries/FullMath.sol\": {\n        \"keccak256\": \"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\n        \"urls\": [\n          \"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\n          \"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"lib/v3-core/contracts/libraries/TickMath.sol\": {\n        \"keccak256\": \"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\n        \"urls\": [\n          \"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\n          \"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\": {\n        \"keccak256\": \"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\n        \"urls\": [\n          \"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\n          \"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"\n        ],\n        \"license\": \"GPL-2.0-or-later\"\n      },\n      \"src/Registry.sol\": {\n        \"keccak256\": \"0x2f5f6d61ffc1c9336c628a2cff52b424377feb20c3390f37418fbef1c8995edd\",\n        \"urls\": [\n          \"bzz-raw://1eabb4a5f6bc4ea2c407f3a70efefae52ebe43a5c200cbf828d0e0a3ed676af2\",\n          \"dweb:/ipfs/QmT6nEdMQx6WzTj8x8ZLayH6hpK5NyXSb97vu2juQ4kS4h\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/base/Cellar.sol\": {\n        \"keccak256\": \"0xc5c29f881503e070d2ccc098a7a46d9b03dd47144ae213cc086add626fda9d1a\",\n        \"urls\": [\n          \"bzz-raw://5cf3ddc46f4ac3fe22ad9b1a54e2da8f7c7080d17d9bab1f0483eb0e425c4744\",\n          \"dweb:/ipfs/QmNRfJvUqSkzSUX5KjiFygjr8sKHkVvERTy7W9LZ9DNc6q\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/interfaces/external/Frax/IFToken.sol\": {\n        \"keccak256\": \"0xb71f1b560b5de3a0f5c4ea6cf248073fc641bfcdf84101fd2b69371d469b95fd\",\n        \"urls\": [\n          \"bzz-raw://c365f9fb9c915e6bb1a85729faf707c17b78c40d2ca46bbe7e2175837b6138f1\",\n          \"dweb:/ipfs/QmTQqbhSvrgyK2GwweMn86GFTvqPmoeJzuA971j1BxgxPK\"\n        ],\n        \"license\": \"MIT\"\n      },\n      \"src/interfaces/external/IChainlinkAggregator.sol\": {\n        \"keccak256\": \"0x6cabe293cd867cfd1b4e5c378f08aac66951cbdfacbd37627c2fe5c02661808f\",\n        \"urls\": [\n          \"bzz-raw://87b4e658a11189c690571f456a47fc644ff15926bdf634c66d05a1f711bea3ac\",\n          \"dweb:/ipfs/QmUDdZ8YxHEt3dTk1vWmNVDQFRp3kEqhwUUZEnRS8Sqb3u\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/interfaces/external/UniswapV3Pool.sol\": {\n        \"keccak256\": \"0xf6a71bfbc0665b1d0aad7148b685f3b2254e1be2a3672c2c6671b7fc20db26bb\",\n        \"urls\": [\n          \"bzz-raw://393871fdf75656c49a3bb83bc8110a93af2cbd805df9cc6574a058f3cbf100a9\",\n          \"dweb:/ipfs/QmZugnPctGBiWkFjXXtiKy3AQTWphA9tjZmSBVZRMg9urh\"\n        ],\n        \"license\": null\n      },\n      \"src/modules/adaptors/BaseAdaptor.sol\": {\n        \"keccak256\": \"0x1b4922623253dd0e1fba8dab5122e6f42929f3816beee83ff5f1d89a1db122dc\",\n        \"urls\": [\n          \"bzz-raw://8cd0c28afe2fc51c8b5fec2f3a97e80bda5fd0417b3edf3a23abcfac558a6840\",\n          \"dweb:/ipfs/QmbgKgVGjJTakWsDa8JBsUuvTAFPVzZnG1ivUfkpLv9N2Q\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/adaptors/Frax/CollateralFTokenAdaptor.sol\": {\n        \"keccak256\": \"0x905c1d4ea20df91489d635b74186279700ccb0b4ba61b1ad21fc40fe9c2e2669\",\n        \"urls\": [\n          \"bzz-raw://a9a12dd657a90c1072d0257e93fdd9bf7a7f8850c807aeb522e16af813b5e667\",\n          \"dweb:/ipfs/QmSdSiCcgBVxPRNXZzXZ2kwtc9iPwKXjvdUtPGwWfqLppf\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/adaptors/Frax/FraxlendHealthFactorLogic.sol\": {\n        \"keccak256\": \"0xa8b01b483c5f25380926e14f748aaae0f45e6c3b406a34572c3c372e331295d0\",\n        \"urls\": [\n          \"bzz-raw://88961c581b4bfd0196e705bce9477f7485d5903cda5864f9e89a89204b6dc80c\",\n          \"dweb:/ipfs/QmfRe24DvEGV2Y5ehasiWDpFqsnN1LYN4d7eMSN5eePAxe\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/price-router/Extensions/Extension.sol\": {\n        \"keccak256\": \"0x974e612d503d25b2a0c2e424dd9743ba605a3b3660bd69cafbeb143dabdb3101\",\n        \"urls\": [\n          \"bzz-raw://bf97ce81e995cd034dd814ae1a04832a4864b22d0372c07ecc31779643d9e3ad\",\n          \"dweb:/ipfs/Qmauuf11TpCS2rZ7SU4iexnkuSBPJWmyF6nisSXseTqPF4\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/modules/price-router/PriceRouter.sol\": {\n        \"keccak256\": \"0x6e2e31227c601a10289dbbe7ae7a96adebcf3a62065b9b9d9edbcb4f57cc79dd\",\n        \"urls\": [\n          \"bzz-raw://25b1132fee46f95204107215d5d82eb1ffc0ceebfd360ac9495d43451861510e\",\n          \"dweb:/ipfs/QmWsY9usC61zsdAzafPEvmrv44vUMyCtzAtEESr3ioDTN1\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/utils/Math.sol\": {\n        \"keccak256\": \"0x8cc188510f9657ad17e7903cfeded703dd36901ef39069dd6019ffb7e9cfb8bc\",\n        \"urls\": [\n          \"bzz-raw://d1a66351eb53f333f62652f62c754f4c23ad76c98093e39265d06b84aef165c1\",\n          \"dweb:/ipfs/QmZNqeAaVwAvZosvKdwUFvnjHsYUcJDwDfDupEZ8uKx949\"\n        ],\n        \"license\": \"Apache-2.0\"\n      },\n      \"src/utils/Uint32Array.sol\": {\n        \"keccak256\": \"0xd887a816c5b1b66163cab06aa453e0a44e734e2d90484018d0b602ed2f42adb7\",\n        \"urls\": [\n          \"bzz-raw://99cfce0b643a810adfa861893a485e786f76be344a3c6c9348a0791f9f225218\",\n          \"dweb:/ipfs/QmPWf4GbBe6xqUuZJFLYp5Gwv9KTVc3h5phYEb4BMh7fxf\"\n        ],\n        \"license\": \"Apache-2.0\"\n      }\n    },\n    \"version\": 1\n  },\n  \"ast\": {\n    \"absolutePath\": \"src/modules/adaptors/Frax/CollateralFTokenAdaptor.sol\",\n    \"id\": 78820,\n    \"exportedSymbols\": {\n      \"BaseAdaptor\": [\n        77495\n      ],\n      \"Cellar\": [\n        61030\n      ],\n      \"CollateralFTokenAdaptor\": [\n        78819\n      ],\n      \"ERC20\": [\n        51130\n      ],\n      \"FraxlendHealthFactorLogic\": [\n        80549\n      ],\n      \"IFToken\": [\n        66209\n      ],\n      \"Math\": [\n        92983\n      ],\n      \"PriceRouter\": [\n        89874\n      ],\n      \"SafeTransferLib\": [\n        51551\n      ]\n    },\n    \"nodeType\": \"SourceUnit\",\n    \"src\": \"39:10987:191\",\n    \"nodes\": [\n      {\n        \"id\": 78367,\n        \"nodeType\": \"PragmaDirective\",\n        \"src\": \"39:23:191\",\n        \"nodes\": [],\n        \"literals\": [\n          \"solidity\",\n          \"0.8\",\n          \".21\"\n        ]\n      },\n      {\n        \"id\": 78374,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"64:118:191\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/modules/adaptors/BaseAdaptor.sol\",\n        \"file\": \"src/modules/adaptors/BaseAdaptor.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 78820,\n        \"sourceUnit\": 77496,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 78368,\n              \"name\": \"BaseAdaptor\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 77495,\n              \"src\": \"73:11:191\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 78369,\n              \"name\": \"ERC20\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 51130,\n              \"src\": \"86:5:191\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 78370,\n              \"name\": \"SafeTransferLib\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 51551,\n              \"src\": \"93:15:191\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 78371,\n              \"name\": \"Cellar\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 61030,\n              \"src\": \"110:6:191\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 78372,\n              \"name\": \"PriceRouter\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 89874,\n              \"src\": \"118:11:191\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          },\n          {\n            \"foreign\": {\n              \"id\": 78373,\n              \"name\": \"Math\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 92983,\n              \"src\": \"131:4:191\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 78376,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"183:67:191\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/interfaces/external/Frax/IFToken.sol\",\n        \"file\": \"src/interfaces/external/Frax/IFToken.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 78820,\n        \"sourceUnit\": 66210,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 78375,\n              \"name\": \"IFToken\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 66209,\n              \"src\": \"192:7:191\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 78378,\n        \"nodeType\": \"ImportDirective\",\n        \"src\": \"251:100:191\",\n        \"nodes\": [],\n        \"absolutePath\": \"src/modules/adaptors/Frax/FraxlendHealthFactorLogic.sol\",\n        \"file\": \"src/modules/adaptors/Frax/FraxlendHealthFactorLogic.sol\",\n        \"nameLocation\": \"-1:-1:-1\",\n        \"scope\": 78820,\n        \"sourceUnit\": 80550,\n        \"symbolAliases\": [\n          {\n            \"foreign\": {\n              \"id\": 78377,\n              \"name\": \"FraxlendHealthFactorLogic\",\n              \"nodeType\": \"Identifier\",\n              \"overloadedDeclarations\": [],\n              \"referencedDeclaration\": 80549,\n              \"src\": \"260:25:191\",\n              \"typeDescriptions\": {}\n            },\n            \"nameLocation\": \"-1:-1:-1\"\n          }\n        ],\n        \"unitAlias\": \"\"\n      },\n      {\n        \"id\": 78819,\n        \"nodeType\": \"ContractDefinition\",\n        \"src\": \"527:10498:191\",\n        \"nodes\": [\n          {\n            \"id\": 78387,\n            \"nodeType\": \"UsingForDirective\",\n            \"src\": \"608:32:191\",\n            \"nodes\": [],\n            \"global\": false,\n            \"libraryName\": {\n              \"id\": 78384,\n              \"name\": \"SafeTransferLib\",\n              \"nameLocations\": [\n                \"614:15:191\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 51551,\n              \"src\": \"614:15:191\"\n            },\n            \"typeName\": {\n              \"id\": 78386,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 78385,\n                \"name\": \"ERC20\",\n                \"nameLocations\": [\n                  \"634:5:191\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 51130,\n                \"src\": \"634:5:191\"\n              },\n              \"referencedDeclaration\": 51130,\n              \"src\": \"634:5:191\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                \"typeString\": \"contract ERC20\"\n              }\n            }\n          },\n          {\n            \"id\": 78390,\n            \"nodeType\": \"UsingForDirective\",\n            \"src\": \"645:23:191\",\n            \"nodes\": [],\n            \"global\": false,\n            \"libraryName\": {\n              \"id\": 78388,\n              \"name\": \"Math\",\n              \"nameLocations\": [\n                \"651:4:191\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 92983,\n              \"src\": \"651:4:191\"\n            },\n            \"typeName\": {\n              \"id\": 78389,\n              \"name\": \"uint256\",\n              \"nodeType\": \"ElementaryTypeName\",\n              \"src\": \"660:7:191\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_uint256\",\n                \"typeString\": \"uint256\"\n              }\n            }\n          },\n          {\n            \"id\": 78395,\n            \"nodeType\": \"ErrorDefinition\",\n            \"src\": \"1314:88:191\",\n            \"nodes\": [],\n            \"documentation\": {\n              \"id\": 78391,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1215:94:191\",\n              \"text\": \" @notice Attempted to interact with an fraxlendPair the Cellar is not using.\"\n            },\n            \"errorSelector\": \"19cd4c5c\",\n            \"name\": \"CollateralFTokenAdaptor__FraxlendPairPositionsMustBeTracked\",\n            \"nameLocation\": \"1320:59:191\",\n            \"parameters\": {\n              \"id\": 78394,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78393,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"fraxlendPair\",\n                  \"nameLocation\": \"1388:12:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78395,\n                  \"src\": \"1380:20:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78392,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1380:7:191\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1379:22:191\"\n            }\n          },\n          {\n            \"id\": 78400,\n            \"nodeType\": \"ErrorDefinition\",\n            \"src\": \"1512:72:191\",\n            \"nodes\": [],\n            \"documentation\": {\n              \"id\": 78396,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1408:99:191\",\n              \"text\": \" @notice Removal of collateral causes Cellar Health Factor below what is required\"\n            },\n            \"errorSelector\": \"f3fbed68\",\n            \"name\": \"CollateralFTokenAdaptor__HealthFactorTooLow\",\n            \"nameLocation\": \"1518:43:191\",\n            \"parameters\": {\n              \"id\": 78399,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78398,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"fraxlendPair\",\n                  \"nameLocation\": \"1570:12:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78400,\n                  \"src\": \"1562:20:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78397,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"1562:7:191\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"1561:22:191\"\n            }\n          },\n          {\n            \"id\": 78404,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"1734:27:191\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"documentation\": {\n              \"id\": 78401,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1590:139:191\",\n              \"text\": \" @notice The FRAX contract on current network.\\n @notice For mainnet use 0x853d955aCEf822Db058eb8505911ED77F175b99e.\"\n            },\n            \"functionSelector\": \"b0e4556f\",\n            \"mutability\": \"immutable\",\n            \"name\": \"FRAX\",\n            \"nameLocation\": \"1757:4:191\",\n            \"scope\": 78819,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n              \"typeString\": \"contract ERC20\"\n            },\n            \"typeName\": {\n              \"id\": 78403,\n              \"nodeType\": \"UserDefinedTypeName\",\n              \"pathNode\": {\n                \"id\": 78402,\n                \"name\": \"ERC20\",\n                \"nameLocations\": [\n                  \"1734:5:191\"\n                ],\n                \"nodeType\": \"IdentifierPath\",\n                \"referencedDeclaration\": 51130,\n                \"src\": \"1734:5:191\"\n              },\n              \"referencedDeclaration\": 51130,\n              \"src\": \"1734:5:191\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                \"typeString\": \"contract ERC20\"\n              }\n            },\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78407,\n            \"nodeType\": \"VariableDeclaration\",\n            \"src\": \"1956:44:191\",\n            \"nodes\": [],\n            \"constant\": false,\n            \"documentation\": {\n              \"id\": 78405,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"1768:183:191\",\n              \"text\": \" @notice Minimum Health Factor enforced after every removeCollateral() strategist function call.\\n @notice Overwrites strategist set minimums if they are lower.\"\n            },\n            \"functionSelector\": \"1caff8b1\",\n            \"mutability\": \"immutable\",\n            \"name\": \"minimumHealthFactor\",\n            \"nameLocation\": \"1981:19:191\",\n            \"scope\": 78819,\n            \"stateVariable\": true,\n            \"storageLocation\": \"default\",\n            \"typeDescriptions\": {\n              \"typeIdentifier\": \"t_uint256\",\n              \"typeString\": \"uint256\"\n            },\n            \"typeName\": {\n              \"id\": 78406,\n              \"name\": \"uint256\",\n              \"nodeType\": \"ElementaryTypeName\",\n              \"src\": \"1956:7:191\",\n              \"typeDescriptions\": {\n                \"typeIdentifier\": \"t_uint256\",\n                \"typeString\": \"uint256\"\n              }\n            },\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78429,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2007:193:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78428,\n              \"nodeType\": \"Block\",\n              \"src\": \"2057:143:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78415,\n                        \"name\": \"_healthFactor\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78411,\n                        \"src\": \"2105:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 78414,\n                      \"name\": \"_verifyConstructorMinimumHealthFactor\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 77477,\n                      \"src\": \"2067:37:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_pure$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (uint256) pure\"\n                      }\n                    },\n                    \"id\": 78416,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2067:52:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78417,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2067:52:191\"\n                },\n                {\n                  \"expression\": {\n                    \"id\": 78422,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 78418,\n                      \"name\": \"FRAX\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78404,\n                      \"src\": \"2129:4:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                        \"typeString\": \"contract ERC20\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"arguments\": [\n                        {\n                          \"id\": 78420,\n                          \"name\": \"_frax\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 78409,\n                          \"src\": \"2142:5:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        }\n                      ],\n                      \"expression\": {\n                        \"argumentTypes\": [\n                          {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        ],\n                        \"id\": 78419,\n                        \"name\": \"ERC20\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 51130,\n                        \"src\": \"2136:5:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_type$_t_contract$_ERC20_$51130_$\",\n                          \"typeString\": \"type(contract ERC20)\"\n                        }\n                      },\n                      \"id\": 78421,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"typeConversion\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"2136:12:191\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                        \"typeString\": \"contract ERC20\"\n                      }\n                    },\n                    \"src\": \"2129:19:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                      \"typeString\": \"contract ERC20\"\n                    }\n                  },\n                  \"id\": 78423,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2129:19:191\"\n                },\n                {\n                  \"expression\": {\n                    \"id\": 78426,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 78424,\n                      \"name\": \"minimumHealthFactor\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78407,\n                      \"src\": \"2158:19:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"id\": 78425,\n                      \"name\": \"_healthFactor\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78411,\n                      \"src\": \"2180:13:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"src\": \"2158:35:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"id\": 78427,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"2158:35:191\"\n                }\n              ]\n            },\n            \"implemented\": true,\n            \"kind\": \"constructor\",\n            \"modifiers\": [],\n            \"name\": \"\",\n            \"nameLocation\": \"-1:-1:-1\",\n            \"parameters\": {\n              \"id\": 78412,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78409,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_frax\",\n                  \"nameLocation\": \"2027:5:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78429,\n                  \"src\": \"2019:13:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78408,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2019:7:191\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78411,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_healthFactor\",\n                  \"nameLocation\": \"2042:13:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78429,\n                  \"src\": \"2034:21:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78410,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2034:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"2018:38:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78413,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2057:0:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78444,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"2619:160:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78443,\n              \"nodeType\": \"Block\",\n              \"src\": \"2688:91:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"hexValue\": \"467261784c656e6420436f6c6c61746572616c2066546f6b656e56322041646170746f72205620302e31\",\n                            \"id\": 78439,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"kind\": \"string\",\n                            \"lValueRequested\": false,\n                            \"nodeType\": \"Literal\",\n                            \"src\": \"2726:44:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_stringliteral_a3e36fea9d81853361a8e1a3961b5d42df7a08454fa872c8b22a65f8587e1e17\",\n                              \"typeString\": \"literal_string \\\"FraxLend Collateral fTokenV2 Adaptor V 0.1\\\"\"\n                            },\n                            \"value\": \"FraxLend Collateral fTokenV2 Adaptor V 0.1\"\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_stringliteral_a3e36fea9d81853361a8e1a3961b5d42df7a08454fa872c8b22a65f8587e1e17\",\n                              \"typeString\": \"literal_string \\\"FraxLend Collateral fTokenV2 Adaptor V 0.1\\\"\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"id\": 78437,\n                            \"name\": \"abi\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -1,\n                            \"src\": \"2715:3:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_magic_abi\",\n                              \"typeString\": \"abi\"\n                            }\n                          },\n                          \"id\": 78438,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"2719:6:191\",\n                          \"memberName\": \"encode\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"src\": \"2715:10:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$\",\n                            \"typeString\": \"function () pure returns (bytes memory)\"\n                          }\n                        },\n                        \"id\": 78440,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": true,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"2715:56:191\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      ],\n                      \"id\": 78436,\n                      \"name\": \"keccak256\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": -8,\n                      \"src\": \"2705:9:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                        \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                      }\n                    },\n                    \"id\": 78441,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": true,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"2705:67:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes32\",\n                      \"typeString\": \"bytes32\"\n                    }\n                  },\n                  \"functionReturnParameters\": 78435,\n                  \"id\": 78442,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"2698:74:191\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              77261\n            ],\n            \"documentation\": {\n              \"id\": 78430,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2318:296:191\",\n              \"text\": \" @dev Identifier unique to this adaptor for a shared registry.\\n Normally the identifier would just be the address of this contract, but this\\n Identifier is needed during Cellar Delegate Call Operations, so getting the address\\n of the adaptor is more difficult.\"\n            },\n            \"functionSelector\": \"7998a1c4\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"identifier\",\n            \"nameLocation\": \"2628:10:191\",\n            \"overrides\": {\n              \"id\": 78432,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"2661:8:191\"\n            },\n            \"parameters\": {\n              \"id\": 78431,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"2638:2:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78435,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78434,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78444,\n                  \"src\": \"2679:7:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes32\",\n                    \"typeString\": \"bytes32\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78433,\n                    \"name\": \"bytes32\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"2679:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes32\",\n                      \"typeString\": \"bytes32\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"2678:9:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"pure\",\n            \"virtual\": true,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78501,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3183:564:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78500,\n              \"nodeType\": \"Block\",\n              \"src\": \"3272:475:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"assignments\": [\n                    78457\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78457,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"fraxlendPair\",\n                      \"nameLocation\": \"3290:12:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78500,\n                      \"src\": \"3282:20:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                        \"typeString\": \"contract IFToken\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78456,\n                        \"nodeType\": \"UserDefinedTypeName\",\n                        \"pathNode\": {\n                          \"id\": 78455,\n                          \"name\": \"IFToken\",\n                          \"nameLocations\": [\n                            \"3282:7:191\"\n                          ],\n                          \"nodeType\": \"IdentifierPath\",\n                          \"referencedDeclaration\": 66209,\n                          \"src\": \"3282:7:191\"\n                        },\n                        \"referencedDeclaration\": 66209,\n                        \"src\": \"3282:7:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78464,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78460,\n                        \"name\": \"adaptorData\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78449,\n                        \"src\": \"3316:11:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      },\n                      {\n                        \"components\": [\n                          {\n                            \"id\": 78461,\n                            \"name\": \"IFToken\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 66209,\n                            \"src\": \"3330:7:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                              \"typeString\": \"type(contract IFToken)\"\n                            }\n                          }\n                        ],\n                        \"id\": 78462,\n                        \"isConstant\": false,\n                        \"isInlineArray\": false,\n                        \"isLValue\": false,\n                        \"isPure\": true,\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"TupleExpression\",\n                        \"src\": \"3329:9:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                          \"typeString\": \"type(contract IFToken)\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                          \"typeString\": \"type(contract IFToken)\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 78458,\n                        \"name\": \"abi\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": -1,\n                        \"src\": \"3305:3:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_magic_abi\",\n                          \"typeString\": \"abi\"\n                        }\n                      },\n                      \"id\": 78459,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3309:6:191\",\n                      \"memberName\": \"decode\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"src\": \"3305:10:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_abidecode_pure$__$returns$__$\",\n                        \"typeString\": \"function () pure\"\n                      }\n                    },\n                    \"id\": 78463,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3305:34:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"3282:57:191\"\n                },\n                {\n                  \"assignments\": [\n                    78467\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78467,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"collateralToken\",\n                      \"nameLocation\": \"3355:15:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78500,\n                      \"src\": \"3349:21:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                        \"typeString\": \"contract ERC20\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78466,\n                        \"nodeType\": \"UserDefinedTypeName\",\n                        \"pathNode\": {\n                          \"id\": 78465,\n                          \"name\": \"ERC20\",\n                          \"nameLocations\": [\n                            \"3349:5:191\"\n                          ],\n                          \"nodeType\": \"IdentifierPath\",\n                          \"referencedDeclaration\": 51130,\n                          \"src\": \"3349:5:191\"\n                        },\n                        \"referencedDeclaration\": 51130,\n                        \"src\": \"3349:5:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78471,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78469,\n                        \"name\": \"fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78457,\n                        \"src\": \"3397:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78468,\n                      \"name\": \"_userCollateralContract\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78781,\n                      \"src\": \"3373:23:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IFToken_$66209_$returns$_t_contract$_ERC20_$51130_$\",\n                        \"typeString\": \"function (contract IFToken) view returns (contract ERC20)\"\n                      }\n                    },\n                    \"id\": 78470,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3373:37:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                      \"typeString\": \"contract ERC20\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"3349:61:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78473,\n                        \"name\": \"fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78457,\n                        \"src\": \"3437:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78472,\n                      \"name\": \"_validateFToken\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78744,\n                      \"src\": \"3421:15:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IFToken_$66209_$returns$__$\",\n                        \"typeString\": \"function (contract IFToken) view\"\n                      }\n                    },\n                    \"id\": 78474,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3421:29:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78475,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3421:29:191\"\n                },\n                {\n                  \"assignments\": [\n                    78477\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78477,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"fraxlendPairAddress\",\n                      \"nameLocation\": \"3468:19:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78500,\n                      \"src\": \"3460:27:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_address\",\n                        \"typeString\": \"address\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78476,\n                        \"name\": \"address\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"3460:7:191\",\n                        \"stateMutability\": \"nonpayable\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78482,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78480,\n                        \"name\": \"fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78457,\n                        \"src\": \"3498:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78479,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"ElementaryTypeNameExpression\",\n                      \"src\": \"3490:7:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_type$_t_address_$\",\n                        \"typeString\": \"type(address)\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78478,\n                        \"name\": \"address\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"3490:7:191\",\n                        \"typeDescriptions\": {}\n                      }\n                    },\n                    \"id\": 78481,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"typeConversion\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3490:21:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"3460:51:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78486,\n                        \"name\": \"fraxlendPairAddress\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78477,\n                        \"src\": \"3549:19:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      {\n                        \"id\": 78487,\n                        \"name\": \"assets\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78447,\n                        \"src\": \"3570:6:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 78483,\n                        \"name\": \"collateralToken\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78467,\n                        \"src\": \"3521:15:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      \"id\": 78485,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"3537:11:191\",\n                      \"memberName\": \"safeApprove\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 51550,\n                      \"src\": \"3521:27:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_ERC20_$51130_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$51130_$\",\n                        \"typeString\": \"function (contract ERC20,address,uint256)\"\n                      }\n                    },\n                    \"id\": 78488,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3521:56:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78489,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3521:56:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78491,\n                        \"name\": \"fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78457,\n                        \"src\": \"3603:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      },\n                      {\n                        \"id\": 78492,\n                        \"name\": \"assets\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78447,\n                        \"src\": \"3617:6:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 78490,\n                      \"name\": \"_addCollateral\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78764,\n                      \"src\": \"3588:14:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_IFToken_$66209_$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (contract IFToken,uint256)\"\n                      }\n                    },\n                    \"id\": 78493,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3588:36:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78494,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3588:36:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78496,\n                        \"name\": \"collateralToken\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78467,\n                        \"src\": \"3703:15:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      {\n                        \"id\": 78497,\n                        \"name\": \"fraxlendPairAddress\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78477,\n                        \"src\": \"3720:19:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"id\": 78495,\n                      \"name\": \"_revokeExternalApproval\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 77436,\n                      \"src\": \"3679:23:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_ERC20_$51130_$_t_address_$returns$__$\",\n                        \"typeString\": \"function (contract ERC20,address)\"\n                      }\n                    },\n                    \"id\": 78498,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"3679:61:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78499,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"3679:61:191\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              77305\n            ],\n            \"documentation\": {\n              \"id\": 78445,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"2905:273:191\",\n              \"text\": \" @notice User deposits collateralToken to Fraxlend pair\\n @param assets the amount of assets to provide as collateral on FraxLend\\n @param adaptorData adaptor data containing the abi encoded fraxlendPair\\n @dev configurationData is NOT used\"\n            },\n            \"functionSelector\": \"69445c31\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"deposit\",\n            \"nameLocation\": \"3192:7:191\",\n            \"overrides\": {\n              \"id\": 78453,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"3263:8:191\"\n            },\n            \"parameters\": {\n              \"id\": 78452,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78447,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"assets\",\n                  \"nameLocation\": \"3208:6:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78501,\n                  \"src\": \"3200:14:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78446,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3200:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78449,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"adaptorData\",\n                  \"nameLocation\": \"3229:11:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78501,\n                  \"src\": \"3216:24:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78448,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3216:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78451,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78501,\n                  \"src\": \"3242:12:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78450,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3242:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3199:56:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78454,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"3272:0:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78518,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"3916:147:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78517,\n              \"nodeType\": \"Block\",\n              \"src\": \"4001:62:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"errorCall\": {\n                    \"arguments\": [],\n                    \"expression\": {\n                      \"argumentTypes\": [],\n                      \"id\": 78514,\n                      \"name\": \"BaseAdaptor__UserWithdrawsNotAllowed\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 77236,\n                      \"src\": \"4018:36:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_error_pure$__$returns$__$\",\n                        \"typeString\": \"function () pure\"\n                      }\n                    },\n                    \"id\": 78515,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4018:38:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78516,\n                  \"nodeType\": \"RevertStatement\",\n                  \"src\": \"4011:45:191\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              77317\n            ],\n            \"documentation\": {\n              \"id\": 78502,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"3753:158:191\",\n              \"text\": \" @notice User withdraws are NOT allowed from this position.\\n NOTE: collateral withdrawal calls directly from users disallowed for now.\"\n            },\n            \"functionSelector\": \"c9111bd7\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"withdraw\",\n            \"nameLocation\": \"3925:8:191\",\n            \"overrides\": {\n              \"id\": 78512,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"3992:8:191\"\n            },\n            \"parameters\": {\n              \"id\": 78511,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78504,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78518,\n                  \"src\": \"3934:7:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78503,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3934:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78506,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78518,\n                  \"src\": \"3943:7:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_address\",\n                    \"typeString\": \"address\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78505,\n                    \"name\": \"address\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3943:7:191\",\n                    \"stateMutability\": \"nonpayable\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78508,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78518,\n                  \"src\": \"3952:12:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78507,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3952:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78510,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78518,\n                  \"src\": \"3966:12:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78509,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"3966:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"3933:46:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78513,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"4001:0:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"pure\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78532,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"4318:118:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78531,\n              \"nodeType\": \"Block\",\n              \"src\": \"4411:25:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"hexValue\": \"30\",\n                    \"id\": 78529,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": true,\n                    \"kind\": \"number\",\n                    \"lValueRequested\": false,\n                    \"nodeType\": \"Literal\",\n                    \"src\": \"4428:1:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_rational_0_by_1\",\n                      \"typeString\": \"int_const 0\"\n                    },\n                    \"value\": \"0\"\n                  },\n                  \"functionReturnParameters\": 78528,\n                  \"id\": 78530,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"4421:8:191\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              77335\n            ],\n            \"documentation\": {\n              \"id\": 78519,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"4069:244:191\",\n              \"text\": \" @notice This position is a debt position, and user withdraws are not allowed so\\n         this position must return 0 for withdrawableFrom.\\n NOTE: collateral withdrawal calls directly from users disallowed for now.\"\n            },\n            \"functionSelector\": \"fa50e5d2\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"withdrawableFrom\",\n            \"nameLocation\": \"4327:16:191\",\n            \"overrides\": {\n              \"id\": 78525,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"4384:8:191\"\n            },\n            \"parameters\": {\n              \"id\": 78524,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78521,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78532,\n                  \"src\": \"4344:12:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78520,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4344:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78523,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78532,\n                  \"src\": \"4358:12:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78522,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4358:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4343:28:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78528,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78527,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78532,\n                  \"src\": \"4402:7:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78526,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4402:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4401:9:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"pure\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78558,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"4606:223:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78557,\n              \"nodeType\": \"Block\",\n              \"src\": \"4690:139:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"assignments\": [\n                    78543\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78543,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"fraxlendPair\",\n                      \"nameLocation\": \"4708:12:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78557,\n                      \"src\": \"4700:20:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                        \"typeString\": \"contract IFToken\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78542,\n                        \"nodeType\": \"UserDefinedTypeName\",\n                        \"pathNode\": {\n                          \"id\": 78541,\n                          \"name\": \"IFToken\",\n                          \"nameLocations\": [\n                            \"4700:7:191\"\n                          ],\n                          \"nodeType\": \"IdentifierPath\",\n                          \"referencedDeclaration\": 66209,\n                          \"src\": \"4700:7:191\"\n                        },\n                        \"referencedDeclaration\": 66209,\n                        \"src\": \"4700:7:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78550,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78546,\n                        \"name\": \"adaptorData\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78535,\n                        \"src\": \"4734:11:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      },\n                      {\n                        \"components\": [\n                          {\n                            \"id\": 78547,\n                            \"name\": \"IFToken\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 66209,\n                            \"src\": \"4748:7:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                              \"typeString\": \"type(contract IFToken)\"\n                            }\n                          }\n                        ],\n                        \"id\": 78548,\n                        \"isConstant\": false,\n                        \"isInlineArray\": false,\n                        \"isLValue\": false,\n                        \"isPure\": true,\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"TupleExpression\",\n                        \"src\": \"4747:9:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                          \"typeString\": \"type(contract IFToken)\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                          \"typeString\": \"type(contract IFToken)\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 78544,\n                        \"name\": \"abi\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": -1,\n                        \"src\": \"4723:3:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_magic_abi\",\n                          \"typeString\": \"abi\"\n                        }\n                      },\n                      \"id\": 78545,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"4727:6:191\",\n                      \"memberName\": \"decode\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"src\": \"4723:10:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_abidecode_pure$__$returns$__$\",\n                        \"typeString\": \"function () pure\"\n                      }\n                    },\n                    \"id\": 78549,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4723:34:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"4700:57:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78552,\n                        \"name\": \"fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78543,\n                        \"src\": \"4797:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      },\n                      {\n                        \"expression\": {\n                          \"id\": 78553,\n                          \"name\": \"msg\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": -15,\n                          \"src\": \"4811:3:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_magic_message\",\n                            \"typeString\": \"msg\"\n                          }\n                        },\n                        \"id\": 78554,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"memberLocation\": \"4815:6:191\",\n                        \"memberName\": \"sender\",\n                        \"nodeType\": \"MemberAccess\",\n                        \"src\": \"4811:10:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"id\": 78551,\n                      \"name\": \"_userCollateralBalance\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 80514,\n                      \"src\": \"4774:22:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IFToken_$66209_$_t_address_$returns$_t_uint256_$\",\n                        \"typeString\": \"function (contract IFToken,address) view returns (uint256)\"\n                      }\n                    },\n                    \"id\": 78555,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"4774:48:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"functionReturnParameters\": 78540,\n                  \"id\": 78556,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"4767:55:191\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              77325\n            ],\n            \"documentation\": {\n              \"id\": 78533,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"4442:159:191\",\n              \"text\": \" @notice Returns the cellar's balance of the collateralAsset position.\\n @param adaptorData the collateral asset deposited into Fraxlend\"\n            },\n            \"functionSelector\": \"78415365\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"balanceOf\",\n            \"nameLocation\": \"4615:9:191\",\n            \"overrides\": {\n              \"id\": 78537,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"4663:8:191\"\n            },\n            \"parameters\": {\n              \"id\": 78536,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78535,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"adaptorData\",\n                  \"nameLocation\": \"4638:11:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78558,\n                  \"src\": \"4625:24:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78534,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4625:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4624:26:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78540,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78539,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78558,\n                  \"src\": \"4681:7:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78538,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4681:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4680:9:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78583,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"4891:210:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78582,\n              \"nodeType\": \"Block\",\n              \"src\": \"4972:129:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"assignments\": [\n                    78570\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78570,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"fraxlendPair\",\n                      \"nameLocation\": \"4990:12:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78582,\n                      \"src\": \"4982:20:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                        \"typeString\": \"contract IFToken\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78569,\n                        \"nodeType\": \"UserDefinedTypeName\",\n                        \"pathNode\": {\n                          \"id\": 78568,\n                          \"name\": \"IFToken\",\n                          \"nameLocations\": [\n                            \"4982:7:191\"\n                          ],\n                          \"nodeType\": \"IdentifierPath\",\n                          \"referencedDeclaration\": 66209,\n                          \"src\": \"4982:7:191\"\n                        },\n                        \"referencedDeclaration\": 66209,\n                        \"src\": \"4982:7:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78577,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78573,\n                        \"name\": \"_adaptorData\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78561,\n                        \"src\": \"5016:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      },\n                      {\n                        \"components\": [\n                          {\n                            \"id\": 78574,\n                            \"name\": \"IFToken\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 66209,\n                            \"src\": \"5031:7:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                              \"typeString\": \"type(contract IFToken)\"\n                            }\n                          }\n                        ],\n                        \"id\": 78575,\n                        \"isConstant\": false,\n                        \"isInlineArray\": false,\n                        \"isLValue\": false,\n                        \"isPure\": true,\n                        \"lValueRequested\": false,\n                        \"nodeType\": \"TupleExpression\",\n                        \"src\": \"5030:9:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                          \"typeString\": \"type(contract IFToken)\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_type$_t_contract$_IFToken_$66209_$\",\n                          \"typeString\": \"type(contract IFToken)\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 78571,\n                        \"name\": \"abi\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": -1,\n                        \"src\": \"5005:3:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_magic_abi\",\n                          \"typeString\": \"abi\"\n                        }\n                      },\n                      \"id\": 78572,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"5009:6:191\",\n                      \"memberName\": \"decode\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"src\": \"5005:10:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_abidecode_pure$__$returns$__$\",\n                        \"typeString\": \"function () pure\"\n                      }\n                    },\n                    \"id\": 78576,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5005:35:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"4982:58:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78579,\n                        \"name\": \"fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78570,\n                        \"src\": \"5081:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78578,\n                      \"name\": \"_userCollateralContract\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78781,\n                      \"src\": \"5057:23:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IFToken_$66209_$returns$_t_contract$_ERC20_$51130_$\",\n                        \"typeString\": \"function (contract IFToken) view returns (contract ERC20)\"\n                      }\n                    },\n                    \"id\": 78580,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5057:37:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                      \"typeString\": \"contract ERC20\"\n                    }\n                  },\n                  \"functionReturnParameters\": 78567,\n                  \"id\": 78581,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"5050:44:191\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              77344\n            ],\n            \"documentation\": {\n              \"id\": 78559,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"4835:51:191\",\n              \"text\": \" @notice Returns collateral asset\"\n            },\n            \"functionSelector\": \"e170a9bf\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"assetOf\",\n            \"nameLocation\": \"4900:7:191\",\n            \"overrides\": {\n              \"id\": 78563,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"4947:8:191\"\n            },\n            \"parameters\": {\n              \"id\": 78562,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78561,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_adaptorData\",\n                  \"nameLocation\": \"4921:12:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78583,\n                  \"src\": \"4908:25:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"memory\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                    \"typeString\": \"bytes\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78560,\n                    \"name\": \"bytes\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"4908:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes_storage_ptr\",\n                      \"typeString\": \"bytes\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4907:27:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78567,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78566,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78583,\n                  \"src\": \"4965:5:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                    \"typeString\": \"contract ERC20\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78565,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78564,\n                      \"name\": \"ERC20\",\n                      \"nameLocations\": [\n                        \"4965:5:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 51130,\n                      \"src\": \"4965:5:191\"\n                    },\n                    \"referencedDeclaration\": 51130,\n                    \"src\": \"4965:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                      \"typeString\": \"contract ERC20\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"4964:7:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"view\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78593,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"5185:83:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78592,\n              \"nodeType\": \"Block\",\n              \"src\": \"5239:29:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"hexValue\": \"66616c7365\",\n                    \"id\": 78590,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": true,\n                    \"kind\": \"bool\",\n                    \"lValueRequested\": false,\n                    \"nodeType\": \"Literal\",\n                    \"src\": \"5256:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    },\n                    \"value\": \"false\"\n                  },\n                  \"functionReturnParameters\": 78589,\n                  \"id\": 78591,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"5249:12:191\"\n                }\n              ]\n            },\n            \"baseFunctions\": [\n              77378\n            ],\n            \"documentation\": {\n              \"id\": 78584,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"5107:73:191\",\n              \"text\": \" @notice This adaptor returns collateral, and not debt.\"\n            },\n            \"functionSelector\": \"89353a09\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"isDebt\",\n            \"nameLocation\": \"5194:6:191\",\n            \"overrides\": {\n              \"id\": 78586,\n              \"nodeType\": \"OverrideSpecifier\",\n              \"overrides\": [],\n              \"src\": \"5215:8:191\"\n            },\n            \"parameters\": {\n              \"id\": 78585,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"5200:2:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78589,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78588,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"\",\n                  \"nameLocation\": \"-1:-1:-1\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78593,\n                  \"src\": \"5233:4:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_bool\",\n                    \"typeString\": \"bool\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78587,\n                    \"name\": \"bool\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"5233:4:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"5232:6:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"pure\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78645,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"5675:583:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78644,\n              \"nodeType\": \"Block\",\n              \"src\": \"5758:500:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78603,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78597,\n                        \"src\": \"5784:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78602,\n                      \"name\": \"_validateFToken\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78744,\n                      \"src\": \"5768:15:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IFToken_$66209_$returns$__$\",\n                        \"typeString\": \"function (contract IFToken) view\"\n                      }\n                    },\n                    \"id\": 78604,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5768:30:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78605,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"5768:30:191\"\n                },\n                {\n                  \"assignments\": [\n                    78608\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78608,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"_collateralToken\",\n                      \"nameLocation\": \"5814:16:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78644,\n                      \"src\": \"5808:22:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                        \"typeString\": \"contract ERC20\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78607,\n                        \"nodeType\": \"UserDefinedTypeName\",\n                        \"pathNode\": {\n                          \"id\": 78606,\n                          \"name\": \"ERC20\",\n                          \"nameLocations\": [\n                            \"5808:5:191\"\n                          ],\n                          \"nodeType\": \"IdentifierPath\",\n                          \"referencedDeclaration\": 51130,\n                          \"src\": \"5808:5:191\"\n                        },\n                        \"referencedDeclaration\": 51130,\n                        \"src\": \"5808:5:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78612,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78610,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78597,\n                        \"src\": \"5857:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78609,\n                      \"name\": \"_userCollateralContract\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78781,\n                      \"src\": \"5833:23:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IFToken_$66209_$returns$_t_contract$_ERC20_$51130_$\",\n                        \"typeString\": \"function (contract IFToken) view returns (contract ERC20)\"\n                      }\n                    },\n                    \"id\": 78611,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5833:38:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                      \"typeString\": \"contract ERC20\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"5808:63:191\"\n                },\n                {\n                  \"assignments\": [\n                    78614\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78614,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"amountToDeposit\",\n                      \"nameLocation\": \"5890:15:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78644,\n                      \"src\": \"5882:23:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78613,\n                        \"name\": \"uint256\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"5882:7:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78619,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78616,\n                        \"name\": \"_collateralToken\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78608,\n                        \"src\": \"5922:16:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      {\n                        \"id\": 78617,\n                        \"name\": \"_collateralToDeposit\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78599,\n                        \"src\": \"5940:20:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 78615,\n                      \"name\": \"_maxAvailable\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 77408,\n                      \"src\": \"5908:13:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_ERC20_$51130_$_t_uint256_$returns$_t_uint256_$\",\n                        \"typeString\": \"function (contract ERC20,uint256) view returns (uint256)\"\n                      }\n                    },\n                    \"id\": 78618,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5908:53:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"5882:79:191\"\n                },\n                {\n                  \"assignments\": [\n                    78621\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78621,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"fraxlendPair\",\n                      \"nameLocation\": \"5979:12:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78644,\n                      \"src\": \"5971:20:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_address\",\n                        \"typeString\": \"address\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78620,\n                        \"name\": \"address\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"5971:7:191\",\n                        \"stateMutability\": \"nonpayable\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78626,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78624,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78597,\n                        \"src\": \"6002:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78623,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": true,\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"ElementaryTypeNameExpression\",\n                      \"src\": \"5994:7:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_type$_t_address_$\",\n                        \"typeString\": \"type(address)\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78622,\n                        \"name\": \"address\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"5994:7:191\",\n                        \"typeDescriptions\": {}\n                      }\n                    },\n                    \"id\": 78625,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"typeConversion\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"5994:22:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_address\",\n                      \"typeString\": \"address\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"5971:45:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78630,\n                        \"name\": \"fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78621,\n                        \"src\": \"6055:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      },\n                      {\n                        \"id\": 78631,\n                        \"name\": \"amountToDeposit\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78614,\n                        \"src\": \"6069:15:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 78627,\n                        \"name\": \"_collateralToken\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78608,\n                        \"src\": \"6026:16:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      \"id\": 78629,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"6043:11:191\",\n                      \"memberName\": \"safeApprove\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 51550,\n                      \"src\": \"6026:28:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_ERC20_$51130_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$51130_$\",\n                        \"typeString\": \"function (contract ERC20,address,uint256)\"\n                      }\n                    },\n                    \"id\": 78632,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6026:59:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78633,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"6026:59:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78635,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78597,\n                        \"src\": \"6110:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      },\n                      {\n                        \"id\": 78636,\n                        \"name\": \"amountToDeposit\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78614,\n                        \"src\": \"6125:15:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      ],\n                      \"id\": 78634,\n                      \"name\": \"_addCollateral\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78764,\n                      \"src\": \"6095:14:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_IFToken_$66209_$_t_uint256_$returns$__$\",\n                        \"typeString\": \"function (contract IFToken,uint256)\"\n                      }\n                    },\n                    \"id\": 78637,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6095:46:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78638,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"6095:46:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78640,\n                        \"name\": \"_collateralToken\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78608,\n                        \"src\": \"6220:16:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        }\n                      },\n                      {\n                        \"id\": 78641,\n                        \"name\": \"fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78621,\n                        \"src\": \"6238:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                          \"typeString\": \"contract ERC20\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"id\": 78639,\n                      \"name\": \"_revokeExternalApproval\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 77436,\n                      \"src\": \"6196:23:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_ERC20_$51130_$_t_address_$returns$__$\",\n                        \"typeString\": \"function (contract ERC20,address)\"\n                      }\n                    },\n                    \"id\": 78642,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6196:55:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78643,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"6196:55:191\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 78594,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"5391:279:191\",\n              \"text\": \" @notice Allows strategists to add collateral to the respective cellar position on FraxLend, enabling borrowing.\\n @param _fraxlendPair The specified Fraxlend Pair\\n @param _collateralToDeposit The amount of collateral to add to Fraxlend Pair position\"\n            },\n            \"functionSelector\": \"6d75b9ee\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"addCollateral\",\n            \"nameLocation\": \"5684:13:191\",\n            \"parameters\": {\n              \"id\": 78600,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78597,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_fraxlendPair\",\n                  \"nameLocation\": \"5706:13:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78645,\n                  \"src\": \"5698:21:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                    \"typeString\": \"contract IFToken\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78596,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78595,\n                      \"name\": \"IFToken\",\n                      \"nameLocations\": [\n                        \"5698:7:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 66209,\n                      \"src\": \"5698:7:191\"\n                    },\n                    \"referencedDeclaration\": 66209,\n                    \"src\": \"5698:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78599,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_collateralToDeposit\",\n                  \"nameLocation\": \"5729:20:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78645,\n                  \"src\": \"5721:28:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78598,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"5721:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"5697:53:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78601,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"5758:0:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78686,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"6535:586:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78685,\n              \"nodeType\": \"Block\",\n              \"src\": \"6618:503:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78655,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78651,\n                        \"src\": \"6644:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78654,\n                      \"name\": \"_validateFToken\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78744,\n                      \"src\": \"6628:15:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IFToken_$66209_$returns$__$\",\n                        \"typeString\": \"function (contract IFToken) view\"\n                      }\n                    },\n                    \"id\": 78656,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6628:30:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78657,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"6628:30:191\"\n                },\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78659,\n                        \"name\": \"_collateralAmount\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78648,\n                        \"src\": \"6715:17:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"id\": 78660,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78651,\n                        \"src\": \"6734:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78658,\n                      \"name\": \"_removeCollateral\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78801,\n                      \"src\": \"6697:17:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_uint256_$_t_contract$_IFToken_$66209_$returns$__$\",\n                        \"typeString\": \"function (uint256,contract IFToken)\"\n                      }\n                    },\n                    \"id\": 78661,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6697:51:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78662,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"6697:51:191\"\n                },\n                {\n                  \"assignments\": [\n                    78664\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78664,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"_exchangeRate\",\n                      \"nameLocation\": \"6766:13:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78685,\n                      \"src\": \"6758:21:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78663,\n                        \"name\": \"uint256\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"6758:7:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78668,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78666,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78651,\n                        \"src\": \"6803:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      ],\n                      \"id\": 78665,\n                      \"name\": \"_getExchangeRateInfo\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78818,\n                      \"src\": \"6782:20:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_internal_nonpayable$_t_contract$_IFToken_$66209_$returns$_t_uint256_$\",\n                        \"typeString\": \"function (contract IFToken) returns (uint256)\"\n                      }\n                    },\n                    \"id\": 78667,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"6782:35:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"6758:59:191\"\n                },\n                {\n                  \"condition\": {\n                    \"commonType\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    },\n                    \"id\": 78675,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftExpression\": {\n                      \"id\": 78669,\n                      \"name\": \"minimumHealthFactor\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78407,\n                      \"src\": \"6944:19:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"nodeType\": \"BinaryOperation\",\n                    \"operator\": \">\",\n                    \"rightExpression\": {\n                      \"components\": [\n                        {\n                          \"arguments\": [\n                            {\n                              \"id\": 78671,\n                              \"name\": \"_fraxlendPair\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 78651,\n                              \"src\": \"6984:13:191\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                                \"typeString\": \"contract IFToken\"\n                              }\n                            },\n                            {\n                              \"id\": 78672,\n                              \"name\": \"_exchangeRate\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 78664,\n                              \"src\": \"6999:13:191\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_uint256\",\n                                \"typeString\": \"uint256\"\n                              }\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                                \"typeString\": \"contract IFToken\"\n                              },\n                              {\n                                \"typeIdentifier\": \"t_uint256\",\n                                \"typeString\": \"uint256\"\n                              }\n                            ],\n                            \"id\": 78670,\n                            \"name\": \"_getHealthFactor\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 80457,\n                            \"src\": \"6967:16:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_function_internal_view$_t_contract$_IFToken_$66209_$_t_uint256_$returns$_t_uint256_$\",\n                              \"typeString\": \"function (contract IFToken,uint256) view returns (uint256)\"\n                            }\n                          },\n                          \"id\": 78673,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"kind\": \"functionCall\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"6967:46:191\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint256\",\n                            \"typeString\": \"uint256\"\n                          }\n                        }\n                      ],\n                      \"id\": 78674,\n                      \"isConstant\": false,\n                      \"isInlineArray\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"nodeType\": \"TupleExpression\",\n                      \"src\": \"6966:48:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"src\": \"6944:70:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"id\": 78684,\n                  \"nodeType\": \"IfStatement\",\n                  \"src\": \"6940:175:191\",\n                  \"trueBody\": {\n                    \"id\": 78683,\n                    \"nodeType\": \"Block\",\n                    \"src\": \"7016:99:191\",\n                    \"statements\": [\n                      {\n                        \"errorCall\": {\n                          \"arguments\": [\n                            {\n                              \"arguments\": [\n                                {\n                                  \"id\": 78679,\n                                  \"name\": \"_fraxlendPair\",\n                                  \"nodeType\": \"Identifier\",\n                                  \"overloadedDeclarations\": [],\n                                  \"referencedDeclaration\": 78651,\n                                  \"src\": \"7089:13:191\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                                    \"typeString\": \"contract IFToken\"\n                                  }\n                                }\n                              ],\n                              \"expression\": {\n                                \"argumentTypes\": [\n                                  {\n                                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                                    \"typeString\": \"contract IFToken\"\n                                  }\n                                ],\n                                \"id\": 78678,\n                                \"isConstant\": false,\n                                \"isLValue\": false,\n                                \"isPure\": true,\n                                \"lValueRequested\": false,\n                                \"nodeType\": \"ElementaryTypeNameExpression\",\n                                \"src\": \"7081:7:191\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_type$_t_address_$\",\n                                  \"typeString\": \"type(address)\"\n                                },\n                                \"typeName\": {\n                                  \"id\": 78677,\n                                  \"name\": \"address\",\n                                  \"nodeType\": \"ElementaryTypeName\",\n                                  \"src\": \"7081:7:191\",\n                                  \"typeDescriptions\": {}\n                                }\n                              },\n                              \"id\": 78680,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": false,\n                              \"kind\": \"typeConversion\",\n                              \"lValueRequested\": false,\n                              \"nameLocations\": [],\n                              \"names\": [],\n                              \"nodeType\": \"FunctionCall\",\n                              \"src\": \"7081:22:191\",\n                              \"tryCall\": false,\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_address\",\n                                \"typeString\": \"address\"\n                              }\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_address\",\n                                \"typeString\": \"address\"\n                              }\n                            ],\n                            \"id\": 78676,\n                            \"name\": \"CollateralFTokenAdaptor__HealthFactorTooLow\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 78400,\n                            \"src\": \"7037:43:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_function_error_pure$_t_address_$returns$__$\",\n                              \"typeString\": \"function (address) pure\"\n                            }\n                          },\n                          \"id\": 78681,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"kind\": \"functionCall\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"7037:67:191\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_tuple$__$\",\n                            \"typeString\": \"tuple()\"\n                          }\n                        },\n                        \"id\": 78682,\n                        \"nodeType\": \"RevertStatement\",\n                        \"src\": \"7030:74:191\"\n                      }\n                    ]\n                  }\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 78646,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"6264:266:191\",\n              \"text\": \" @notice Allows strategists to remove collateral from the respective cellar position on FraxLend.\\n @param _collateralAmount The amount of collateral to remove from fraxlend pair position\\n @param _fraxlendPair The specified Fraxlend Pair\"\n            },\n            \"functionSelector\": \"d41ddc96\",\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"removeCollateral\",\n            \"nameLocation\": \"6544:16:191\",\n            \"parameters\": {\n              \"id\": 78652,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78648,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_collateralAmount\",\n                  \"nameLocation\": \"6569:17:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78686,\n                  \"src\": \"6561:25:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78647,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"6561:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78651,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_fraxlendPair\",\n                  \"nameLocation\": \"6596:13:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78686,\n                  \"src\": \"6588:21:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                    \"typeString\": \"contract IFToken\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78650,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78649,\n                      \"name\": \"IFToken\",\n                      \"nameLocations\": [\n                        \"6588:7:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 66209,\n                      \"src\": \"6588:7:191\"\n                    },\n                    \"referencedDeclaration\": 66209,\n                    \"src\": \"6588:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"6560:50:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78653,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"6618:0:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"public\"\n          },\n          {\n            \"id\": 78744,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"7417:459:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78743,\n              \"nodeType\": \"Block\",\n              \"src\": \"7487:389:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"assignments\": [\n                    78694\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78694,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"positionHash\",\n                      \"nameLocation\": \"7505:12:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78743,\n                      \"src\": \"7497:20:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_bytes32\",\n                        \"typeString\": \"bytes32\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78693,\n                        \"name\": \"bytes32\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"7497:7:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes32\",\n                          \"typeString\": \"bytes32\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78710,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [\n                          {\n                            \"arguments\": [],\n                            \"expression\": {\n                              \"argumentTypes\": [],\n                              \"id\": 78698,\n                              \"name\": \"identifier\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [\n                                78444\n                              ],\n                              \"referencedDeclaration\": 78444,\n                              \"src\": \"7541:10:191\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_internal_pure$__$returns$_t_bytes32_$\",\n                                \"typeString\": \"function () pure returns (bytes32)\"\n                              }\n                            },\n                            \"id\": 78699,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"7541:12:191\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            }\n                          },\n                          {\n                            \"hexValue\": \"66616c7365\",\n                            \"id\": 78700,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"kind\": \"bool\",\n                            \"lValueRequested\": false,\n                            \"nodeType\": \"Literal\",\n                            \"src\": \"7555:5:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_bool\",\n                              \"typeString\": \"bool\"\n                            },\n                            \"value\": \"false\"\n                          },\n                          {\n                            \"arguments\": [\n                              {\n                                \"arguments\": [\n                                  {\n                                    \"id\": 78705,\n                                    \"name\": \"_fraxlendPair\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": 78690,\n                                    \"src\": \"7581:13:191\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                                      \"typeString\": \"contract IFToken\"\n                                    }\n                                  }\n                                ],\n                                \"expression\": {\n                                  \"argumentTypes\": [\n                                    {\n                                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                                      \"typeString\": \"contract IFToken\"\n                                    }\n                                  ],\n                                  \"id\": 78704,\n                                  \"isConstant\": false,\n                                  \"isLValue\": false,\n                                  \"isPure\": true,\n                                  \"lValueRequested\": false,\n                                  \"nodeType\": \"ElementaryTypeNameExpression\",\n                                  \"src\": \"7573:7:191\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_type$_t_address_$\",\n                                    \"typeString\": \"type(address)\"\n                                  },\n                                  \"typeName\": {\n                                    \"id\": 78703,\n                                    \"name\": \"address\",\n                                    \"nodeType\": \"ElementaryTypeName\",\n                                    \"src\": \"7573:7:191\",\n                                    \"typeDescriptions\": {}\n                                  }\n                                },\n                                \"id\": 78706,\n                                \"isConstant\": false,\n                                \"isLValue\": false,\n                                \"isPure\": false,\n                                \"kind\": \"typeConversion\",\n                                \"lValueRequested\": false,\n                                \"nameLocations\": [],\n                                \"names\": [],\n                                \"nodeType\": \"FunctionCall\",\n                                \"src\": \"7573:22:191\",\n                                \"tryCall\": false,\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_address\",\n                                  \"typeString\": \"address\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_address\",\n                                  \"typeString\": \"address\"\n                                }\n                              ],\n                              \"expression\": {\n                                \"id\": 78701,\n                                \"name\": \"abi\",\n                                \"nodeType\": \"Identifier\",\n                                \"overloadedDeclarations\": [],\n                                \"referencedDeclaration\": -1,\n                                \"src\": \"7562:3:191\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_magic_abi\",\n                                  \"typeString\": \"abi\"\n                                }\n                              },\n                              \"id\": 78702,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": true,\n                              \"lValueRequested\": false,\n                              \"memberLocation\": \"7566:6:191\",\n                              \"memberName\": \"encode\",\n                              \"nodeType\": \"MemberAccess\",\n                              \"src\": \"7562:10:191\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$\",\n                                \"typeString\": \"function () pure returns (bytes memory)\"\n                              }\n                            },\n                            \"id\": 78707,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"functionCall\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"7562:34:191\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                              \"typeString\": \"bytes memory\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_bytes32\",\n                              \"typeString\": \"bytes32\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_bool\",\n                              \"typeString\": \"bool\"\n                            },\n                            {\n                              \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                              \"typeString\": \"bytes memory\"\n                            }\n                          ],\n                          \"expression\": {\n                            \"id\": 78696,\n                            \"name\": \"abi\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -1,\n                            \"src\": \"7530:3:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_magic_abi\",\n                              \"typeString\": \"abi\"\n                            }\n                          },\n                          \"id\": 78697,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"7534:6:191\",\n                          \"memberName\": \"encode\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"src\": \"7530:10:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$\",\n                            \"typeString\": \"function () pure returns (bytes memory)\"\n                          }\n                        },\n                        \"id\": 78708,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"7530:67:191\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes_memory_ptr\",\n                          \"typeString\": \"bytes memory\"\n                        }\n                      ],\n                      \"id\": 78695,\n                      \"name\": \"keccak256\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": -8,\n                      \"src\": \"7520:9:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$\",\n                        \"typeString\": \"function (bytes memory) pure returns (bytes32)\"\n                      }\n                    },\n                    \"id\": 78709,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"7520:78:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bytes32\",\n                      \"typeString\": \"bytes32\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"7497:101:191\"\n                },\n                {\n                  \"assignments\": [\n                    78712\n                  ],\n                  \"declarations\": [\n                    {\n                      \"constant\": false,\n                      \"id\": 78712,\n                      \"mutability\": \"mutable\",\n                      \"name\": \"positionId\",\n                      \"nameLocation\": \"7615:10:191\",\n                      \"nodeType\": \"VariableDeclaration\",\n                      \"scope\": 78743,\n                      \"src\": \"7608:17:191\",\n                      \"stateVariable\": false,\n                      \"storageLocation\": \"default\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint32\",\n                        \"typeString\": \"uint32\"\n                      },\n                      \"typeName\": {\n                        \"id\": 78711,\n                        \"name\": \"uint32\",\n                        \"nodeType\": \"ElementaryTypeName\",\n                        \"src\": \"7608:6:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint32\",\n                          \"typeString\": \"uint32\"\n                        }\n                      },\n                      \"visibility\": \"internal\"\n                    }\n                  ],\n                  \"id\": 78724,\n                  \"initialValue\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78722,\n                        \"name\": \"positionHash\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78694,\n                        \"src\": \"7689:12:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_bytes32\",\n                          \"typeString\": \"bytes32\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_bytes32\",\n                          \"typeString\": \"bytes32\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"expression\": {\n                            \"arguments\": [\n                              {\n                                \"arguments\": [\n                                  {\n                                    \"id\": 78716,\n                                    \"name\": \"this\",\n                                    \"nodeType\": \"Identifier\",\n                                    \"overloadedDeclarations\": [],\n                                    \"referencedDeclaration\": -28,\n                                    \"src\": \"7643:4:191\",\n                                    \"typeDescriptions\": {\n                                      \"typeIdentifier\": \"t_contract$_CollateralFTokenAdaptor_$78819\",\n                                      \"typeString\": \"contract CollateralFTokenAdaptor\"\n                                    }\n                                  }\n                                ],\n                                \"expression\": {\n                                  \"argumentTypes\": [\n                                    {\n                                      \"typeIdentifier\": \"t_contract$_CollateralFTokenAdaptor_$78819\",\n                                      \"typeString\": \"contract CollateralFTokenAdaptor\"\n                                    }\n                                  ],\n                                  \"id\": 78715,\n                                  \"isConstant\": false,\n                                  \"isLValue\": false,\n                                  \"isPure\": true,\n                                  \"lValueRequested\": false,\n                                  \"nodeType\": \"ElementaryTypeNameExpression\",\n                                  \"src\": \"7635:7:191\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_type$_t_address_$\",\n                                    \"typeString\": \"type(address)\"\n                                  },\n                                  \"typeName\": {\n                                    \"id\": 78714,\n                                    \"name\": \"address\",\n                                    \"nodeType\": \"ElementaryTypeName\",\n                                    \"src\": \"7635:7:191\",\n                                    \"typeDescriptions\": {}\n                                  }\n                                },\n                                \"id\": 78717,\n                                \"isConstant\": false,\n                                \"isLValue\": false,\n                                \"isPure\": false,\n                                \"kind\": \"typeConversion\",\n                                \"lValueRequested\": false,\n                                \"nameLocations\": [],\n                                \"names\": [],\n                                \"nodeType\": \"FunctionCall\",\n                                \"src\": \"7635:13:191\",\n                                \"tryCall\": false,\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_address\",\n                                  \"typeString\": \"address\"\n                                }\n                              }\n                            ],\n                            \"expression\": {\n                              \"argumentTypes\": [\n                                {\n                                  \"typeIdentifier\": \"t_address\",\n                                  \"typeString\": \"address\"\n                                }\n                              ],\n                              \"id\": 78713,\n                              \"name\": \"Cellar\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 61030,\n                              \"src\": \"7628:6:191\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_type$_t_contract$_Cellar_$61030_$\",\n                                \"typeString\": \"type(contract Cellar)\"\n                              }\n                            },\n                            \"id\": 78718,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": false,\n                            \"kind\": \"typeConversion\",\n                            \"lValueRequested\": false,\n                            \"nameLocations\": [],\n                            \"names\": [],\n                            \"nodeType\": \"FunctionCall\",\n                            \"src\": \"7628:21:191\",\n                            \"tryCall\": false,\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_Cellar_$61030\",\n                              \"typeString\": \"contract Cellar\"\n                            }\n                          },\n                          \"id\": 78719,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"7650:8:191\",\n                          \"memberName\": \"registry\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"referencedDeclaration\": 58935,\n                          \"src\": \"7628:30:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_external_view$__$returns$_t_contract$_Registry_$57893_$\",\n                            \"typeString\": \"function () view external returns (contract Registry)\"\n                          }\n                        },\n                        \"id\": 78720,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"7628:32:191\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_Registry_$57893\",\n                          \"typeString\": \"contract Registry\"\n                        }\n                      },\n                      \"id\": 78721,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"7661:27:191\",\n                      \"memberName\": \"getPositionHashToPositionId\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 57601,\n                      \"src\": \"7628:60:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_view$_t_bytes32_$returns$_t_uint32_$\",\n                        \"typeString\": \"function (bytes32) view external returns (uint32)\"\n                      }\n                    },\n                    \"id\": 78723,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"7628:74:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint32\",\n                      \"typeString\": \"uint32\"\n                    }\n                  },\n                  \"nodeType\": \"VariableDeclarationStatement\",\n                  \"src\": \"7608:94:191\"\n                },\n                {\n                  \"condition\": {\n                    \"id\": 78734,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"nodeType\": \"UnaryOperation\",\n                    \"operator\": \"!\",\n                    \"prefix\": true,\n                    \"src\": \"7716:49:191\",\n                    \"subExpression\": {\n                      \"arguments\": [\n                        {\n                          \"id\": 78732,\n                          \"name\": \"positionId\",\n                          \"nodeType\": \"Identifier\",\n                          \"overloadedDeclarations\": [],\n                          \"referencedDeclaration\": 78712,\n                          \"src\": \"7754:10:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_uint32\",\n                            \"typeString\": \"uint32\"\n                          }\n                        }\n                      ],\n                      \"expression\": {\n                        \"argumentTypes\": [\n                          {\n                            \"typeIdentifier\": \"t_uint32\",\n                            \"typeString\": \"uint32\"\n                          }\n                        ],\n                        \"expression\": {\n                          \"arguments\": [\n                            {\n                              \"arguments\": [\n                                {\n                                  \"id\": 78728,\n                                  \"name\": \"this\",\n                                  \"nodeType\": \"Identifier\",\n                                  \"overloadedDeclarations\": [],\n                                  \"referencedDeclaration\": -28,\n                                  \"src\": \"7732:4:191\",\n                                  \"typeDescriptions\": {\n                                    \"typeIdentifier\": \"t_contract$_CollateralFTokenAdaptor_$78819\",\n                                    \"typeString\": \"contract CollateralFTokenAdaptor\"\n                                  }\n                                }\n                              ],\n                              \"expression\": {\n                                \"argumentTypes\": [\n                                  {\n                                    \"typeIdentifier\": \"t_contract$_CollateralFTokenAdaptor_$78819\",\n                                    \"typeString\": \"contract CollateralFTokenAdaptor\"\n                                  }\n                                ],\n                                \"id\": 78727,\n                                \"isConstant\": false,\n                                \"isLValue\": false,\n                                \"isPure\": true,\n                                \"lValueRequested\": false,\n                                \"nodeType\": \"ElementaryTypeNameExpression\",\n                                \"src\": \"7724:7:191\",\n                                \"typeDescriptions\": {\n                                  \"typeIdentifier\": \"t_type$_t_address_$\",\n                                  \"typeString\": \"type(address)\"\n                                },\n                                \"typeName\": {\n                                  \"id\": 78726,\n                                  \"name\": \"address\",\n                                  \"nodeType\": \"ElementaryTypeName\",\n                                  \"src\": \"7724:7:191\",\n                                  \"typeDescriptions\": {}\n                                }\n                              },\n                              \"id\": 78729,\n                              \"isConstant\": false,\n                              \"isLValue\": false,\n                              \"isPure\": false,\n                              \"kind\": \"typeConversion\",\n                              \"lValueRequested\": false,\n                              \"nameLocations\": [],\n                              \"names\": [],\n                              \"nodeType\": \"FunctionCall\",\n                              \"src\": \"7724:13:191\",\n                              \"tryCall\": false,\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_address\",\n                                \"typeString\": \"address\"\n                              }\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_address\",\n                                \"typeString\": \"address\"\n                              }\n                            ],\n                            \"id\": 78725,\n                            \"name\": \"Cellar\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 61030,\n                            \"src\": \"7717:6:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_contract$_Cellar_$61030_$\",\n                              \"typeString\": \"type(contract Cellar)\"\n                            }\n                          },\n                          \"id\": 78730,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"kind\": \"typeConversion\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"7717:21:191\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_contract$_Cellar_$61030\",\n                            \"typeString\": \"contract Cellar\"\n                          }\n                        },\n                        \"id\": 78731,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"lValueRequested\": false,\n                        \"memberLocation\": \"7739:14:191\",\n                        \"memberName\": \"isPositionUsed\",\n                        \"nodeType\": \"MemberAccess\",\n                        \"referencedDeclaration\": 58190,\n                        \"src\": \"7717:36:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_external_view$_t_uint256_$returns$_t_bool_$\",\n                          \"typeString\": \"function (uint256) view external returns (bool)\"\n                        }\n                      },\n                      \"id\": 78733,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"7717:48:191\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_bool\",\n                        \"typeString\": \"bool\"\n                      }\n                    },\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_bool\",\n                      \"typeString\": \"bool\"\n                    }\n                  },\n                  \"id\": 78742,\n                  \"nodeType\": \"IfStatement\",\n                  \"src\": \"7712:157:191\",\n                  \"trueBody\": {\n                    \"errorCall\": {\n                      \"arguments\": [\n                        {\n                          \"arguments\": [\n                            {\n                              \"id\": 78738,\n                              \"name\": \"_fraxlendPair\",\n                              \"nodeType\": \"Identifier\",\n                              \"overloadedDeclarations\": [],\n                              \"referencedDeclaration\": 78690,\n                              \"src\": \"7854:13:191\",\n                              \"typeDescriptions\": {\n                                \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                                \"typeString\": \"contract IFToken\"\n                              }\n                            }\n                          ],\n                          \"expression\": {\n                            \"argumentTypes\": [\n                              {\n                                \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                                \"typeString\": \"contract IFToken\"\n                              }\n                            ],\n                            \"id\": 78737,\n                            \"isConstant\": false,\n                            \"isLValue\": false,\n                            \"isPure\": true,\n                            \"lValueRequested\": false,\n                            \"nodeType\": \"ElementaryTypeNameExpression\",\n                            \"src\": \"7846:7:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_type$_t_address_$\",\n                              \"typeString\": \"type(address)\"\n                            },\n                            \"typeName\": {\n                              \"id\": 78736,\n                              \"name\": \"address\",\n                              \"nodeType\": \"ElementaryTypeName\",\n                              \"src\": \"7846:7:191\",\n                              \"typeDescriptions\": {}\n                            }\n                          },\n                          \"id\": 78739,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"kind\": \"typeConversion\",\n                          \"lValueRequested\": false,\n                          \"nameLocations\": [],\n                          \"names\": [],\n                          \"nodeType\": \"FunctionCall\",\n                          \"src\": \"7846:22:191\",\n                          \"tryCall\": false,\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        }\n                      ],\n                      \"expression\": {\n                        \"argumentTypes\": [\n                          {\n                            \"typeIdentifier\": \"t_address\",\n                            \"typeString\": \"address\"\n                          }\n                        ],\n                        \"id\": 78735,\n                        \"name\": \"CollateralFTokenAdaptor__FraxlendPairPositionsMustBeTracked\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78395,\n                        \"src\": \"7786:59:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_function_error_pure$_t_address_$returns$__$\",\n                          \"typeString\": \"function (address) pure\"\n                        }\n                      },\n                      \"id\": 78740,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"kind\": \"functionCall\",\n                      \"lValueRequested\": false,\n                      \"nameLocations\": [],\n                      \"names\": [],\n                      \"nodeType\": \"FunctionCall\",\n                      \"src\": \"7786:83:191\",\n                      \"tryCall\": false,\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_tuple$__$\",\n                        \"typeString\": \"tuple()\"\n                      }\n                    },\n                    \"id\": 78741,\n                    \"nodeType\": \"RevertStatement\",\n                    \"src\": \"7779:90:191\"\n                  }\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 78687,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"7240:172:191\",\n              \"text\": \" @notice Validates that a given fToken is set up as a position in the Cellar.\\n @dev This function uses `address(this)` as the address of the Cellar.\"\n            },\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"_validateFToken\",\n            \"nameLocation\": \"7426:15:191\",\n            \"parameters\": {\n              \"id\": 78691,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78690,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_fraxlendPair\",\n                  \"nameLocation\": \"7450:13:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78744,\n                  \"src\": \"7442:21:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                    \"typeString\": \"contract IFToken\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78689,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78688,\n                      \"name\": \"IFToken\",\n                      \"nameLocations\": [\n                        \"7442:7:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 66209,\n                      \"src\": \"7442:7:191\"\n                    },\n                    \"referencedDeclaration\": 66209,\n                    \"src\": \"7442:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"7441:23:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78692,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"7487:0:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"view\",\n            \"virtual\": true,\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 78764,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"9640:157:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78763,\n              \"nodeType\": \"Block\",\n              \"src\": \"9721:76:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78756,\n                        \"name\": \"amountToDeposit\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78750,\n                        \"src\": \"9759:15:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 78759,\n                            \"name\": \"this\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -28,\n                            \"src\": \"9784:4:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_CollateralFTokenAdaptor_$78819\",\n                              \"typeString\": \"contract CollateralFTokenAdaptor\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_CollateralFTokenAdaptor_$78819\",\n                              \"typeString\": \"contract CollateralFTokenAdaptor\"\n                            }\n                          ],\n                          \"id\": 78758,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"9776:7:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_address_$\",\n                            \"typeString\": \"type(address)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 78757,\n                            \"name\": \"address\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"9776:7:191\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 78760,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"9776:13:191\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 78753,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78748,\n                        \"src\": \"9731:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      },\n                      \"id\": 78755,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"9745:13:191\",\n                      \"memberName\": \"addCollateral\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 66094,\n                      \"src\": \"9731:27:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$\",\n                        \"typeString\": \"function (uint256,address) external\"\n                      }\n                    },\n                    \"id\": 78761,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"9731:59:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78762,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"9731:59:191\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 78745,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"9398:237:191\",\n              \"text\": \" @notice Increment collateral amount in cellar account within fraxlend pair\\n @param _fraxlendPair The specified Fraxlend Pair\\n @param amountToDeposit The amount of collateral to add to Fraxlend Pair position\"\n            },\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"_addCollateral\",\n            \"nameLocation\": \"9649:14:191\",\n            \"parameters\": {\n              \"id\": 78751,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78748,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_fraxlendPair\",\n                  \"nameLocation\": \"9672:13:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78764,\n                  \"src\": \"9664:21:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                    \"typeString\": \"contract IFToken\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78747,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78746,\n                      \"name\": \"IFToken\",\n                      \"nameLocations\": [\n                        \"9664:7:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 66209,\n                      \"src\": \"9664:7:191\"\n                    },\n                    \"referencedDeclaration\": 66209,\n                    \"src\": \"9664:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78750,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"amountToDeposit\",\n                  \"nameLocation\": \"9695:15:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78764,\n                  \"src\": \"9687:23:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78749,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"9687:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"9663:48:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78752,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"9721:0:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": false,\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 78781,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"10002:178:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78780,\n              \"nodeType\": \"Block\",\n              \"src\": \"10115:65:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"expression\": {\n                            \"id\": 78775,\n                            \"name\": \"_fraxlendPair\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 78768,\n                            \"src\": \"10138:13:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                              \"typeString\": \"contract IFToken\"\n                            }\n                          },\n                          \"id\": 78776,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"10152:18:191\",\n                          \"memberName\": \"collateralContract\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"referencedDeclaration\": 66099,\n                          \"src\": \"10138:32:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_external_view$__$returns$_t_address_$\",\n                            \"typeString\": \"function () view external returns (address)\"\n                          }\n                        },\n                        \"id\": 78777,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"10138:34:191\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"id\": 78774,\n                      \"name\": \"ERC20\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 51130,\n                      \"src\": \"10132:5:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_type$_t_contract$_ERC20_$51130_$\",\n                        \"typeString\": \"type(contract ERC20)\"\n                      }\n                    },\n                    \"id\": 78778,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"typeConversion\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"10132:41:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                      \"typeString\": \"contract ERC20\"\n                    }\n                  },\n                  \"functionReturnParameters\": 78773,\n                  \"id\": 78779,\n                  \"nodeType\": \"Return\",\n                  \"src\": \"10125:48:191\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 78765,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"9803:194:191\",\n              \"text\": \" @notice Get current collateral contract for caller in fraxlend pair\\n @param _fraxlendPair The specified Fraxlend Pair\\n @return collateralContract for fraxlend pair\"\n            },\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"_userCollateralContract\",\n            \"nameLocation\": \"10011:23:191\",\n            \"parameters\": {\n              \"id\": 78769,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78768,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_fraxlendPair\",\n                  \"nameLocation\": \"10043:13:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78781,\n                  \"src\": \"10035:21:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                    \"typeString\": \"contract IFToken\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78767,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78766,\n                      \"name\": \"IFToken\",\n                      \"nameLocations\": [\n                        \"10035:7:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 66209,\n                      \"src\": \"10035:7:191\"\n                    },\n                    \"referencedDeclaration\": 66209,\n                    \"src\": \"10035:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"10034:23:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78773,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78772,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"collateralContract\",\n                  \"nameLocation\": \"10095:18:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78781,\n                  \"src\": \"10089:24:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                    \"typeString\": \"contract ERC20\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78771,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78770,\n                      \"name\": \"ERC20\",\n                      \"nameLocations\": [\n                        \"10089:5:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 51130,\n                      \"src\": \"10089:5:191\"\n                    },\n                    \"referencedDeclaration\": 51130,\n                    \"src\": \"10089:5:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_ERC20_$51130\",\n                      \"typeString\": \"contract ERC20\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"10088:26:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"view\",\n            \"virtual\": true,\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 78801,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"10435:175:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78800,\n              \"nodeType\": \"Block\",\n              \"src\": \"10529:81:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"arguments\": [\n                      {\n                        \"id\": 78793,\n                        \"name\": \"_collateralAmount\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78784,\n                        \"src\": \"10570:17:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        }\n                      },\n                      {\n                        \"arguments\": [\n                          {\n                            \"id\": 78796,\n                            \"name\": \"this\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": -28,\n                            \"src\": \"10597:4:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_CollateralFTokenAdaptor_$78819\",\n                              \"typeString\": \"contract CollateralFTokenAdaptor\"\n                            }\n                          }\n                        ],\n                        \"expression\": {\n                          \"argumentTypes\": [\n                            {\n                              \"typeIdentifier\": \"t_contract$_CollateralFTokenAdaptor_$78819\",\n                              \"typeString\": \"contract CollateralFTokenAdaptor\"\n                            }\n                          ],\n                          \"id\": 78795,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": true,\n                          \"lValueRequested\": false,\n                          \"nodeType\": \"ElementaryTypeNameExpression\",\n                          \"src\": \"10589:7:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_type$_t_address_$\",\n                            \"typeString\": \"type(address)\"\n                          },\n                          \"typeName\": {\n                            \"id\": 78794,\n                            \"name\": \"address\",\n                            \"nodeType\": \"ElementaryTypeName\",\n                            \"src\": \"10589:7:191\",\n                            \"typeDescriptions\": {}\n                          }\n                        },\n                        \"id\": 78797,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"typeConversion\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"10589:13:191\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      }\n                    ],\n                    \"expression\": {\n                      \"argumentTypes\": [\n                        {\n                          \"typeIdentifier\": \"t_uint256\",\n                          \"typeString\": \"uint256\"\n                        },\n                        {\n                          \"typeIdentifier\": \"t_address\",\n                          \"typeString\": \"address\"\n                        }\n                      ],\n                      \"expression\": {\n                        \"id\": 78790,\n                        \"name\": \"_fraxlendPair\",\n                        \"nodeType\": \"Identifier\",\n                        \"overloadedDeclarations\": [],\n                        \"referencedDeclaration\": 78787,\n                        \"src\": \"10539:13:191\",\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                          \"typeString\": \"contract IFToken\"\n                        }\n                      },\n                      \"id\": 78792,\n                      \"isConstant\": false,\n                      \"isLValue\": false,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"10553:16:191\",\n                      \"memberName\": \"removeCollateral\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 66106,\n                      \"src\": \"10539:30:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$\",\n                        \"typeString\": \"function (uint256,address) external\"\n                      }\n                    },\n                    \"id\": 78798,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"kind\": \"functionCall\",\n                    \"lValueRequested\": false,\n                    \"nameLocations\": [],\n                    \"names\": [],\n                    \"nodeType\": \"FunctionCall\",\n                    \"src\": \"10539:64:191\",\n                    \"tryCall\": false,\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_tuple$__$\",\n                      \"typeString\": \"tuple()\"\n                    }\n                  },\n                  \"id\": 78799,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"10539:64:191\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 78782,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"10186:244:191\",\n              \"text\": \" @notice Decrement collateral amount in cellar account within fraxlend pair\\n @param _collateralAmount The amount of collateral to remove from fraxlend pair position\\n @param _fraxlendPair The specified Fraxlend Pair\"\n            },\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"_removeCollateral\",\n            \"nameLocation\": \"10444:17:191\",\n            \"parameters\": {\n              \"id\": 78788,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78784,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_collateralAmount\",\n                  \"nameLocation\": \"10470:17:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78801,\n                  \"src\": \"10462:25:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78783,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"10462:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                },\n                {\n                  \"constant\": false,\n                  \"id\": 78787,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_fraxlendPair\",\n                  \"nameLocation\": \"10497:13:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78801,\n                  \"src\": \"10489:21:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                    \"typeString\": \"contract IFToken\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78786,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78785,\n                      \"name\": \"IFToken\",\n                      \"nameLocations\": [\n                        \"10489:7:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 66209,\n                      \"src\": \"10489:7:191\"\n                    },\n                    \"referencedDeclaration\": 66209,\n                    \"src\": \"10489:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"10461:50:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78789,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [],\n              \"src\": \"10529:0:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": true,\n            \"visibility\": \"internal\"\n          },\n          {\n            \"id\": 78818,\n            \"nodeType\": \"FunctionDefinition\",\n            \"src\": \"10841:182:191\",\n            \"nodes\": [],\n            \"body\": {\n              \"id\": 78817,\n              \"nodeType\": \"Block\",\n              \"src\": \"10942:81:191\",\n              \"nodes\": [],\n              \"statements\": [\n                {\n                  \"expression\": {\n                    \"id\": 78815,\n                    \"isConstant\": false,\n                    \"isLValue\": false,\n                    \"isPure\": false,\n                    \"lValueRequested\": false,\n                    \"leftHandSide\": {\n                      \"id\": 78810,\n                      \"name\": \"exchangeRate\",\n                      \"nodeType\": \"Identifier\",\n                      \"overloadedDeclarations\": [],\n                      \"referencedDeclaration\": 78808,\n                      \"src\": \"10952:12:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"nodeType\": \"Assignment\",\n                    \"operator\": \"=\",\n                    \"rightHandSide\": {\n                      \"expression\": {\n                        \"arguments\": [],\n                        \"expression\": {\n                          \"argumentTypes\": [],\n                          \"expression\": {\n                            \"id\": 78811,\n                            \"name\": \"_fraxlendPair\",\n                            \"nodeType\": \"Identifier\",\n                            \"overloadedDeclarations\": [],\n                            \"referencedDeclaration\": 78805,\n                            \"src\": \"10967:13:191\",\n                            \"typeDescriptions\": {\n                              \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                              \"typeString\": \"contract IFToken\"\n                            }\n                          },\n                          \"id\": 78812,\n                          \"isConstant\": false,\n                          \"isLValue\": false,\n                          \"isPure\": false,\n                          \"lValueRequested\": false,\n                          \"memberLocation\": \"10981:16:191\",\n                          \"memberName\": \"exchangeRateInfo\",\n                          \"nodeType\": \"MemberAccess\",\n                          \"referencedDeclaration\": 66208,\n                          \"src\": \"10967:30:191\",\n                          \"typeDescriptions\": {\n                            \"typeIdentifier\": \"t_function_external_view$__$returns$_t_struct$_ExchangeRateInfo_$66202_memory_ptr_$\",\n                            \"typeString\": \"function () view external returns (struct IFToken.ExchangeRateInfo memory)\"\n                          }\n                        },\n                        \"id\": 78813,\n                        \"isConstant\": false,\n                        \"isLValue\": false,\n                        \"isPure\": false,\n                        \"kind\": \"functionCall\",\n                        \"lValueRequested\": false,\n                        \"nameLocations\": [],\n                        \"names\": [],\n                        \"nodeType\": \"FunctionCall\",\n                        \"src\": \"10967:32:191\",\n                        \"tryCall\": false,\n                        \"typeDescriptions\": {\n                          \"typeIdentifier\": \"t_struct$_ExchangeRateInfo_$66202_memory_ptr\",\n                          \"typeString\": \"struct IFToken.ExchangeRateInfo memory\"\n                        }\n                      },\n                      \"id\": 78814,\n                      \"isConstant\": false,\n                      \"isLValue\": true,\n                      \"isPure\": false,\n                      \"lValueRequested\": false,\n                      \"memberLocation\": \"11000:16:191\",\n                      \"memberName\": \"highExchangeRate\",\n                      \"nodeType\": \"MemberAccess\",\n                      \"referencedDeclaration\": 66201,\n                      \"src\": \"10967:49:191\",\n                      \"typeDescriptions\": {\n                        \"typeIdentifier\": \"t_uint256\",\n                        \"typeString\": \"uint256\"\n                      }\n                    },\n                    \"src\": \"10952:64:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"id\": 78816,\n                  \"nodeType\": \"ExpressionStatement\",\n                  \"src\": \"10952:64:191\"\n                }\n              ]\n            },\n            \"documentation\": {\n              \"id\": 78802,\n              \"nodeType\": \"StructuredDocumentation\",\n              \"src\": \"10616:220:191\",\n              \"text\": \" @notice Caller calls `updateExchangeRate()` on specified FraxlendV2 Pair\\n @param _fraxlendPair The specified FraxLendPair\\n @return exchangeRate needed to calculate the current health factor\"\n            },\n            \"implemented\": true,\n            \"kind\": \"function\",\n            \"modifiers\": [],\n            \"name\": \"_getExchangeRateInfo\",\n            \"nameLocation\": \"10850:20:191\",\n            \"parameters\": {\n              \"id\": 78806,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78805,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"_fraxlendPair\",\n                  \"nameLocation\": \"10879:13:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78818,\n                  \"src\": \"10871:21:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                    \"typeString\": \"contract IFToken\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78804,\n                    \"nodeType\": \"UserDefinedTypeName\",\n                    \"pathNode\": {\n                      \"id\": 78803,\n                      \"name\": \"IFToken\",\n                      \"nameLocations\": [\n                        \"10871:7:191\"\n                      ],\n                      \"nodeType\": \"IdentifierPath\",\n                      \"referencedDeclaration\": 66209,\n                      \"src\": \"10871:7:191\"\n                    },\n                    \"referencedDeclaration\": 66209,\n                    \"src\": \"10871:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_contract$_IFToken_$66209\",\n                      \"typeString\": \"contract IFToken\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"10870:23:191\"\n            },\n            \"returnParameters\": {\n              \"id\": 78809,\n              \"nodeType\": \"ParameterList\",\n              \"parameters\": [\n                {\n                  \"constant\": false,\n                  \"id\": 78808,\n                  \"mutability\": \"mutable\",\n                  \"name\": \"exchangeRate\",\n                  \"nameLocation\": \"10928:12:191\",\n                  \"nodeType\": \"VariableDeclaration\",\n                  \"scope\": 78818,\n                  \"src\": \"10920:20:191\",\n                  \"stateVariable\": false,\n                  \"storageLocation\": \"default\",\n                  \"typeDescriptions\": {\n                    \"typeIdentifier\": \"t_uint256\",\n                    \"typeString\": \"uint256\"\n                  },\n                  \"typeName\": {\n                    \"id\": 78807,\n                    \"name\": \"uint256\",\n                    \"nodeType\": \"ElementaryTypeName\",\n                    \"src\": \"10920:7:191\",\n                    \"typeDescriptions\": {\n                      \"typeIdentifier\": \"t_uint256\",\n                      \"typeString\": \"uint256\"\n                    }\n                  },\n                  \"visibility\": \"internal\"\n                }\n              ],\n              \"src\": \"10919:22:191\"\n            },\n            \"scope\": 78819,\n            \"stateMutability\": \"nonpayable\",\n            \"virtual\": true,\n            \"visibility\": \"internal\"\n          }\n        ],\n        \"abstract\": false,\n        \"baseContracts\": [\n          {\n            \"baseName\": {\n              \"id\": 78380,\n              \"name\": \"BaseAdaptor\",\n              \"nameLocations\": [\n                \"563:11:191\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 77495,\n              \"src\": \"563:11:191\"\n            },\n            \"id\": 78381,\n            \"nodeType\": \"InheritanceSpecifier\",\n            \"src\": \"563:11:191\"\n          },\n          {\n            \"baseName\": {\n              \"id\": 78382,\n              \"name\": \"FraxlendHealthFactorLogic\",\n              \"nameLocations\": [\n                \"576:25:191\"\n              ],\n              \"nodeType\": \"IdentifierPath\",\n              \"referencedDeclaration\": 80549,\n              \"src\": \"576:25:191\"\n            },\n            \"id\": 78383,\n            \"nodeType\": \"InheritanceSpecifier\",\n            \"src\": \"576:25:191\"\n          }\n        ],\n        \"canonicalName\": \"CollateralFTokenAdaptor\",\n        \"contractDependencies\": [],\n        \"contractKind\": \"contract\",\n        \"documentation\": {\n          \"id\": 78379,\n          \"nodeType\": \"StructuredDocumentation\",\n          \"src\": \"353:173:191\",\n          \"text\": \" @title FraxLend Collateral Adaptor\\n @notice Allows addition and removal of collateralAssets to Fraxlend pairs for a Cellar.\\n @author crispymangoes, 0xEinCodes\"\n        },\n        \"fullyImplemented\": true,\n        \"linearizedBaseContracts\": [\n          78819,\n          80549,\n          77495\n        ],\n        \"name\": \"CollateralFTokenAdaptor\",\n        \"nameLocation\": \"536:23:191\",\n        \"scope\": 78820,\n        \"usedErrors\": [\n          77230,\n          77233,\n          77236,\n          77239,\n          77244,\n          77247,\n          78395,\n          78400\n        ],\n        \"usedEvents\": []\n      }\n    ],\n    \"license\": \"Apache-2.0\"\n  },\n  \"id\": 191\n}") . expect ("invalid abi")
        });
    #[derive(Clone)]
    pub struct CollateralFTokenAdaptorV1<M>(ethers::contract::Contract<M>);
    impl<M> std::ops::Deref for CollateralFTokenAdaptorV1<M> {
        type Target = ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M: ethers::providers::Middleware> std::fmt::Debug for CollateralFTokenAdaptorV1<M> {
        fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
            f.debug_tuple(stringify!(CollateralFTokenAdaptorV1))
                .field(&self.address())
                .finish()
        }
    }
    impl<'a, M: ethers::providers::Middleware> CollateralFTokenAdaptorV1<M> {
        #[doc = r" Creates a new contract instance with the specified `ethers`"]
        #[doc = r" client at the given `Address`. The contract derefs to a `ethers::Contract`"]
        #[doc = r" object"]
        pub fn new<T: Into<ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            let contract = ethers::contract::Contract::new(
                address.into(),
                COLLATERALFTOKENADAPTORV1_ABI.clone(),
                client,
            );
            Self(contract)
        }
        #[doc = "Calls the contract's `FRAX` (0xb0e4556f) function"]
        pub fn frax(
            &self,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::Address> {
            self.0
                .method_hash([176, 228, 85, 111], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `addCollateral` (0x6d75b9ee) function"]
        pub fn add_collateral(
            &self,
            fraxlend_pair: ethers::core::types::Address,
            collateral_to_deposit: ethers::core::types::U256,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([109, 117, 185, 238], (fraxlend_pair, collateral_to_deposit))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `assetOf` (0xe170a9bf) function"]
        pub fn asset_of(
            &self,
            adaptor_data: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::Address> {
            self.0
                .method_hash([225, 112, 169, 191], adaptor_data)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `assetsUsed` (0xaeffddde) function"]
        pub fn assets_used(
            &self,
            adaptor_data: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<
            M,
            ::std::vec::Vec<ethers::core::types::Address>,
        > {
            self.0
                .method_hash([174, 255, 221, 222], adaptor_data)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `balanceOf` (0x78415365) function"]
        pub fn balance_of(
            &self,
            adaptor_data: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::U256> {
            self.0
                .method_hash([120, 65, 83, 101], adaptor_data)
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `deposit` (0x69445c31) function"]
        pub fn deposit(
            &self,
            assets: ethers::core::types::U256,
            adaptor_data: ethers::core::types::Bytes,
            p2: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([105, 68, 92, 49], (assets, adaptor_data, p2))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `identifier` (0x7998a1c4) function"]
        pub fn identifier(&self) -> ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([121, 152, 161, 196], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `isDebt` (0x89353a09) function"]
        pub fn is_debt(&self) -> ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([137, 53, 58, 9], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `minimumHealthFactor` (0x1caff8b1) function"]
        pub fn minimum_health_factor(
            &self,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::U256> {
            self.0
                .method_hash([28, 175, 248, 177], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `removeCollateral` (0xd41ddc96) function"]
        pub fn remove_collateral(
            &self,
            collateral_amount: ethers::core::types::U256,
            fraxlend_pair: ethers::core::types::Address,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([212, 29, 220, 150], (collateral_amount, fraxlend_pair))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `revokeApproval` (0xd3bfe76a) function"]
        pub fn revoke_approval(
            &self,
            asset: ethers::core::types::Address,
            spender: ethers::core::types::Address,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([211, 191, 231, 106], (asset, spender))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `slippage` (0x3e032a3b) function"]
        pub fn slippage(&self) -> ethers::contract::builders::ContractCall<M, u32> {
            self.0
                .method_hash([62, 3, 42, 59], ())
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `withdraw` (0xc9111bd7) function"]
        pub fn withdraw(
            &self,
            p0: ethers::core::types::U256,
            p1: ethers::core::types::Address,
            p2: ethers::core::types::Bytes,
            p3: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([201, 17, 27, 215], (p0, p1, p2, p3))
                .expect("method not found (this should never happen)")
        }
        #[doc = "Calls the contract's `withdrawableFrom` (0xfa50e5d2) function"]
        pub fn withdrawable_from(
            &self,
            p0: ethers::core::types::Bytes,
            p1: ethers::core::types::Bytes,
        ) -> ethers::contract::builders::ContractCall<M, ethers::core::types::U256> {
            self.0
                .method_hash([250, 80, 229, 210], (p0, p1))
                .expect("method not found (this should never happen)")
        }
    }
    #[doc = "Container type for all input parameters for the `FRAX`function with signature `FRAX()` and selector `[176, 228, 85, 111]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "FRAX", abi = "FRAX()")]
    pub struct FraxCall;
    #[doc = "Container type for all input parameters for the `addCollateral`function with signature `addCollateral(address,uint256)` and selector `[109, 117, 185, 238]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "addCollateral", abi = "addCollateral(address,uint256)")]
    pub struct AddCollateralCall {
        pub fraxlend_pair: ethers::core::types::Address,
        pub collateral_to_deposit: ethers::core::types::U256,
    }
    #[doc = "Container type for all input parameters for the `assetOf`function with signature `assetOf(bytes)` and selector `[225, 112, 169, 191]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "assetOf", abi = "assetOf(bytes)")]
    pub struct AssetOfCall {
        pub adaptor_data: ethers::core::types::Bytes,
    }
    #[doc = "Container type for all input parameters for the `assetsUsed`function with signature `assetsUsed(bytes)` and selector `[174, 255, 221, 222]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "assetsUsed", abi = "assetsUsed(bytes)")]
    pub struct AssetsUsedCall {
        pub adaptor_data: ethers::core::types::Bytes,
    }
    #[doc = "Container type for all input parameters for the `balanceOf`function with signature `balanceOf(bytes)` and selector `[120, 65, 83, 101]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "balanceOf", abi = "balanceOf(bytes)")]
    pub struct BalanceOfCall {
        pub adaptor_data: ethers::core::types::Bytes,
    }
    #[doc = "Container type for all input parameters for the `deposit`function with signature `deposit(uint256,bytes,bytes)` and selector `[105, 68, 92, 49]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "deposit", abi = "deposit(uint256,bytes,bytes)")]
    pub struct DepositCall {
        pub assets: ethers::core::types::U256,
        pub adaptor_data: ethers::core::types::Bytes,
        pub p2: ethers::core::types::Bytes,
    }
    #[doc = "Container type for all input parameters for the `identifier`function with signature `identifier()` and selector `[121, 152, 161, 196]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "identifier", abi = "identifier()")]
    pub struct IdentifierCall;
    #[doc = "Container type for all input parameters for the `isDebt`function with signature `isDebt()` and selector `[137, 53, 58, 9]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "isDebt", abi = "isDebt()")]
    pub struct IsDebtCall;
    #[doc = "Container type for all input parameters for the `minimumHealthFactor`function with signature `minimumHealthFactor()` and selector `[28, 175, 248, 177]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "minimumHealthFactor", abi = "minimumHealthFactor()")]
    pub struct MinimumHealthFactorCall;
    #[doc = "Container type for all input parameters for the `removeCollateral`function with signature `removeCollateral(uint256,address)` and selector `[212, 29, 220, 150]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "removeCollateral", abi = "removeCollateral(uint256,address)")]
    pub struct RemoveCollateralCall {
        pub collateral_amount: ethers::core::types::U256,
        pub fraxlend_pair: ethers::core::types::Address,
    }
    #[doc = "Container type for all input parameters for the `revokeApproval`function with signature `revokeApproval(address,address)` and selector `[211, 191, 231, 106]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "revokeApproval", abi = "revokeApproval(address,address)")]
    pub struct RevokeApprovalCall {
        pub asset: ethers::core::types::Address,
        pub spender: ethers::core::types::Address,
    }
    #[doc = "Container type for all input parameters for the `slippage`function with signature `slippage()` and selector `[62, 3, 42, 59]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "slippage", abi = "slippage()")]
    pub struct SlippageCall;
    #[doc = "Container type for all input parameters for the `withdraw`function with signature `withdraw(uint256,address,bytes,bytes)` and selector `[201, 17, 27, 215]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "withdraw", abi = "withdraw(uint256,address,bytes,bytes)")]
    pub struct WithdrawCall(
        pub ethers::core::types::U256,
        pub ethers::core::types::Address,
        pub ethers::core::types::Bytes,
        pub ethers::core::types::Bytes,
    );
    #[doc = "Container type for all input parameters for the `withdrawableFrom`function with signature `withdrawableFrom(bytes,bytes)` and selector `[250, 80, 229, 210]`"]
    #[derive(
        Clone,
        Debug,
        Default,
        Eq,
        PartialEq,
        ethers :: contract :: EthCall,
        ethers :: contract :: EthDisplay,
        serde :: Deserialize,
        serde :: Serialize,
    )]
    #[ethcall(name = "withdrawableFrom", abi = "withdrawableFrom(bytes,bytes)")]
    pub struct WithdrawableFromCall(
        pub ethers::core::types::Bytes,
        pub ethers::core::types::Bytes,
    );
    #[derive(Debug, Clone, PartialEq, Eq, ethers :: contract :: EthAbiType)]
    pub enum CollateralFTokenAdaptorV1Calls {
        Frax(FraxCall),
        AddCollateral(AddCollateralCall),
        AssetOf(AssetOfCall),
        AssetsUsed(AssetsUsedCall),
        BalanceOf(BalanceOfCall),
        Deposit(DepositCall),
        Identifier(IdentifierCall),
        IsDebt(IsDebtCall),
        MinimumHealthFactor(MinimumHealthFactorCall),
        RemoveCollateral(RemoveCollateralCall),
        RevokeApproval(RevokeApprovalCall),
        Slippage(SlippageCall),
        Withdraw(WithdrawCall),
        WithdrawableFrom(WithdrawableFromCall),
    }
    impl ethers::core::abi::AbiDecode for CollateralFTokenAdaptorV1Calls {
        fn decode(data: impl AsRef<[u8]>) -> Result<Self, ethers::core::abi::AbiError> {
            if let Ok(decoded) = <FraxCall as ethers::core::abi::AbiDecode>::decode(data.as_ref()) {
                return Ok(CollateralFTokenAdaptorV1Calls::Frax(decoded));
            }
            if let Ok(decoded) =
                <AddCollateralCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::AddCollateral(decoded));
            }
            if let Ok(decoded) =
                <AssetOfCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::AssetOf(decoded));
            }
            if let Ok(decoded) =
                <AssetsUsedCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::AssetsUsed(decoded));
            }
            if let Ok(decoded) =
                <BalanceOfCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::BalanceOf(decoded));
            }
            if let Ok(decoded) =
                <DepositCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::Deposit(decoded));
            }
            if let Ok(decoded) =
                <IdentifierCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::Identifier(decoded));
            }
            if let Ok(decoded) = <IsDebtCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::IsDebt(decoded));
            }
            if let Ok(decoded) =
                <MinimumHealthFactorCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::MinimumHealthFactor(decoded));
            }
            if let Ok(decoded) =
                <RemoveCollateralCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::RemoveCollateral(decoded));
            }
            if let Ok(decoded) =
                <RevokeApprovalCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::RevokeApproval(decoded));
            }
            if let Ok(decoded) =
                <SlippageCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::Slippage(decoded));
            }
            if let Ok(decoded) =
                <WithdrawCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::Withdraw(decoded));
            }
            if let Ok(decoded) =
                <WithdrawableFromCall as ethers::core::abi::AbiDecode>::decode(data.as_ref())
            {
                return Ok(CollateralFTokenAdaptorV1Calls::WithdrawableFrom(decoded));
            }
            Err(ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ethers::core::abi::AbiEncode for CollateralFTokenAdaptorV1Calls {
        fn encode(self) -> Vec<u8> {
            match self {
                CollateralFTokenAdaptorV1Calls::Frax(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::AddCollateral(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::AssetOf(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::AssetsUsed(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::BalanceOf(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::Deposit(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::Identifier(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::IsDebt(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::MinimumHealthFactor(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::RemoveCollateral(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::RevokeApproval(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::Slippage(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::Withdraw(element) => element.encode(),
                CollateralFTokenAdaptorV1Calls::WithdrawableFrom(element) => element.encode(),
            }
        }
    }
    impl ::std::fmt::Display for CollateralFTokenAdaptorV1Calls {
        fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
            match self {
                CollateralFTokenAdaptorV1Calls::Frax(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::AddCollateral(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::AssetOf(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::AssetsUsed(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::BalanceOf(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::Deposit(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::Identifier(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::IsDebt(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::MinimumHealthFactor(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::RemoveCollateral(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::RevokeApproval(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::Slippage(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::Withdraw(element) => element.fmt(f),
                CollateralFTokenAdaptorV1Calls::WithdrawableFrom(element) => element.fmt(f),
            }
        }
    }
    impl ::std::convert::From<FraxCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: FraxCall) -> Self {
            CollateralFTokenAdaptorV1Calls::Frax(var)
        }
    }
    impl ::std::convert::From<AddCollateralCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: AddCollateralCall) -> Self {
            CollateralFTokenAdaptorV1Calls::AddCollateral(var)
        }
    }
    impl ::std::convert::From<AssetOfCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: AssetOfCall) -> Self {
            CollateralFTokenAdaptorV1Calls::AssetOf(var)
        }
    }
    impl ::std::convert::From<AssetsUsedCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: AssetsUsedCall) -> Self {
            CollateralFTokenAdaptorV1Calls::AssetsUsed(var)
        }
    }
    impl ::std::convert::From<BalanceOfCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: BalanceOfCall) -> Self {
            CollateralFTokenAdaptorV1Calls::BalanceOf(var)
        }
    }
    impl ::std::convert::From<DepositCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: DepositCall) -> Self {
            CollateralFTokenAdaptorV1Calls::Deposit(var)
        }
    }
    impl ::std::convert::From<IdentifierCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: IdentifierCall) -> Self {
            CollateralFTokenAdaptorV1Calls::Identifier(var)
        }
    }
    impl ::std::convert::From<IsDebtCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: IsDebtCall) -> Self {
            CollateralFTokenAdaptorV1Calls::IsDebt(var)
        }
    }
    impl ::std::convert::From<MinimumHealthFactorCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: MinimumHealthFactorCall) -> Self {
            CollateralFTokenAdaptorV1Calls::MinimumHealthFactor(var)
        }
    }
    impl ::std::convert::From<RemoveCollateralCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: RemoveCollateralCall) -> Self {
            CollateralFTokenAdaptorV1Calls::RemoveCollateral(var)
        }
    }
    impl ::std::convert::From<RevokeApprovalCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: RevokeApprovalCall) -> Self {
            CollateralFTokenAdaptorV1Calls::RevokeApproval(var)
        }
    }
    impl ::std::convert::From<SlippageCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: SlippageCall) -> Self {
            CollateralFTokenAdaptorV1Calls::Slippage(var)
        }
    }
    impl ::std::convert::From<WithdrawCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: WithdrawCall) -> Self {
            CollateralFTokenAdaptorV1Calls::Withdraw(var)
        }
    }
    impl ::std::convert::From<WithdrawableFromCall> for CollateralFTokenAdaptorV1Calls {
        fn from(var: WithdrawableFromCall) -> Self {
            CollateralFTokenAdaptorV1Calls::WithdrawableFrom(var)
        }
    }
}
